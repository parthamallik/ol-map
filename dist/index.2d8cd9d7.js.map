{"mappings":"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AC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,SACV,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,SACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CA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jB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,SACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,SACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,UACjB,CAAC,cAAe,UAChB,CAAC,aAAc,UACf,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,cAAe,gBAChB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,QACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,MAAO,UACR,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,OAAQ,UACT,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,OAAQ,UACT,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,cAAe,gBAChB,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,QACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,eAAgB,eACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,SACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,cAAe,gBAChB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,QAAS,UACV,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,eACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,eACjB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,iBAEjBC,GAAY,CACR,EACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,eACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,iBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBA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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","route-info.js","main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","var coordinates = [\n    [12.90715, 77.70536],\n    [12.90737, 77.70542],\n    [12.90771, 77.70549],\n    [12.90828, 77.7056],\n    [12.90866, 77.70563],\n    [12.90884, 77.70575],\n    [12.90892, 77.70579],\n    [12.90902, 77.70581],\n    [12.90937, 77.70585],\n    [12.9097, 77.70594],\n    [12.91019, 77.70612],\n    [12.9109, 77.7065],\n    [12.91147, 77.70688],\n    [12.91175, 77.70709],\n    [12.9119, 77.70723],\n    [12.912, 77.70736],\n    [12.91212, 77.70761],\n    [12.91219, 77.7079],\n    [12.91231, 77.70832],\n    [12.91239, 77.7087],\n    [12.9126, 77.71024],\n    [12.9128, 77.71165],\n    [12.91297, 77.7128],\n    [12.91298, 77.71294],\n    [12.91296, 77.71307],\n    [12.91288, 77.71328],\n    [12.91272, 77.71359],\n    [12.91229, 77.71444],\n    [12.91228, 77.71456],\n    [12.91288, 77.7149],\n    [12.91329, 77.71512],\n    [12.91382, 77.71543],\n    [12.91393, 77.71551],\n    [12.91404, 77.71563],\n    [12.91435, 77.71604],\n    [12.91468, 77.71646],\n    [12.91492, 77.71678],\n    [12.91511, 77.71712],\n    [12.91554, 77.71782],\n    [12.91555, 77.7179],\n    [12.91572, 77.71812],\n    [12.91586, 77.71841],\n    [12.91585, 77.71847],\n    [12.91576, 77.71917],\n    [12.91564, 77.71956],\n    [12.91553, 77.72005],\n    [12.91545, 77.72043],\n    [12.91544, 77.72073],\n    [12.91546, 77.72089],\n    [12.91565, 77.72148],\n    [12.91553, 77.72228],\n    [12.9155, 77.72249],\n    [12.91547, 77.72287],\n    [12.91549, 77.72325],\n    [12.91554, 77.72349],\n    [12.91568, 77.72452],\n    [12.91579, 77.72469],\n    [12.91587, 77.72476],\n    [12.91614, 77.72491],\n    [12.91664, 77.72513],\n    [12.91705, 77.72536],\n    [12.91726, 77.72551],\n    [12.91748, 77.72576],\n    [12.91756, 77.72589],\n    [12.91765, 77.72606],\n    [12.91774, 77.72634],\n    [12.91782, 77.72672],\n    [12.918, 77.72831],\n    [12.91813, 77.73011],\n    [12.91827, 77.73114],\n    [12.9187, 77.73425],\n    [12.91872, 77.7345],\n    [12.91878, 77.73469],\n    [12.91885, 77.73485],\n    [12.919, 77.73504],\n    [12.91911, 77.73522],\n    [12.9192, 77.73547],\n    [12.91919, 77.73583],\n    [12.919157484, 77.73631773999],\n    [12.91915, 77.73643],\n    [12.919194487, 77.73643],\n    [12.91919475672, 77.73643],\n    [12.91919502644, 77.73643],\n    [12.91922, 77.73643],\n    [12.91985116853, 77.73640289467],\n    [12.91985400763, 77.73640277274],\n    [12.91985427712, 77.73640276117],\n    [12.92011953842, 77.73639136957],\n    [12.92085, 77.73636],\n    [12.92085, 77.73646],\n    [12.92092, 77.73646],\n    [12.92091, 77.73692],\n    [12.92091, 77.73695],\n    [12.92089641934, 77.73703487959],\n    [12.92089596468, 77.7370377212],\n    [12.92089592099, 77.73703799427],\n    [12.92083, 77.73745],\n    [12.92079270856, 77.73761486846],\n    [12.92079208356, 77.73761763162],\n    [12.92079202259, 77.73761790118],\n    [12.92064, 77.73829],\n    [12.9206, 77.7385],\n    [12.9206, 77.73879],\n    [12.92072, 77.73929],\n    [12.92076, 77.73963],\n    [12.92075, 77.73983],\n    [12.92071, 77.74002],\n    [12.92062, 77.74018],\n    [12.92044, 77.74047],\n    [12.9204, 77.74058],\n    [12.92041, 77.74058],\n    [12.92036, 77.74098],\n    [12.92034239849, 77.74123229246],\n    [12.9203422102, 77.74123499141],\n    [12.92034219094, 77.74123526743],\n    [12.9203, 77.74184],\n    [12.92021, 77.74238],\n    [12.92021, 77.7425],\n    [12.92021, 77.74281],\n    [12.92017, 77.74324],\n    [12.92008, 77.74379],\n    [12.92006349506, 77.74393078047],\n    [12.92006316655, 77.74393358252],\n    [12.92006313434, 77.74393385727],\n    [12.91991, 77.74524],\n    [12.91978, 77.74627],\n    [12.91961500632, 77.74728168819],\n    [12.91961466882, 77.7472837576],\n    [12.91961462431, 77.74728403052],\n    [12.9194, 77.7486],\n    [12.91929, 77.74917],\n    [12.91919783275, 77.74960102232],\n    [12.91919728177, 77.74960359901],\n    [12.91919722397, 77.7496038693],\n    [12.91895, 77.75076],\n    [12.91892, 77.75089],\n    [12.91865318013, 77.75207402364],\n    [12.91865271403, 77.75207609197],\n    [12.91865265327, 77.75207636157],\n    [12.91844, 77.75302],\n    [12.91835, 77.75339],\n    [12.91831, 77.75365],\n    [12.91828799084, 77.75427360045],\n    [12.91828790857, 77.75427593124],\n    [12.91828789881, 77.75427620777],\n    [12.91828, 77.7545],\n    [12.91828, 77.75461],\n    [12.91827, 77.75505],\n    [12.91820836566, 77.75602246601],\n    [12.91820823911, 77.75602446265],\n    [12.91820822161, 77.75602473878],\n    [12.91818, 77.75647],\n    [12.91816, 77.7568],\n    [12.91811, 77.75713],\n    [12.918, 77.75771],\n    [12.91797374852, 77.75785515655],\n    [12.91797324402, 77.75785794614],\n    [12.91797319482, 77.7578582182],\n    [12.91783, 77.75865],\n    [12.91776, 77.75963],\n    [12.91769, 77.76],\n    [12.9172, 77.76186],\n    [12.9168819476, 77.76321172281],\n    [12.91688148045, 77.76321370819],\n    [12.91688141716, 77.76321397717],\n    [12.91688, 77.76322],\n    [12.91663, 77.76411],\n    [12.91643, 77.76471],\n    [12.91617, 77.765],\n    [12.91603, 77.76522],\n    [12.91595, 77.76539],\n    [12.91583, 77.7655],\n    [12.91567, 77.76555],\n    [12.91553, 77.76563],\n    [12.91534, 77.76582],\n    [12.91521, 77.76589],\n    [12.91505, 77.76594],\n    [12.91494, 77.76603],\n    [12.91488, 77.76613],\n    [12.9148, 77.76645],\n    [12.91468, 77.76732],\n    [12.91464, 77.76773],\n    [12.91458, 77.76802],\n    [12.91429512711, 77.76882120554],\n    [12.91429421419, 77.76882377312],\n    [12.91429412176, 77.76882403307],\n    [12.91426, 77.76892],\n    [12.91402, 77.76954],\n    [12.91378, 77.77008],\n    [12.91345, 77.77073],\n    [12.91323, 77.77112],\n    [12.91319, 77.77121],\n    [12.91312, 77.77118],\n    [12.91309, 77.77125],\n    [12.91316, 77.77128],\n    [12.91308, 77.77149],\n    [12.91291, 77.77193],\n    [12.91288, 77.77198],\n    [12.91276, 77.77214],\n    [12.9123, 77.77258],\n    [12.91194, 77.77295],\n    [12.91190185935, 77.77300721102],\n    [12.91190019466, 77.77300970806],\n    [12.9119000424, 77.77300993645],\n    [12.9118, 77.77316],\n    [12.91173, 77.77337],\n    [12.91151, 77.77439],\n    [12.91148, 77.77477],\n    [12.91139, 77.77509],\n    [12.9113, 77.77543],\n    [12.91129, 77.77556],\n    [12.91132, 77.77578],\n    [12.91141, 77.77618],\n    [12.9115, 77.77645],\n    [12.91164, 77.77671],\n    [12.91169, 77.77681],\n    [12.91178, 77.77686],\n    [12.9119475554, 77.776909281],\n    [12.91195, 77.77691],\n    [12.91202, 77.77701],\n    [12.91205, 77.77716],\n    [12.91208, 77.7777],\n    [12.91207, 77.77787],\n    [12.91196091735, 77.77862448912],\n    [12.91196048399, 77.77862748645],\n    [12.91196044442, 77.77862776016],\n    [12.91195, 77.7787],\n    [12.9119, 77.77892],\n    [12.91177, 77.77918],\n    [12.91154307102, 77.77947176609],\n    [12.91154049313, 77.77947508052],\n    [12.91154032491, 77.7794752968],\n    [12.91142, 77.77963],\n    [12.91119, 77.77996],\n    [12.91096138495, 77.78034864585],\n    [12.91095936725, 77.78035207595],\n    [12.91095922789, 77.78035231285],\n    [12.91089, 77.78047],\n    [12.91076, 77.7808],\n    [12.91061, 77.78135],\n    [12.91051401905, 77.78175449183],\n    [12.91051323005, 77.78175781691],\n    [12.91051316625, 77.78175808576],\n    [12.91047, 77.78194],\n    [12.91038, 77.78248],\n    [12.91009, 77.78377],\n    [12.91001, 77.78423],\n    [12.90981, 77.78568],\n    [12.90964, 77.78663],\n    [12.90943, 77.78757],\n    [12.90912, 77.78846],\n    [12.90906, 77.78867],\n    [12.90905, 77.78883],\n    [12.90908, 77.78924],\n    [12.90923, 77.78966],\n    [12.90923, 77.78998],\n    [12.90919, 77.79031],\n    [12.90903, 77.79164],\n    [12.90899, 77.79172],\n    [12.90889, 77.79184],\n    [12.9086, 77.79213],\n    [12.90825, 77.79258],\n    [12.90812, 77.79275],\n    [12.90797, 77.7931],\n    [12.90791, 77.79333],\n    [12.90781, 77.79383],\n    [12.9078, 77.79407],\n    [12.90792, 77.79487],\n    [12.9079725504, 77.79526412766],\n    [12.90797299155, 77.79526743631],\n    [12.9079730281, 77.79526771045],\n    [12.90798, 77.79532],\n    [12.90801, 77.79563],\n    [12.90801, 77.79576],\n    [12.908, 77.79596],\n    [12.9079, 77.79619],\n    [12.9078, 77.7963],\n    [12.90764, 77.79639],\n    [12.90737, 77.79646],\n    [12.90732, 77.79651],\n    [12.90721, 77.79686],\n    [12.90718, 77.79693],\n    [12.90704, 77.79712],\n    [12.9069, 77.79727],\n    [12.90677, 77.79741],\n    [12.90667, 77.79758],\n    [12.90665, 77.79764],\n    [12.90656, 77.79806],\n    [12.90653, 77.79813],\n    [12.90644, 77.79822],\n    [12.90628, 77.79832],\n    [12.90594274728, 77.79839708634],\n    [12.90593752683, 77.79839827959],\n    [12.90593726358, 77.79839833976],\n    [12.90593, 77.7984],\n    [12.90579, 77.79847],\n    [12.90547, 77.79869],\n    [12.90509, 77.79904],\n    [12.90459, 77.79961],\n    [12.90431, 77.80002],\n    [12.90395, 77.80042],\n    [12.90305, 77.80135],\n    [12.90276, 77.80165],\n    [12.90269, 77.80175],\n    [12.90251, 77.80203],\n    [12.90235, 77.80229],\n    [12.90226, 77.80249],\n    [12.90219, 77.80265],\n    [12.90172, 77.80371],\n    [12.9013, 77.8047],\n    [12.90129561064, 77.8047118513],\n    [12.9012943331, 77.80471530069],\n    [12.9012942373, 77.80471555934],\n    [12.9011, 77.80524],\n    [12.90051, 77.80679],\n    [12.90024, 77.80748],\n    [12.90006848026, 77.80783206691],\n    [12.90006682565, 77.80783546321],\n    [12.90006670507, 77.80783571071],\n    [12.90005, 77.80787],\n    [12.89987, 77.80821],\n    [12.89973, 77.80845],\n    [12.89942, 77.80879],\n    [12.89907, 77.80911],\n    [12.89855, 77.80956],\n    [12.89815, 77.80989],\n    [12.89783, 77.8102],\n    [12.89733, 77.81059],\n    [12.89693390517, 77.81084324122],\n    [12.89692943287, 77.81084610055],\n    [12.89692920398, 77.81084624689],\n    [12.89672, 77.81098],\n    [12.89644, 77.81114],\n    [12.896, 77.81146],\n    [12.89584, 77.81164],\n    [12.89572, 77.81198],\n    [12.89568, 77.81249],\n    [12.89561, 77.81298],\n    [12.89553, 77.81341],\n    [12.89525, 77.81444],\n    [12.89513, 77.81483],\n    [12.89507433369, 77.81494829094],\n    [12.89507275787, 77.81495163956],\n    [12.89507264062, 77.81495188872],\n    [12.89505, 77.815],\n    [12.89486, 77.81532],\n    [12.89463, 77.81562],\n    [12.89448, 77.81589],\n    [12.89431, 77.81625],\n    [12.89418, 77.81656],\n    [12.89411, 77.81681],\n    [12.89413, 77.81708],\n    [12.89416, 77.81724],\n    [12.89426, 77.81751],\n    [12.89435, 77.8177],\n    [12.89441, 77.81779],\n    [12.89451, 77.81788],\n    [12.89464, 77.81798],\n    [12.89486, 77.81819],\n    [12.89498, 77.81844],\n    [12.89502, 77.8186],\n    [12.89504, 77.81884],\n    [12.89504, 77.81929],\n    [12.895, 77.81948],\n    [12.89499, 77.81958],\n    [12.89498, 77.81977],\n    [12.8949, 77.82031],\n    [12.8949, 77.8205],\n    [12.89489750934, 77.82061208303],\n    [12.8948974298, 77.8206156625],\n    [12.89489742365, 77.8206159391],\n    [12.89489, 77.82095],\n    [12.89487, 77.82135],\n    [12.8948, 77.82209],\n    [12.89483, 77.82243],\n    [12.89481, 77.82272],\n    [12.89473, 77.82312],\n    [12.89465, 77.82337],\n    [12.89448, 77.82373],\n    [12.8944353216, 77.82382270774],\n    [12.89408, 77.82456],\n    [12.89402, 77.82473],\n    [12.89401, 77.82484],\n    [12.89404, 77.825],\n    [12.89413, 77.82514],\n    [12.89442, 77.82548],\n    [12.89524, 77.82634],\n    [12.89538, 77.82652],\n    [12.89548, 77.82674],\n    [12.89560935617, 77.82726049935],\n    [12.89561016568, 77.82726375663],\n    [12.89561023231, 77.82726402474],\n    [12.8959, 77.82843],\n    [12.89596, 77.82866],\n    [12.89597, 77.82874],\n    [12.89605830223, 77.82869752557],\n    [12.89676, 77.82836],\n    [12.89779, 77.82783],\n    [12.89806, 77.82768],\n    [12.89867, 77.82731],\n    [12.89884692325, 77.82722743602],\n    [12.89885087277, 77.82722559291],\n    [12.89885120014, 77.82722544014],\n    [12.89942, 77.82696],\n    [12.89973, 77.82682],\n    [12.90028, 77.82666],\n    [12.90044, 77.82662],\n    [12.90042, 77.82655],\n    [12.90056, 77.82652],\n    [12.90087, 77.82649],\n    [12.90127, 77.82648],\n    [12.90169, 77.82652],\n    [12.90196, 77.82651],\n    [12.9023, 77.8265],\n    [12.90285, 77.82655],\n    [12.9033, 77.82656],\n    [12.90353, 77.82656],\n    [12.90407, 77.82653],\n    [12.90445260422, 77.82653364384],\n    [12.90445816523, 77.8265336968],\n    [12.90445852487, 77.82653370023],\n    [12.90512, 77.82654],\n    [12.90557, 77.82654],\n    [12.90575516685, 77.8265333869],\n    [12.90575966552, 77.82653322624],\n    [12.90576002496, 77.8265332134],\n    [12.90585, 77.82653],\n    [12.90672, 77.82628],\n    [12.90716, 77.82612],\n    [12.90736, 77.82607],\n    [12.90772, 77.82602],\n    [12.90854, 77.82589],\n    [12.90874468203, 77.82585130418],\n    [12.90874918786, 77.82585045234],\n    [12.90874954156, 77.82585038547],\n    [12.91055, 77.82551],\n    [12.91119, 77.82541],\n    [12.91138937703, 77.8253422119],\n    [12.91139365123, 77.82534075867],\n    [12.91139399262, 77.8253406426],\n    [12.91169, 77.82524],\n    [12.91302, 77.82467],\n    [12.91312, 77.82462],\n    [12.91357, 77.82433],\n    [12.91393, 77.82414],\n    [12.91422, 77.82405],\n    [12.91457, 77.82398],\n    [12.91482, 77.82399],\n    [12.91526, 77.82408],\n    [12.9153, 77.8241],\n    [12.91535, 77.82405],\n    [12.91557, 77.82376],\n    [12.91575, 77.82355],\n    [12.91594, 77.82342],\n    [12.91627, 77.82323],\n    [12.91638394381, 77.8232000148],\n    [12.91638790889, 77.82319897136],\n    [12.91638825727, 77.82319887968],\n    [12.91646, 77.82318],\n    [12.91669, 77.82318],\n    [12.91707, 77.82322],\n    [12.91753, 77.82339],\n    [12.91802, 77.82346],\n    [12.91843, 77.82347],\n    [12.91906, 77.82344],\n    [12.92008183284, 77.82344],\n    [12.92009082208, 77.82344],\n    [12.92009118173, 77.82344],\n    [12.92019, 77.82344],\n    [12.9204, 77.82346],\n    [12.92055, 77.8235],\n    [12.92102, 77.82367],\n    [12.9219, 77.82397],\n    [12.92233, 77.82413],\n    [12.92252, 77.82423],\n    [12.92274, 77.82434],\n    [12.92297, 77.82441],\n    [12.92311, 77.82443],\n    [12.92349, 77.82444],\n    [12.92377, 77.82443],\n    [12.92411, 77.8244],\n    [12.92419646174, 77.82434361192],\n    [12.92434, 77.82425],\n    [12.92451, 77.82413],\n    [12.92467, 77.82407],\n    [12.92492, 77.82405],\n    [12.92516, 77.82406],\n    [12.9264, 77.82437],\n    [12.92729, 77.8246],\n    [12.92738, 77.82459],\n    [12.92745, 77.82454],\n    [12.92801, 77.82372],\n    [12.92856, 77.82267],\n    [12.92877, 77.82216],\n    [12.92886, 77.82184],\n    [12.92893356094, 77.82164528018],\n    [12.92893481615, 77.82164195757],\n    [12.92893494614, 77.82164161348],\n    [12.92903, 77.82139],\n    [12.92924, 77.82098],\n    [12.92935, 77.82075],\n    [12.92939, 77.82058],\n    [12.9294, 77.82047],\n    [12.92939, 77.8203],\n    [12.92935, 77.82001],\n    [12.92922, 77.81956],\n    [12.92918, 77.81935],\n    [12.92917, 77.81916],\n    [12.92919, 77.81907],\n    [12.92927, 77.81901],\n    [12.92938, 77.81899],\n    [12.9299, 77.81888],\n    [12.93134, 77.81855],\n    [12.93151, 77.81848],\n    [12.93167, 77.81827],\n    [12.93185, 77.81811],\n    [12.9329, 77.81735],\n    [12.93313, 77.8172],\n    [12.93367, 77.81694],\n    [12.93427, 77.81669],\n    [12.93467, 77.81649],\n    [12.93512, 77.81627],\n    [12.93614, 77.81585],\n    [12.9371004552, 77.81543837701],\n    [12.93710793217, 77.81543517259],\n    [12.93710826405, 77.81543503035],\n    [12.93747, 77.81528],\n    [12.93781, 77.81516],\n    [12.93797, 77.81514],\n    [12.93837, 77.81519],\n    [12.93858, 77.81523],\n    [12.93895, 77.81528],\n    [12.9393, 77.81528],\n    [12.93959, 77.81527],\n    [12.93981, 77.81519],\n    [12.94045, 77.81499],\n    [12.94085, 77.81495],\n    [12.94144, 77.81495],\n    [12.94234, 77.81504],\n    [12.94315121086, 77.81526686371],\n    [12.94315858716, 77.81526892657],\n    [12.94315893417, 77.81526902362],\n    [12.94352, 77.81537],\n    [12.9441, 77.81553],\n    [12.94436, 77.81558],\n    [12.94455, 77.81559],\n    [12.94476, 77.81558],\n    [12.94513, 77.81547],\n    [12.94549, 77.81539],\n    [12.94579, 77.81536],\n    [12.94602, 77.81533],\n    [12.94631, 77.81524],\n    [12.94669, 77.81519],\n    [12.94689, 77.81514],\n    [12.94707, 77.81505],\n    [12.94714, 77.815],\n    [12.94728, 77.81488],\n    [12.94738, 77.81474],\n    [12.94745, 77.81463],\n    [12.94764, 77.8142],\n    [12.94771, 77.81397],\n    [12.94773, 77.81384],\n    [12.94765, 77.81362],\n    [12.94746, 77.81327],\n    [12.94741, 77.81302],\n    [12.94746, 77.81257],\n    [12.94757, 77.81223],\n    [12.94771, 77.812],\n    [12.94817, 77.81156],\n    [12.94836, 77.81129],\n    [12.9485, 77.81105],\n    [12.94865, 77.81082],\n    [12.94867633934, 77.8107883928],\n    [12.9486786637, 77.81078560357],\n    [12.94867889745, 77.81078532307],\n    [12.9487, 77.81076],\n    [12.94879, 77.81073],\n    [12.94891, 77.81075],\n    [12.94923, 77.81083],\n    [12.94922, 77.81091],\n    [12.94927, 77.81091],\n    [12.94944, 77.81092],\n    [12.94965, 77.81092],\n    [12.94975, 77.81087],\n    [12.9498, 77.81083],\n    [12.94989, 77.81055],\n    [12.94996, 77.8103],\n    [12.95007, 77.80988],\n    [12.95013, 77.80981],\n    [12.95017, 77.80979],\n    [12.95021, 77.80981],\n    [12.95027, 77.80984],\n    [12.95106, 77.81007],\n    [12.95133, 77.81009],\n    [12.95145, 77.81007],\n    [12.95173, 77.80993],\n    [12.95258, 77.80941],\n    [12.95262367957, 77.80938186747],\n    [12.95262680661, 77.80937985345],\n    [12.95262711124, 77.80937965725],\n    [12.95317, 77.80903],\n    [12.95333, 77.80891],\n    [12.95349, 77.80879],\n    [12.95345, 77.80873],\n    [12.95348, 77.8087],\n    [12.9536972143, 77.80851987165],\n    [12.95370056012, 77.80851709707],\n    [12.95370083987, 77.80851686509],\n    [12.9543, 77.80802],\n    [12.9548, 77.80748],\n    [12.95489, 77.80737],\n    [12.95491387175, 77.80733248725],\n    [12.95496, 77.80726],\n    [12.95492, 77.80715],\n    [12.95478, 77.80673],\n    [12.95468, 77.80639],\n    [12.95464, 77.80599],\n    [12.95462, 77.8054],\n    [12.95462, 77.80497],\n    [12.95464, 77.80487],\n    [12.95472, 77.80473],\n    [12.95478246556, 77.80467143857],\n    [12.95478520918, 77.80466886642],\n    [12.95478547473, 77.80466861747],\n    [12.95488, 77.80458],\n    [12.95522, 77.80433],\n    [12.95542, 77.80415],\n    [12.95556, 77.80397],\n    [12.9561082965, 77.80313042164],\n    [12.95611077773, 77.80312662224],\n    [12.95611097797, 77.80312631563],\n    [12.9562, 77.80299],\n    [12.95626, 77.80274],\n    [12.95626, 77.80254],\n    [12.95603, 77.80187],\n    [12.95587, 77.80158],\n    [12.95563, 77.80131],\n    [12.95523, 77.80092],\n    [12.95472, 77.80048],\n    [12.95453, 77.80031],\n    [12.95446, 77.80018],\n    [12.95439, 77.79974],\n    [12.95435, 77.7994],\n    [12.95431, 77.799],\n    [12.95421, 77.79865],\n    [12.95405528391, 77.79824045731],\n    [12.95405404334, 77.79823717344],\n    [12.95405391333, 77.79823682931],\n    [12.95404, 77.7982],\n    [12.9539, 77.79789],\n    [12.9538, 77.7977],\n    [12.95374, 77.79759],\n    [12.9537, 77.79743],\n    [12.95365, 77.7972],\n    [12.95351, 77.7971],\n    [12.95328, 77.79703],\n    [12.95271, 77.79697],\n    [12.95241, 77.797],\n    [12.95171, 77.79715],\n    [12.95134, 77.79724],\n    [12.9512, 77.79726],\n    [12.95067, 77.7973],\n    [12.94997, 77.7973],\n    [12.94958, 77.79729],\n    [12.94947001085, 77.7972984607],\n    [12.94946592694, 77.79729877485],\n    [12.94946556826, 77.79729880244],\n    [12.94945, 77.7973],\n    [12.94917, 77.79742],\n    [12.94886, 77.79756],\n    [12.94848, 77.79769],\n    [12.94806, 77.7978],\n    [12.9474, 77.79794],\n    [12.94681, 77.79806],\n    [12.94666, 77.79808],\n    [12.94626, 77.79812],\n    [12.9454, 77.79819],\n    [12.94476, 77.79822],\n    [12.94410750133, 77.79826762778],\n    [12.94410052484, 77.79826813701],\n    [12.94410016606, 77.7982681632],\n    [12.94339, 77.79832],\n    [12.94251, 77.7984],\n    [12.94226, 77.7984],\n    [12.94206, 77.79835],\n    [12.94176, 77.79823],\n    [12.94127, 77.79802],\n    [12.94075463731, 77.79785117425],\n    [12.94074883678, 77.79784927408],\n    [12.94074849413, 77.79784916183],\n    [12.94069, 77.79783],\n    [12.93998, 77.79764],\n    [12.93966, 77.79759],\n    [12.93951, 77.79758],\n    [12.93877, 77.79752],\n    [12.9381, 77.79746],\n    [12.93734, 77.79739],\n    [12.93679, 77.79733],\n    [12.93671, 77.79732],\n    [12.93672, 77.79725],\n    [12.93675, 77.79709],\n    [12.93707, 77.79625],\n    [12.93726, 77.79554],\n    [12.93741, 77.79488],\n    [12.93749, 77.79454],\n    [12.9375, 77.79454],\n    [12.93762, 77.79399],\n    [12.93779, 77.79303],\n    [12.93781, 77.79238],\n    [12.93787777245, 77.79171074865],\n    [12.93787807145, 77.79170779599],\n    [12.93787810862, 77.79170742891],\n    [12.93789, 77.79159],\n    [12.93798, 77.79041],\n    [12.9382, 77.78862],\n    [12.93822353195, 77.78843174479],\n    [12.93822395697, 77.78842834463],\n    [12.93822400273, 77.78842797857],\n    [12.93824, 77.7883],\n    [12.93826, 77.78778],\n    [12.93824, 77.78771],\n    [12.93814, 77.78759],\n    [12.93791, 77.78737],\n    [12.93785, 77.78728],\n    [12.93783, 77.78711],\n    [12.93787, 77.78664],\n    [12.93786, 77.78657],\n    [12.93786000002, 77.78641357697],\n    [12.93786000002, 77.78641013493],\n    [12.93786000002, 77.78640976587],\n    [12.93786, 77.78633],\n    [12.93779, 77.78632],\n    [12.93779, 77.78628],\n    [12.93784, 77.78612],\n    [12.9381430462, 77.78543814608],\n    [12.93816, 77.7854],\n    [12.93813, 77.78541],\n    [12.93803, 77.78542],\n    [12.93791, 77.78542],\n    [12.93775, 77.78538],\n    [12.93758, 77.78531],\n    [12.9373776286, 77.78525217958],\n    [12.93737334379, 77.78525095535],\n    [12.93737291063, 77.78525083159],\n    [12.9373, 77.78523],\n    [12.93697, 77.78519],\n    [12.93677, 77.78517],\n    [12.9366, 77.78511],\n    [12.93663, 77.78504],\n    [12.93661, 77.78503],\n    [12.9364, 77.78496],\n    [12.93603, 77.7848],\n    [12.93577433206, 77.78476882096],\n    [12.9357695898, 77.78476824264],\n    [12.93576914331, 77.78476818819],\n    [12.93562, 77.78475],\n    [12.93507, 77.78476],\n    [12.93495, 77.78481],\n    [12.93483, 77.78489],\n    [12.93469, 77.78497],\n    [12.93429, 77.78496],\n    [12.93379, 77.78502],\n    [12.93365, 77.78507],\n    [12.93358039252, 77.78507580062],\n    [12.93357661541, 77.78507611538],\n    [12.93357616724, 77.78507615273],\n    [12.93353, 77.78508],\n    [12.93298, 77.78498],\n    [12.93248, 77.78496],\n    [12.93247, 77.78503],\n    [12.93241, 77.78504],\n    [12.93224681255, 77.78508799631],\n    [12.93224273096, 77.78508919677],\n    [12.93224229873, 77.7850893239],\n    [12.93224, 77.78509],\n    [12.93214, 77.78509],\n    [12.93105, 77.78496],\n    [12.93095, 77.78488],\n    [12.93089, 77.7848],\n    [12.93082, 77.78426],\n    [12.9308, 77.78414],\n    [12.93073, 77.78407],\n    [12.93033, 77.78383],\n    [12.92999, 77.78361],\n    [12.92943, 77.78321],\n    [12.92909, 77.78296],\n    [12.92869, 77.78274],\n    [12.92798, 77.78243],\n    [12.92761, 77.78224],\n    [12.92744, 77.78214],\n    [12.92668, 77.78177],\n    [12.92663, 77.78177],\n    [12.92659, 77.78181],\n    [12.92654, 77.78175],\n    [12.92632, 77.78166],\n    [12.92554, 77.78131],\n    [12.92509, 77.78119],\n    [12.92426, 77.78087],\n    [12.92381, 77.78062],\n    [12.92335, 77.78038],\n    [12.92302, 77.78017],\n    [12.92261, 77.77992],\n    [12.92211, 77.77961],\n    [12.9218008674, 77.77945199879],\n    [12.92179654256, 77.77944978832],\n    [12.92179614009, 77.77944958261],\n    [12.92166, 77.77938],\n    [12.92147, 77.77934],\n    [12.92121, 77.77928],\n    [12.9209, 77.77913],\n    [12.92044, 77.7789],\n    [12.92011, 77.77877],\n    [12.91922, 77.77833],\n    [12.91841, 77.77801],\n    [12.91802, 77.77789],\n    [12.91792, 77.77788],\n    [12.9176, 77.77775],\n    [12.91754, 77.77773],\n    [12.9175, 77.77775],\n    [12.91742, 77.77785],\n    [12.91674425836, 77.77781663002],\n    [12.91673722993, 77.77781628294],\n    [12.91673678081, 77.77781626076],\n    [12.91661, 77.77781],\n    [12.91538, 77.77756],\n    [12.91513, 77.77754],\n    [12.91502, 77.77756],\n    [12.91465, 77.7777],\n    [12.91456, 77.77771],\n    [12.91438, 77.77769],\n    [12.91385, 77.7776],\n    [12.91321, 77.77747],\n    [12.91268, 77.77736],\n    [12.9125, 77.77731],\n    [12.91223, 77.77714],\n    [12.9121, 77.7771],\n    [12.91204, 77.7771],\n    [12.91197, 77.77712],\n    [12.91195, 77.77708],\n    [12.91192, 77.77699],\n    [12.91191, 77.77697],\n    [12.91179, 77.77694],\n    [12.91169, 77.7769],\n    [12.91166, 77.77688],\n    [12.91164, 77.77689],\n    [12.91154, 77.77693],\n    [12.91151040442, 77.7769398652],\n    [12.91124, 77.77703],\n    [12.91087, 77.77718],\n    [12.91069, 77.77724],\n    [12.91011, 77.77729],\n    [12.90996, 77.77724],\n    [12.90982, 77.77714],\n    [12.90974, 77.77708],\n    [12.90965, 77.77699],\n    [12.90958, 77.77696],\n    [12.90959, 77.77689],\n    [12.90953, 77.7768],\n    [12.90935, 77.77668],\n    [12.90909, 77.77657],\n    [12.90894, 77.77658],\n    [12.90861, 77.77654],\n    [12.90857, 77.77653],\n    [12.90859, 77.77646],\n    [12.90829, 77.77637],\n    [12.90821, 77.77631],\n    [12.90824, 77.77627],\n    [12.90827, 77.77621],\n    [12.90830923137, 77.77610799847],\n    [12.90831180009, 77.77610131978],\n    [12.90831196513, 77.77610089068],\n    [12.90832, 77.77608],\n    [12.90834, 77.77573],\n    [12.9084, 77.77557],\n    [12.90846, 77.77532],\n    [12.9085, 77.77513],\n    [12.90859, 77.77498],\n    [12.90853, 77.77494],\n    [12.90854, 77.7749],\n    [12.9086, 77.77464],\n    [12.9086, 77.77448],\n    [12.90861, 77.77434],\n    [12.90869, 77.77412],\n    [12.90874, 77.77398],\n    [12.90876, 77.77379],\n    [12.90879, 77.77362],\n    [12.90886, 77.77364],\n    [12.90893, 77.77361],\n    [12.909, 77.77359],\n    [12.90885, 77.77316],\n    [12.90868, 77.77285],\n    [12.90835, 77.77258],\n    [12.90823994513, 77.77246444232],\n    [12.90823481193, 77.77245905246],\n    [12.90823449769, 77.77245872251],\n    [12.90815, 77.77237],\n    [12.90797, 77.77225],\n    [12.90796, 77.77206],\n    [12.90793, 77.77183],\n    [12.90783, 77.77169],\n    [12.90772, 77.77142],\n    [12.90758, 77.77124],\n    [12.90743, 77.77114],\n    [12.9074, 77.77092],\n    [12.90727, 77.77071],\n    [12.90726392978, 77.77070613713],\n    [12.90725794725, 77.77070233006],\n    [12.90725756515, 77.77070208691],\n    [12.90716, 77.77064],\n    [12.90628, 77.77048],\n    [12.90611, 77.77041],\n    [12.90599, 77.7703],\n    [12.90595, 77.77014],\n    [12.90604, 77.76978],\n    [12.90619, 77.76962],\n    [12.90633, 77.76952],\n    [12.90642, 77.7694],\n    [12.90659, 77.76898],\n    [12.90661452375, 77.76887645554],\n    [12.90661616396, 77.76886953023],\n    [12.90661627012, 77.76886908199],\n    [12.90668, 77.7686],\n    [12.90665, 77.76841],\n    [12.90656, 77.76791],\n    [12.90622, 77.76509],\n    [12.90624, 77.76476],\n    [12.90617015533, 77.7647271319],\n    [12.9059, 77.7646],\n    [12.90559216941, 77.76446074324],\n    [12.90558450235, 77.76445727481],\n    [12.90558400869, 77.76445705149],\n    [12.90548, 77.76441],\n    [12.90489, 77.76424],\n    [12.90449, 77.76411],\n    [12.90441, 77.76406],\n    [12.90416, 77.76388],\n    [12.90272, 77.76351],\n    [12.90248, 77.76345],\n    [12.90245, 77.76345],\n    [12.90247, 77.76338],\n    [12.90225, 77.76332],\n    [12.90148, 77.76312],\n    [12.90069, 77.76293],\n    [12.90025, 77.7628],\n    [12.89984026163, 77.76270894701],\n    [12.89983141333, 77.76270698073],\n    [12.89983088603, 77.76270686355],\n    [12.8998, 77.7627],\n    [12.89979, 77.76269],\n    [12.89976, 77.76264],\n    [12.89957, 77.76223],\n    [12.89912, 77.76117],\n    [12.89885, 77.76057],\n    [12.89878, 77.7606],\n    [12.89876, 77.76055],\n    [12.89865, 77.76024],\n    [12.89861, 77.76008],\n    [12.89859, 77.76002],\n    [12.89856, 77.76],\n    [12.89853, 77.75999],\n    [12.89801, 77.75994],\n    [12.89797, 77.75994],\n    [12.89798, 77.75987],\n    [12.89773, 77.75983],\n    [12.89734, 77.75979],\n    [12.8969, 77.75974],\n    [12.89637, 77.75972],\n    [12.89549, 77.75966],\n    [12.89523, 77.75966],\n    [12.89488, 77.75969],\n    [12.89486943214, 77.75969125382],\n    [12.89486249776, 77.75969207654],\n    [12.8948619618, 77.75969214013],\n    [12.89429, 77.75976],\n    [12.89394, 77.75975],\n    [12.89334, 77.75964],\n    [12.89265, 77.75951],\n    [12.89243, 77.7595],\n    [12.89224, 77.75953],\n    [12.89188022074, 77.75951972056],\n    [12.89187137042, 77.75951946769],\n    [12.8918708311, 77.75951945228],\n    [12.89119, 77.7595],\n    [12.89084, 77.75956],\n    [12.89084, 77.75957],\n    [12.89039, 77.75964],\n    [12.88943, 77.75951],\n    [12.88907, 77.75947],\n    [12.8889, 77.75945],\n    [12.88863, 77.75943],\n    [12.88829, 77.75934],\n    [12.8878, 77.75917],\n    [12.88742, 77.75903],\n    [12.88739, 77.75901],\n    [12.88736, 77.75908],\n    [12.8872, 77.75901],\n    [12.88674, 77.75881],\n    [12.88641, 77.75863],\n    [12.88625, 77.75853],\n    [12.88588, 77.75829],\n    [12.8858, 77.75825],\n    [12.88572, 77.75825],\n    [12.88555, 77.75832],\n    [12.88552, 77.75826],\n    [12.88543, 77.75828],\n    [12.88528, 77.75826],\n    [12.88517, 77.75823],\n    [12.88501, 77.75815],\n    [12.8847, 77.75805],\n    [12.88440858701, 77.75792416249],\n    [12.88440092148, 77.75792085238],\n    [12.88440042421, 77.75792063765],\n    [12.88426, 77.75786],\n    [12.88332, 77.75741],\n    [12.8833, 77.75748],\n    [12.88242, 77.75705],\n    [12.88207, 77.7569],\n    [12.88201541216, 77.75688284381],\n    [12.8817683642, 77.75680520017],\n    [12.88172, 77.75679],\n    [12.88073, 77.7565],\n    [12.8806, 77.75645],\n    [12.88043, 77.75634],\n    [12.88036, 77.75627],\n    [12.88019, 77.7561],\n    [12.88006, 77.756],\n    [12.87966, 77.75576],\n    [12.87969, 77.7557],\n    [12.87966, 77.75568],\n    [12.87927, 77.75551],\n    [12.87915, 77.75544],\n    [12.87911, 77.7555],\n    [12.87903, 77.75546],\n    [12.87888, 77.75531],\n    [12.87885, 77.75527],\n    [12.87882, 77.75521],\n    [12.8786, 77.7552],\n    [12.87787, 77.75513],\n    [12.87781, 77.75509],\n    [12.87775, 77.75494],\n    [12.87774, 77.75491],\n    [12.87735, 77.75483],\n    [12.87716, 77.75476],\n    [12.8765, 77.75445],\n    [12.87641, 77.75437],\n    [12.87636, 77.75426],\n    [12.8763, 77.75416],\n    [12.87621, 77.75409],\n    [12.87611889574, 77.75403432515],\n    [12.87611176077, 77.7540299649],\n    [12.87611129726, 77.75402968164],\n    [12.87603, 77.75398],\n    [12.87604, 77.75361],\n    [12.8761, 77.75332],\n    [12.87616, 77.7531],\n    [12.87621, 77.75285],\n    [12.87611, 77.75216],\n    [12.87607, 77.75165],\n    [12.87604, 77.75133],\n    [12.87599, 77.75123],\n    [12.87585, 77.7511],\n    [12.87569, 77.75093],\n    [12.87545, 77.75065],\n    [12.87540570798, 77.75060986029],\n    [12.87539966368, 77.75060438264],\n    [12.87539925934, 77.75060401621],\n    [12.87513, 77.75036],\n    [12.87461, 77.74995],\n    [12.87449, 77.74986],\n    [12.87431, 77.74979],\n    [12.87412, 77.74973],\n    [12.87327, 77.74961],\n    [12.87297, 77.74956],\n    [12.87273, 77.74956],\n    [12.87254, 77.74953],\n    [12.87232, 77.74945],\n    [12.87229956231, 77.74944166355],\n    [12.87229211703, 77.74943862666],\n    [12.87229161569, 77.74943842216],\n    [12.87156, 77.74914],\n    [12.87132, 77.74902],\n    [12.87103, 77.74883],\n    [12.87069, 77.74856],\n    [12.87068, 77.74855],\n    [12.87049, 77.74836],\n    [12.87022, 77.74811],\n    [12.87005, 77.74799],\n    [12.86959, 77.74775],\n    [12.86906, 77.74755],\n    [12.86743, 77.74684],\n    [12.86704, 77.74665],\n    [12.8666, 77.7464],\n    [12.86619, 77.7462],\n    [12.86604, 77.74612],\n    [12.86551, 77.74581],\n    [12.86494, 77.74554],\n    [12.86445553448, 77.74530167342],\n    [12.86444637757, 77.7452971688],\n    [12.86444589109, 77.74529692949],\n    [12.8637, 77.74493],\n    [12.86338, 77.74482],\n    [12.86284, 77.74469],\n    [12.86229, 77.74453],\n    [12.86172, 77.74424],\n    [12.86141, 77.74412],\n    [12.86127906312, 77.74407971172],\n    [12.86115, 77.74404],\n    [12.86113, 77.74385],\n    [12.86119, 77.74325],\n    [12.86128, 77.74267],\n    [12.86131, 77.74251],\n    [12.86130094681, 77.74229272312],\n    [12.86130061787, 77.74228482863],\n    [12.86130059483, 77.74228427574],\n    [12.8613, 77.74227],\n    [12.86126, 77.74197],\n    [12.86123, 77.74188],\n    [12.86119, 77.74181],\n    [12.86102, 77.74173],\n    [12.86079, 77.74164],\n    [12.86075, 77.74161],\n    [12.86072, 77.74158],\n    [12.8607, 77.74146],\n    [12.86067, 77.74132],\n    [12.8602, 77.74105],\n    [12.86012, 77.74096],\n    [12.86009, 77.74084],\n    [12.86002, 77.74067],\n    [12.85999, 77.7405],\n    [12.86, 77.74037],\n    [12.86018, 77.73966],\n    [12.86027, 77.73931],\n    [12.86037, 77.73879],\n    [12.86047, 77.73791],\n    [12.86045, 77.73783],\n    [12.8604, 77.73778],\n    [12.86030602972, 77.73774362437],\n    [12.8602981961, 77.737740592],\n    [12.86029769134, 77.73774039661],\n    [12.86009, 77.73766],\n    [12.8598, 77.7375],\n    [12.85971, 77.7374],\n    [12.8597, 77.73733],\n    [12.85976, 77.73698],\n    [12.8598, 77.73673],\n    [12.85984, 77.73615],\n    [12.85986, 77.73609],\n    [12.85989, 77.73604],\n    [12.85998, 77.73595],\n    [12.86012, 77.73584],\n    [12.86016, 77.73579],\n    [12.86033, 77.73541],\n    [12.86056, 77.73481],\n    [12.86061, 77.73478],\n    [12.86074, 77.73433],\n    [12.8608, 77.73399],\n    [12.8608955104, 77.73361919583],\n    [12.86089747565, 77.73361156606],\n    [12.86089761346, 77.73361103102],\n    [12.86097, 77.73333],\n    [12.8610694481, 77.73301839597],\n    [12.86112, 77.73286],\n    [12.86121, 77.73253],\n    [12.86121, 77.73191],\n    [12.86116, 77.7315],\n    [12.86115, 77.73145],\n    [12.86108, 77.73145],\n    [12.86107, 77.73089],\n    [12.86104, 77.73056],\n    [12.86092, 77.7293],\n    [12.86089, 77.72903],\n    [12.86087595462, 77.7289240201],\n    [12.86087490113, 77.72891607098],\n    [12.86087482845, 77.72891552256],\n    [12.86078, 77.7282],\n    [12.86077, 77.72749],\n    [12.86074, 77.72716],\n    [12.86077, 77.72684],\n    [12.86078, 77.72622],\n    [12.86076, 77.72592],\n    [12.86068, 77.7252],\n    [12.86066493421, 77.72507043357],\n    [12.86066401076, 77.7250624919],\n    [12.86066394686, 77.72506194234],\n    [12.86063, 77.72477],\n    [12.86057, 77.72443],\n    [12.86056, 77.72438],\n    [12.86063, 77.72436],\n    [12.86059, 77.72418],\n    [12.86053, 77.72362],\n    [12.86045, 77.72296],\n    [12.86039, 77.72195],\n    [12.86036599409, 77.72121381103],\n    [12.86036575346, 77.72120643183],\n    [12.86036573542, 77.72120587869],\n    [12.86036, 77.72103],\n    [12.86038, 77.72062],\n    [12.8604, 77.72036],\n    [12.86033, 77.72035],\n    [12.86033, 77.72032],\n    [12.86031, 77.71995],\n    [12.86028, 77.71942],\n    [12.8603, 77.71938],\n    [12.86039, 77.71935],\n    [12.86039, 77.71831],\n    [12.86037, 77.71807],\n    [12.86034, 77.71796],\n    [12.86023, 77.71784],\n    [12.86017, 77.71779],\n    [12.86012, 77.71784],\n    [12.86003, 77.71775],\n    [12.85977, 77.71739],\n    [12.85975, 77.71729],\n    [12.85979577504, 77.71716284721],\n    [12.8597985053, 77.71715526313],\n    [12.85979869221, 77.71715474395],\n    [12.85984, 77.71704],\n    [12.86011, 77.71608],\n    [12.86013, 77.71596],\n    [12.86013, 77.71582],\n    [12.86002, 77.71509],\n    [12.85999, 77.71493],\n    [12.85984, 77.71445],\n    [12.85954, 77.71356],\n    [12.85953389766, 77.71353965885],\n    [12.85953157296, 77.71353190984],\n    [12.85953141427, 77.71353138087],\n    [12.85951, 77.71346],\n    [12.85943, 77.71336],\n    [12.85901, 77.71311],\n    [12.85861, 77.71296],\n    [12.85847, 77.7128],\n    [12.85843, 77.71267],\n    [12.85844, 77.71251],\n    [12.85853, 77.71231],\n    [12.85854, 77.71225],\n    [12.85853, 77.71216],\n    [12.85848, 77.71212],\n    [12.85774, 77.71214],\n    [12.85765, 77.71212],\n    [12.85759, 77.71207],\n    [12.85758, 77.71201],\n    [12.85758162177, 77.71200175606],\n    [12.85758318584, 77.71199380546],\n    [12.85758329256, 77.71199326295],\n    [12.8577, 77.7114],\n    [12.85775, 77.71121],\n    [12.85775, 77.71102],\n    [12.85773, 77.71095],\n    [12.8575, 77.711],\n    [12.85704, 77.71101],\n    [12.85686, 77.71099],\n    [12.85681, 77.71096],\n    [12.85682, 77.71095],\n    [12.85684, 77.71093],\n    [12.85679, 77.71088],\n    [12.85692, 77.71074],\n    [12.85707, 77.7105],\n    [12.85731, 77.71025],\n    [12.85751, 77.71005],\n    [12.85761, 77.70991],\n    [12.85779, 77.7096],\n    [12.85812, 77.70897],\n    [12.85835736723, 77.70860547189],\n    [12.85836199001, 77.7085983726],\n    [12.8583622897, 77.70859791236],\n    [12.8584, 77.70854],\n    [12.85849, 77.70842],\n    [12.85858, 77.70824],\n    [12.85875, 77.70758],\n    [12.85883, 77.70733],\n    [12.85893, 77.70714],\n    [12.85932, 77.70661],\n    [12.85964, 77.70609],\n    [12.85967725242, 77.70605470826],\n    [12.85968315635, 77.70604911507],\n    [12.85968355272, 77.70604873956],\n    [12.85983, 77.70591],\n    [12.85999, 77.70581],\n    [12.8602, 77.70576],\n    [12.86068824558, 77.70574809159],\n    [12.86069877595, 77.70574783475],\n    [12.86069931538, 77.70574782159],\n    [12.86102, 77.70574],\n    [12.86117, 77.70571],\n    [12.86136, 77.70566],\n    [12.86135, 77.70566],\n    [12.86145, 77.70556],\n    [12.86152, 77.70552],\n    [12.86176, 77.70548],\n    [12.86189994672, 77.70547575919],\n    [12.86190860728, 77.70547549675],\n    [12.86190914662, 77.70547548041],\n    [12.86209, 77.70547],\n    [12.86253, 77.70549],\n    [12.86334, 77.70551],\n    [12.86354, 77.70548],\n    [12.86365, 77.70545],\n    [12.86383, 77.70535],\n    [12.86378, 77.70539],\n    [12.86382, 77.70545],\n    [12.86404, 77.70529],\n    [12.86426, 77.70514],\n    [12.86463, 77.70502],\n    [12.8653, 77.70491],\n    [12.86558147011, 77.70485226257],\n    [12.86559067167, 77.70485037507],\n    [12.86559120076, 77.70485026654],\n    [12.86569, 77.70483],\n    [12.86598, 77.7047],\n    [12.86673, 77.70442],\n    [12.86718, 77.70421],\n    [12.86723, 77.70418],\n    [12.86724, 77.70418],\n    [12.86739380407, 77.70408047981],\n    [12.86740104322, 77.70407579565],\n    [12.86740149958, 77.70407550036],\n    [12.86758, 77.70396],\n    [12.86804, 77.70375],\n    [12.86835649469, 77.70364450178],\n    [12.86843, 77.70362],\n    [12.86842, 77.70355],\n    [12.86846, 77.70354],\n    [12.86881, 77.70348],\n    [12.86887130944, 77.70346467265],\n    [12.86887930504, 77.70346267375],\n    [12.86887982927, 77.70346254269],\n    [12.86901, 77.70343],\n    [12.86933, 77.70317],\n    [12.86959, 77.70279],\n    [12.8697, 77.70266],\n    [12.86983, 77.70259],\n    [12.87018, 77.70249],\n    [12.8705, 77.70234],\n    [12.87065, 77.70225],\n    [12.87071, 77.7022],\n    [12.87067, 77.70217],\n    [12.87071, 77.7022],\n    [12.87086, 77.70209],\n    [12.87095230006, 77.70202684742],\n    [12.87095919739, 77.7020221282],\n    [12.87095964627, 77.70202182107],\n    [12.87124, 77.70183],\n    [12.87152, 77.7017],\n    [12.87186, 77.70161],\n    [12.87215, 77.70161],\n    [12.87273, 77.70167],\n    [12.87331, 77.70168],\n    [12.87358, 77.70166],\n    [12.87379, 77.7016],\n    [12.87427, 77.70144],\n    [12.8746, 77.70129],\n    [12.87470704043, 77.70123880678],\n    [12.87471466509, 77.70123516021],\n    [12.87471515412, 77.70123492632],\n    [12.87483, 77.70118],\n    [12.87533, 77.7008],\n    [12.87553, 77.70061],\n    [12.87602, 77.70009],\n    [12.87618179836, 77.69993629159],\n    [12.87618799607, 77.69993040376],\n    [12.87618839196, 77.69993002767],\n    [12.87622, 77.6999],\n    [12.87637, 77.6998],\n    [12.87657, 77.69972],\n    [12.87701, 77.69962],\n    [12.87715, 77.69957],\n    [12.87729, 77.6995],\n    [12.87749, 77.69938],\n    [12.87809, 77.69895],\n    [12.87813019463, 77.69892320359],\n    [12.87813696946, 77.69891868704],\n    [12.87813742189, 77.69891838542],\n    [12.87815, 77.69891],\n    [12.87854, 77.69866],\n    [12.87855122357, 77.69865438822],\n    [12.87868, 77.69859],\n    [12.87894, 77.6985],\n    [12.87936, 77.6984],\n    [12.88083237367, 77.69814478859],\n    [12.88084772794, 77.69814212717],\n    [12.88084834863, 77.69814201958],\n    [12.88086, 77.69814],\n    [12.8812, 77.69805],\n    [12.88143, 77.69795],\n    [12.88171, 77.69784],\n    [12.88259, 77.69748],\n    [12.88295307525, 77.69734012726],\n    [12.88296206103, 77.69733666554],\n    [12.88296265033, 77.69733643851],\n    [12.88381, 77.69701],\n    [12.88403, 77.69693],\n    [12.88435, 77.69679],\n    [12.88462, 77.69663],\n    [12.88514, 77.69644],\n    [12.8854, 77.69638],\n    [12.88562, 77.69639],\n    [12.88594, 77.69649],\n    [12.88622716817, 77.69649],\n    [12.8862365325, 77.69649],\n    [12.886237162, 77.69649],\n    [12.88632, 77.69649],\n    [12.88723, 77.69637],\n    [12.88751, 77.69633],\n    [12.88754623455, 77.69632253996],\n    [12.8875540905, 77.69632092256],\n    [12.88755470768, 77.69632079549],\n    [12.88785, 77.69626],\n    [12.88804, 77.69616],\n    [12.88817, 77.69607],\n    [12.88846, 77.696],\n    [12.8887, 77.69599],\n    [12.88908, 77.69603],\n    [12.8893, 77.69603],\n    [12.88939, 77.69601],\n    [12.88958, 77.69588],\n    [12.88981581648, 77.69571021214],\n    [12.88982298862, 77.69570504819],\n    [12.88982350387, 77.69570467721],\n    [12.88983, 77.6957],\n    [12.88988, 77.69568],\n    [12.89, 77.69566],\n    [12.89017, 77.69565],\n    [12.89043, 77.69569],\n    [12.89069, 77.69569],\n    [12.89083, 77.69569],\n    [12.8909, 77.69569],\n    [12.891, 77.69563],\n    [12.89102, 77.69561],\n    [12.89112, 77.69578],\n    [12.89126, 77.69593],\n    [12.89146, 77.69603],\n    [12.89159, 77.69612],\n    [12.89168, 77.69622],\n    [12.89176, 77.69631],\n    [12.89194, 77.69645],\n    [12.89197799195, 77.69650098907],\n    [12.89198279389, 77.69650743376],\n    [12.89198317617, 77.69650794682],\n    [12.89232, 77.69696],\n    [12.89237, 77.69716],\n    [12.89235, 77.69731],\n    [12.89229, 77.69751],\n    [12.89205, 77.6981],\n    [12.89191, 77.69844],\n    [12.89192, 77.69853],\n    [12.892, 77.69877],\n    [12.89284553778, 77.69926431335],\n    [12.89285554835, 77.6992701657],\n    [12.89285609528, 77.69927048544],\n    [12.8933, 77.69953],\n    [12.89336, 77.69958],\n    [12.89354, 77.6997],\n    [12.89384, 77.69985],\n    [12.89396, 77.69989],\n    [12.89414, 77.69993],\n    [12.8943, 77.69996],\n    [12.89433, 77.69999],\n    [12.89435, 77.70008],\n    [12.89431, 77.70018],\n    [12.89428, 77.70026],\n    [12.89431, 77.70028],\n    [12.89428, 77.70035],\n    [12.89437, 77.70039],\n    [12.89448, 77.7006],\n    [12.89452, 77.70069],\n    [12.89461, 77.70087],\n    [12.89471593697, 77.70098917905],\n    [12.89472140754, 77.70099533344],\n    [12.8947218317, 77.70099581062],\n    [12.89477, 77.70105],\n    [12.8948, 77.70106],\n    [12.89483, 77.701],\n    [12.8949, 77.70103],\n    [12.89491, 77.70103],\n    [12.89488, 77.7011],\n    [12.89495, 77.70113],\n    [12.89492106399, 77.70121680805],\n    [12.89483, 77.70149],\n    [12.89469951083, 77.70189125658],\n    [12.89469708319, 77.70189872161],\n    [12.89469688398, 77.70189933418],\n    [12.89443, 77.70272],\n    [12.89436, 77.70304],\n    [12.89429, 77.70302],\n    [12.89428, 77.70306],\n    [12.89419, 77.70362],\n    [12.89406, 77.70399],\n    [12.89383, 77.70441],\n    [12.89359, 77.70475],\n    [12.89358, 77.70482],\n    [12.89361, 77.70487],\n    [12.8937, 77.70498],\n    [12.89392131124, 77.7051321514],\n    [12.89392855974, 77.70513713475],\n    [12.89392908264, 77.70513749424],\n    [12.89402, 77.7052],\n    [12.89413, 77.7053],\n    [12.89414, 77.70536],\n    [12.89421, 77.70536],\n    [12.89425, 77.70536],\n    [12.89448, 77.70542],\n    [12.89452, 77.70541],\n    [12.8947, 77.70543],\n    [12.89546, 77.70569],\n    [12.89561527572, 77.70574612359],\n    [12.89562337802, 77.70574905213],\n    [12.89562397172, 77.70574926672],\n    [12.89629, 77.70599],\n    [12.89691789698, 77.70623931198],\n    [12.89692803915, 77.70624333902],\n    [12.89692862618, 77.70624357211],\n    [12.89697, 77.70626],\n    [12.89766, 77.70656],\n    [12.89779, 77.7066],\n    [12.89782702888, 77.70660411432],\n    [12.89783500259, 77.70660500029],\n    [12.8978356284, 77.70660506982],\n    [12.89797, 77.70662],\n    [12.89819, 77.70662],\n    [12.8984, 77.70662],\n    [12.89866, 77.70658],\n    [12.89945, 77.70645],\n    [12.89987, 77.70637],\n    [12.90005, 77.70634],\n    [12.90013, 77.70632],\n    [12.90019, 77.70626],\n    [12.90038, 77.7062],\n    [12.90046, 77.70621],\n    [12.90106, 77.70626],\n    [12.90162, 77.70626],\n    [12.90167022983, 77.70625799081],\n    [12.90167831616, 77.70625766736],\n    [12.90167894515, 77.7062576422],\n    [12.90212, 77.70624],\n    [12.90215, 77.70622],\n    [12.90223, 77.70609],\n    [12.90233990731, 77.70588239746],\n    [12.90234368983, 77.70587525269],\n    [12.90234399026, 77.70587468521],\n    [12.90241, 77.70575],\n    [12.90234, 77.70572],\n    [12.90245, 77.70555],\n    [12.90252, 77.70543],\n    [12.90294828267, 77.7052795887],\n    [12.90295, 77.70528],\n    [12.90322, 77.70483],\n    [12.90323, 77.7047],\n    [12.90321, 77.70467],\n    [12.90331, 77.7045],\n    [12.90337, 77.70438],\n    [12.90354, 77.70405],\n    [12.90358, 77.70408],\n    [12.90437, 77.70443],\n    [12.90449, 77.70448],\n    [12.90476, 77.70462],\n    [12.90497, 77.70469],\n    [12.90525, 77.70475],\n    [12.90562, 77.70491],\n    [12.90588, 77.70501],\n    [12.90647, 77.70521],\n    [12.90694771788, 77.70536923929],\n    [12.90689380589, 77.70535126861],\n    [12.90694934041, 77.70536978013],\n    [12.90694998915, 77.70536999638],\n    [12.90694999995, 77.70536999998]\n],\n    distances = [\n        0,\n        25.312545177271964,\n        63.87263788612921,\n        128.3662332904793,\n        170.74703358967403,\n        194.61860528164615,\n        204.5171567990287,\n        215.84763881668556,\n        255.0065952874924,\n        292.97534408566196,\n        350.84891917118773,\n        439.8953540141516,\n        515.483290312427,\n        554.0505714603956,\n        576.5991342777804,\n        594.5495881289462,\n        624.7555449187458,\n        657.1400308568564,\n        704.5804059741256,\n        746.7255790044783,\n        915.2645060767039,\n        1069.6991411170898,\n        1195.7717869882497,\n        1211.0362929749583,\n        1225.3457119431043,\n        1249.8044132899927,\n        1287.8378883389742,\n        1391.641129365334,\n        1404.7451116198647,\n        1480.9699787165187,\n        1532.4306694173822,\n        1600.2758386945768,\n        1615.300888203522,\n        1633.1836362788624,\n        1689.4351066940262,\n        1747.9161552311966,\n        1791.6879753703624,\n        1834.177991368112,\n        1923.863174730142,\n        1932.6555593351986,\n        1963.0958046888427,\n        1998.176529431029,\n        2004.7917356156424,\n        2081.3165011907986,\n        2125.641501708447,\n        2180.138914147186,\n        2222.274531757643,\n        2254.810356361503,\n        2272.301619784502,\n        2339.651215514183,\n        2427.3822007175086,\n        2450.4033234915764,\n        2491.7332968914,\n        2532.9837854316434,\n        2559.5880948064623,\n        2672.3021130466905,\n        2694.4189746548063,\n        2706.1114068450165,\n        2740.253191202942,\n        2800.7479005653136,\n        2852.7086202000037,\n        2881.161664090291,\n        2917.666527575644,\n        2934.3295325138,\n        2955.2967716556736,\n        2987.250970678318,\n        3029.385628745252,\n        3202.869717606912,\n        3398.4902480118303,\n        3511.2025906249382,\n        3851.640375470323,\n        3878.8276921151883,\n        3900.474439196755,\n        3919.4826056626002,\n        3945.9826504555353,\n        3969.008560394947,\n        3997.8926892827644,\n        4036.925395396062,\n        4089.910352807175,\n        4102.106656228547,\n        4107.054298073792,\n        4107.192767559032,\n        4107.361990179008,\n        4110.145773726336,\n        4180.390340907564,\n        4180.822453873062,\n        4181.174393623672,\n        4210.698939208525,\n        4292.000716173223,\n        4302.854852313463,\n        4310.665627939966,\n        4360.538706701312,\n        4363.868533695225,\n        4373.220554712682,\n        4374.003150979601,\n        4374.703442199028,\n        4419.9605359661355,\n        4438.315734025077,\n        4438.957376919581,\n        4439.443497865747,\n        4514.222585002374,\n        4537.414692113252,\n        4568.845540409825,\n        4624.6539387924,\n        4661.770465826946,\n        4683.475306530917,\n        4704.543483847794,\n        4724.568305684847,\n        4761.833036822263,\n        4774.568034009629,\n        4775.815547967958,\n        4819.527637978128,\n        4846.950027205275,\n        4847.700005743131,\n        4848.406005310607,\n        4914.119865633471,\n        4973.499688084064,\n        4986.5256157618305,\n        5020.131183011214,\n        5066.949920658331,\n        5127.395608327772,\n        5142.774574643082,\n        5143.467130723061,\n        5144.1099589602745,\n        5286.691894100222,\n        5399.2568850760745,\n        5510.432554130373,\n        5511.237445962809,\n        5512.029307939363,\n        5656.639723327673,\n        5719.619906481814,\n        5767.454311488084,\n        5768.328004584482,\n        5769.144649458342,\n        5897.428530141113,\n        5911.93006106851,\n        6043.643662744582,\n        6044.354396069715,\n        6044.943274018865,\n        6149.9145677855795,\n        6191.246934111196,\n        6219.77618321262,\n        6287.406679710418,\n        6287.661212456189,\n        6287.834372167407,\n        6312.107867523774,\n        6324.0382446349,\n        6371.741705620891,\n        6477.363455489014,\n        6478.208298485683,\n        6479.124731995417,\n        6527.495624348025,\n        6563.348178083408,\n        6599.564075460688,\n        6663.615428444523,\n        6679.654045774571,\n        6680.755793844988,\n        6681.754132595969,\n        6769.036717758727,\n        6875.53892245752,\n        6916.394728781422,\n        7125.217955963091,\n        7275.928328365056,\n        7276.2774326320105,\n        7276.378959800467,\n        7277.054942740092,\n        7377.440625290307,\n        7446.168519154874,\n        7488.877216405436,\n        7517.361972167662,\n        7537.8349853818745,\n        7555.746494008686,\n        7574.363649768198,\n        7592.2042138365705,\n        7621.721397436009,\n        7638.071937849309,\n        7656.692246844913,\n        7672.36153742828,\n        7685.11284672456,\n        7720.925027919663,\n        7816.161344892003,\n        7860.825767688272,\n        7892.961693460196,\n        7985.397248616131,\n        7985.9655681971235,\n        7986.376681811854,\n        7997.453602411448,\n        8069.756436101866,\n        8134.080522081796,\n        8213.512915669056,\n        8262.350638643687,\n        8273.07220234866,\n        8281.510313943512,\n        8289.804217043375,\n        8298.246993546138,\n        8322.688984014394,\n        8373.990418447922,\n        8380.37546131298,\n        8402.262262668128,\n        8472.196646063334,\n        8528.862953936148,\n        8536.39873228019,\n        8537.062486769533,\n        8537.624901524943,\n        8557.337115512157,\n        8581.39734605807,\n        8694.624323540254,\n        8735.948268136373,\n        8772.047914261446,\n        8810.23465178465,\n        8824.373534517774,\n        8848.453174171997,\n        8892.948168525469,\n        8923.877181585107,\n        8956.072178114382,\n        8968.25630239735,\n        8979.64024188476,\n        8999.02418971936,\n        8999.742222124516,\n        9013.090763828903,\n        9029.692496198355,\n        9088.317619590365,\n        9106.782632141658,\n        9189.452985292535,\n        9190.03168777574,\n        9190.509416245635,\n        9198.439640620316,\n        9222.9283107723,\n        9254.602135533896,\n        9295.060942779155,\n        9295.719438698849,\n        9296.189870372815,\n        9317.647051042533,\n        9361.620148528324,\n        9410.821904616989,\n        9411.386518492329,\n        9411.68809370049,\n        9426.588278941355,\n        9465.166130310257,\n        9527.066727200552,\n        9572.187640168335,\n        9572.560775996342,\n        9572.66283868007,\n        9592.956072366775,\n        9652.333656729323,\n        9795.81966857986,\n        9846.46436109428,\n        10005.187318800216,\n        10109.873318064674,\n        10214.396364557377,\n        10316.83275239496,\n        10340.551893184833,\n        10357.929919121636,\n        10402.49298888966,\n        10450.974342090038,\n        10485.65798638455,\n        10521.700797336247,\n        10666.946063291893,\n        10676.692378984668,\n        10693.80507250954,\n        10738.836362000304,\n        10801.234054525834,\n        10824.653561655201,\n        10866.093309831691,\n        10891.899746322399,\n        10947.221389216393,\n        10973.257867600294,\n        11060.986747199999,\n        11104.103365836905,\n        11104.530274109895,\n        11104.763592311947,\n        11110.489396256762,\n        11144.255461849392,\n        11158.346777725252,\n        11180.052545588978,\n        11207.348683302922,\n        11223.651680555271,\n        11243.941592098055,\n        11274.908050334107,\n        11282.673343984243,\n        11322.532167687348,\n        11330.825932788128,\n        11356.643846072966,\n        11379.157892728683,\n        11400.122746191892,\n        11421.652706626814,\n        11428.551710926355,\n        11475.164664042863,\n        11483.471077503887,\n        11497.456898676128,\n        11518.29662119656,\n        11556.719832274202,\n        11557.420533034827,\n        11557.713674766064,\n        11558.566200541623,\n        11575.884181945718,\n        11618.717475393003,\n        11675.50214205303,\n        11758.61587346778,\n        11812.876626569203,\n        11871.888030609793,\n        12013.930356860315,\n        12059.72652798039,\n        12073.075012431087,\n        12109.430129515422,\n        12142.757820372808,\n        12166.634627128033,\n        12185.643322091013,\n        12311.862205228737,\n        12428.888922062926,\n        12430.299651398002,\n        12430.897586413019,\n        12431.462851413591,\n        12492.275798633447,\n        12672.634828596378,\n        12753.228607535293,\n        12795.90087222723,\n        12796.921631130012,\n        12797.876683535727,\n        12802.14412324605,\n        12844.093898177842,\n        12874.423580564655,\n        12924.89335006264,\n        12977.032645545185,\n        13052.684813542774,\n        13109.767188957967,\n        13158.71351260806,\n        13228.560466991032,\n        13280.4640522332,\n        13281.320922604087,\n        13281.871277233131,\n        13309.286083042252,\n        13344.9273743701,\n        13404.90145957119,\n        13431.30640183965,\n        13470.500628115697,\n        13525.958395785665,\n        13579.637061324835,\n        13627.08626500545,\n        13742.988580704463,\n        13787.316854046161,\n        13801.55499869105,\n        13801.989587779131,\n        13802.176503760818,\n        13807.970573452,\n        13848.584740419661,\n        13889.955214774067,\n        13923.640168375872,\n        13966.998516214813,\n        14003.577755713806,\n        14031.771453773166,\n        14061.121417749515,\n        14078.781895343016,\n        14110.088720502497,\n        14132.985911637099,\n        14144.80505154017,\n        14159.598174754967,\n        14177.667342133549,\n        14211.083343252256,\n        14241.289795011991,\n        14259.194660827632,\n        14285.304017554823,\n        14334.079834225706,\n        14355.148889587317,\n        14366.044852971405,\n        14386.669090131298,\n        14445.872348823968,\n        14466.466597114078,\n        14478.618538820072,\n        14479.006620937742,\n        14479.04339271263,\n        14515.26190013047,\n        14558.675222990063,\n        14639.261213767537,\n        14676.266160016392,\n        14707.780737514518,\n        14752.042390403278,\n        14780.567841108674,\n        14823.930468008472,\n        14835.15859134237,\n        14924.311027988157,\n        14943.922377525634,\n        14955.921406917045,\n        14973.600326122765,\n        14991.795030043982,\n        15040.771686590588,\n        15171.168452743907,\n        15196.132797723565,\n        15222.446206850442,\n        15280.668519633638,\n        15281.044088112316,\n        15281.096296997206,\n        15411.519697391688,\n        15437.32824188642,\n        15446.079543060312,\n        15456.933341137157,\n        15543.120213436127,\n        15671.252404091012,\n        15705.401098071354,\n        15784.200810879094,\n        15805.820671303602,\n        15806.549866144673,\n        15807.058861072515,\n        15876.544195081673,\n        15914.209903552879,\n        15977.779887310697,\n        15996.093480741372,\n        16004.002378661115,\n        16019.906671719915,\n        16054.530373209096,\n        16099.021663494257,\n        16145.924351636952,\n        16175.966548125394,\n        16213.78851857308,\n        16275.186100870565,\n        16325.236135099578,\n        16350.812121146444,\n        16410.946518275407,\n        16453.493646054598,\n        16454.21798144458,\n        16454.60333434939,\n        16528.16006344838,\n        16578.19952154088,\n        16598.804615651938,\n        16599.36994858296,\n        16599.56574109781,\n        16609.57752646851,\n        16710.040337624505,\n        16761.948591252047,\n        16784.839328037342,\n        16825.23775151031,\n        16917.50109655078,\n        16940.649370126193,\n        16941.395727387728,\n        16941.990547174726,\n        17145.564656042403,\n        17217.552513497958,\n        17240.915806932193,\n        17241.747186863235,\n        17242.409162743013,\n        17277.0909068255,\n        17437.3663858802,\n        17449.750223545005,\n        17508.843347142196,\n        17553.86278345487,\n        17587.555139466207,\n        17627.207072309055,\n        17655.02723646915,\n        17704.91598728671,\n        17709.86430757488,\n        17717.63039592865,\n        17757.460223983202,\n        17787.772640971467,\n        17813.172852977634,\n        17855.25546960864,\n        17868.353788820164,\n        17869.187134370986,\n        17869.909579431478,\n        17878.17935412909,\n        17903.765421283853,\n        17946.24681915176,\n        18000.617409199138,\n        18055.632302660837,\n        18101.238674468917,\n        18171.367752767987,\n        18284.99050092103,\n        18285.997148292627,\n        18286.038065003053,\n        18297.02678452259,\n        18320.479199701407,\n        18337.716757930164,\n        18393.133502671993,\n        18496.247271714958,\n        18547.11526350339,\n        18570.872751771836,\n        18598.098373721037,\n        18624.78776115779,\n        18640.52424585887,\n        18682.79845413509,\n        18713.960004752465,\n        18751.911599914143,\n        18763.318415948423,\n        18782.256461101846,\n        18805.204348765576,\n        18824.15094961161,\n        18852.037392408038,\n        18878.74919802442,\n        19020.66536608748,\n        19122.7203842301,\n        19132.788394193216,\n        19142.27366186065,\n        19250.78679208674,\n        19379.974702547144,\n        19439.976687500937,\n        19476.072056228695,\n        19498.7048296331,\n        19499.110062166368,\n        19499.279249041287,\n        19528.52559431141,\n        19578.722571173275,\n        19606.48944604251,\n        19625.445428817406,\n        19637.424593267406,\n        19655.887114687233,\n        19687.63413409391,\n        19738.50510959165,\n        19761.70167610769,\n        19782.329953351877,\n        19792.34813416977,\n        19803.379436587267,\n        19815.810092408803,\n        19874.848419088696,\n        20038.915080994622,\n        20059.285609260598,\n        20088.174171412476,\n        20114.656498649794,\n        20257.539792227137,\n        20287.844158570148,\n        20354.172153367163,\n        20426.180616634487,\n        20475.65884278499,\n        20531.08749969719,\n        20653.299332975337,\n        20769.04054480986,\n        20770.04356327873,\n        20770.503229711372,\n        20814.097733418035,\n        20854.0805063944,\n        20872.007641028104,\n        20916.81584337223,\n        20940.567823989215,\n        20982.066130763564,\n        21020.984828392422,\n        21053.24980068923,\n        21079.2038206835,\n        21153.59604287554,\n        21198.28482723978,\n        21263.889873561737,\n        21364.439495227416,\n        21457.932452368572,\n        21458.820003127843,\n        21459.153364328857,\n        21500.769316553437,\n        21567.555320004787,\n        21596.97373004422,\n        21618.13581241667,\n        21641.518711195484,\n        21684.357159080002,\n        21725.321400031942,\n        21758.845125757824,\n        21784.63449745194,\n        21818.329315345447,\n        21860.933209584677,\n        21883.827767618877,\n        21906.095883597656,\n        21915.584064257506,\n        21935.869048727658,\n        21954.679275136947,\n        21968.915951403575,\n        22020.07983529877,\n        22046.192003512882,\n        22060.458911508893,\n        22085.9099696254,\n        22129.330383086624,\n        22156.993130836898,\n        22206.07749787683,\n        22244.90623056702,\n        22274.303341360916,\n        22344.2366145796,\n        22380.334673915513,\n        22410.654590582657,\n        22440.65329867265,\n        22445.202411648643,\n        22445.896258233086,\n        22446.40745803398,\n        22450.045489512715,\n        22460.574937133933,\n        22474.09743014343,\n        22510.722212973382,\n        22519.46581425048,\n        22525.028800822114,\n        22543.963703538866,\n        22567.315081577217,\n        22579.684824340216,\n        22586.734794352295,\n        22618.685270765043,\n        22646.872973386708,\n        22694.001913915417,\n        22704.10426086868,\n        22709.05291075393,\n        22714.002991338213,\n        22721.42723295498,\n        22812.739085599867,\n        22842.84133976716,\n        22856.36466136784,\n        22891.003151075965,\n        23001.042801549345,\n        23006.798589696624,\n        23007.477777307235,\n        23008.04179192101,\n        23079.318598844024,\n        23101.363543417483,\n        23123.406675453818,\n        23131.296832269756,\n        23135.970306554726,\n        23167.02613739789,\n        23167.54804561051,\n        23167.66394473987,\n        23253.32460260664,\n        23334.04213374,\n        23349.60810635252,\n        23354.476675505877,\n        23363.92062527803,\n        23376.66338322441,\n        23424.773284595456,\n        23463.27183119647,\n        23506.857654377098,\n        23570.838866083333,\n        23617.44787296762,\n        23628.55559044596,\n        23646.170359973014,\n        23655.62068023298,\n        23656.535796676206,\n        23657.27585096517,\n        23671.52755961253,\n        23718.04136677319,\n        23747.626865329068,\n        23772.58664885941,\n        23882.106445924168,\n        23882.615821361036,\n        23882.656039043188,\n        23900.438371913035,\n        23928.3399524709,\n        23950.01509825513,\n        24026.993093425328,\n        24063.108708583273,\n        24102.713783784184,\n        24164.07262320021,\n        24238.163902004937,\n        24266.197512413848,\n        24282.29807329644,\n        24330.612418239296,\n        24367.726438574486,\n        24411.301002014585,\n        24450.825937590456,\n        24498.42389986668,\n        24498.812906911302,\n        24498.853581241194,\n        24503.134393455493,\n        24540.159528399025,\n        24563.560462519563,\n        24577.22238488173,\n        24595.12378546176,\n        24620.66169508083,\n        24639.630941962547,\n        24666.30843586561,\n        24730.022306205334,\n        24763.53930695102,\n        24843.05568032935,\n        24885.33886423286,\n        24901.05929314668,\n        24960.15273181165,\n        25037.990678839717,\n        25081.37189297724,\n        25093.64398131245,\n        25094.29337943531,\n        25094.788800781716,\n        25096.601707340225,\n        25130.347016202464,\n        25168.01301701682,\n        25212.558678612342,\n        25260.7628627011,\n        25335.704826755547,\n        25402.588135994047,\n        25419.413381074144,\n        25464.10411463423,\n        25560.032457185098,\n        25631.271636088848,\n        25704.009919813514,\n        25704.787811109407,\n        25704.926676743213,\n        25784.093800833896,\n        25882.32966168423,\n        25910.132322209825,\n        25933.027835187102,\n        25968.83587557758,\n        26027.885697320653,\n        26088.04618747826,\n        26088.991442598886,\n        26089.662856379786,\n        26096.525353882815,\n        26178.117245390087,\n        26214.116929279557,\n        26230.84513378636,\n        26313.388331821432,\n        26388.17540059006,\n        26473.024995177893,\n        26534.53032487633,\n        26543.507114663804,\n        26551.188468171335,\n        26568.851543623376,\n        26666.5921892656,\n        26746.3853576701,\n        26819.830340685283,\n        26857.7363393738,\n        26858.857993994978,\n        26919.93817615921,\n        27025.67879745839,\n        27096.15576909569,\n        27169.074389801754,\n        27169.396245809876,\n        27169.437594489802,\n        27182.232146400514,\n        27310.502296454535,\n        27506.024540135422,\n        27526.593274978884,\n        27526.966036898553,\n        27527.02488322472,\n        27541.007864438685,\n        27597.405135119814,\n        27605.310997056844,\n        27622.421788098345,\n        27657.386383997007,\n        27669.20378323808,\n        27687.760898765056,\n        27738.88965896151,\n        27746.557177219613,\n        27763.509205289036,\n        27763.88398059368,\n        27763.92797991683,\n        27772.572372559956,\n        27780.431100949085,\n        27784.766107597814,\n        27802.975292441177,\n        27884.189893870953,\n        27888.73462214532,\n        27892.242426121713,\n        27903.414662016854,\n        27916.758063048303,\n        27935.069745045894,\n        27955.438286735676,\n        27978.797242475026,\n        27979.30295160944,\n        27979.454270131206,\n        27987.87201980671,\n        28024.82263377267,\n        28047.16883546244,\n        28067.1609189168,\n        28075.453282775085,\n        28077.947118129967,\n        28102.501911459192,\n        28147.15005372792,\n        28175.78167814833,\n        28176.434727619315,\n        28176.829191025463,\n        28193.535267898187,\n        28254.703784079204,\n        28269.11152550328,\n        28285.030086540624,\n        28302.85387414328,\n        28347.346945122907,\n        28403.32448750505,\n        28419.811856669774,\n        28427.584570555056,\n        28428.100039067696,\n        28428.38656443209,\n        28433.54511587,\n        28495.655773047314,\n        28551.296133170956,\n        28558.968751785513,\n        28565.735512109895,\n        28584.615191164365,\n        28585.229249642765,\n        28585.664817042238,\n        28586.206800446627,\n        28597.337851698998,\n        28719.35857273252,\n        28733.471425798132,\n        28744.42486340683,\n        28803.46537691436,\n        28816.668353942398,\n        28827.546459501467,\n        28879.07272294949,\n        28923.770548309156,\n        28999.643932370847,\n        29046.157382660243,\n        29096.623282681772,\n        29182.422949544256,\n        29228.43065055287,\n        29250.220437937234,\n        29343.759751930087,\n        29349.320584473146,\n        29355.53272843802,\n        29364.088973561793,\n        29390.425191660193,\n        29485.08941587065,\n        29536.7899915245,\n        29635.383173832284,\n        29692.28568956315,\n        29749.66952032561,\n        29792.85044937506,\n        29845.88524273409,\n        29910.845975695906,\n        29949.249666343494,\n        29949.849929312644,\n        29950.124766791985,\n        29967.03987971024,\n        29988.60918261559,\n        30018.243888891746,\n        30056.356044702305,\n        30113.25665246162,\n        30152.56333799256,\n        30262.417112499632,\n        30358.9316328276,\n        30404.205902255922,\n        30415.378425017585,\n        30453.649412144336,\n        30460.666781124302,\n        30465.61949667188,\n        30479.643125572085,\n        30554.86951752036,\n        30555.70313005108,\n        30556.007691787403,\n        30570.124246661177,\n        30709.55285315364,\n        30737.43735091233,\n        30749.862043140954,\n        30793.71359325812,\n        30803.781162385036,\n        30823.913363652704,\n        30883.648479763993,\n        30956.194649395675,\n        31016.321828521417,\n        31037.05759307087,\n        31072.283332453324,\n        31087.375171078733,\n        31094.047356121497,\n        31102.127428881486,\n        31107.000123695867,\n        31117.309260920672,\n        31119.745779751385,\n        31133.479921108967,\n        31145.415631968022,\n        31149.399556593846,\n        31151.888832459226,\n        31163.82900114879,\n        31167.31394295824,\n        31198.944486959335,\n        31243.186878908768,\n        31264.241131576706,\n        31328.96615836133,\n        31346.514394098333,\n        31365.491848416466,\n        31376.523821825343,\n        31390.507101128787,\n        31398.953481671026,\n        31406.629389900274,\n        31418.451023232017,\n        31442.322136835734,\n        31473.595380798855,\n        31490.310144368752,\n        31527.259692859934,\n        31531.837644324467,\n        31539.74380565147,\n        31574.499390225148,\n        31585.518929492115,\n        31590.990664069457,\n        31598.300868638595,\n        31610.1871165193,\n        31610.999899472194,\n        31611.276245531615,\n        31613.729034059288,\n        31651.730622420506,\n        31670.315267690374,\n        31698.224108118182,\n        31719.296395300553,\n        31738.391667567703,\n        31746.357824391525,\n        31750.849256855952,\n        31779.811094444747,\n        31797.155983278943,\n        31812.372969425545,\n        31837.82396989546,\n        31853.985753676836,\n        31874.69923088625,\n        31893.424399011627,\n        31901.50428787059,\n        31909.939854839096,\n        31918.020322578253,\n        31967.520894644265,\n        32006.073586250448,\n        32053.0085964687,\n        32070.51994876013,\n        32071.3549683011,\n        32071.524347423594,\n        32084.969171647004,\n        32108.839037620633,\n        32129.46247170047,\n        32154.613386037658,\n        32173.42548279205,\n        32205.142829963886,\n        32230.101925956475,\n        32249.993401045285,\n        32274.070394906787,\n        32301.033775834203,\n        32301.838694924554,\n        32302.642322130694,\n        32302.880477873914,\n        32315.650293380684,\n        32415.02768709681,\n        32435.400370337768,\n        32453.299367380343,\n        32471.207920261182,\n        32511.49249883051,\n        32535.557177465776,\n        32554.530654890343,\n        32570.946906809484,\n        32620.240836285884,\n        32631.80327425842,\n        32632.769285018243,\n        32633.384220524003,\n        32663.405870630686,\n        32684.27871532595,\n        32739.393113310154,\n        33047.37152855679,\n        33083.21275553881,\n        33091.777835285255,\n        33124.84437354048,\n        33162.25681683382,\n        33163.298470098314,\n        33163.748946355074,\n        33176.39675471637,\n        33244.54134297941,\n        33291.20008604634,\n        33301.6264456841,\n        33335.59148065268,\n        33500.65887969972,\n        33528.13061824655,\n        33531.498729784435,\n        33539.41828890405,\n        33564.734741710105,\n        33653.05744049295,\n        33743.28433486791,\n        33794.20060504311,\n        33840.81943657115,\n        33841.857380801965,\n        33842.05503318096,\n        33845.57088661919,\n        33847.12471488162,\n        33853.48852825671,\n        33902.69443482699,\n        34028.009994391825,\n        34099.63895187006,\n        34108.07636459487,\n        34113.936981201194,\n        34149.695186640965,\n        34167.60042607289,\n        34174.47631081122,\n        34178.45906561996,\n        34181.97117958739,\n        34240.04622869049,\n        34244.497370372104,\n        34252.16726577889,\n        34280.30257228273,\n        34323.885296339315,\n        34373.11070970961,\n        34432.08417993711,\n        34530.15210503215,\n        34559.063652117155,\n        34598.118177336386,\n        34599.35896148793,\n        34600.25045980929,\n        34600.758659260064,\n        34664.78620118526,\n        34703.724648795986,\n        34771.50219166425,\n        34849.513646586616,\n        34874.01031747425,\n        34895.397240890474,\n        34935.42447781854,\n        34936.60682762598,\n        34937.23621062312,\n        35012.97369172721,\n        35052.434689554044,\n        35053.630900528995,\n        35104.24243028903,\n        35211.91689474113,\n        35252.18342847352,\n        35271.21269705867,\n        35301.31402751426,\n        35340.358719231444,\n        35397.87587153482,\n        35442.77232749966,\n        35446.75080460761,\n        35455.039597032715,\n        35474.38141249469,\n        35529.93563443238,\n        35571.495146043366,\n        35592.3302575659,\n        35641.008402831016,\n        35650.90882678363,\n        35659.81024357878,\n        35680.18243247718,\n        35687.50245463772,\n        35697.75119568942,\n        35714.57771532529,\n        35727.24483289498,\n        35747.04538002726,\n        35783.185298832104,\n        35818.347533736094,\n        35819.46487319387,\n        35820.116343166796,\n        35837.07044878057,\n        35952.41750590875,\n        35960.35094705272,\n        36068.73886552855,\n        36110.924140109855,\n        36117.29591281613,\n        36146.039427999436,\n        36151.6755919824,\n        36266.15897501196,\n        36281.59719664697,\n        36303.94725168694,\n        36314.81930327398,\n        36341.219322108474,\n        36359.28974836549,\n        36410.8186121464,\n        36418.136248380484,\n        36422.13333569975,\n        36469.25419807794,\n        36484.60992953442,\n        36492.498169473656,\n        36502.4017500111,\n        36525.69827792982,\n        36531.179496262535,\n        36538.4959794148,\n        36562.9847261128,\n        36644.511430275765,\n        36652.47262663814,\n        36670.049711952444,\n        36673.495281762676,\n        36717.72050412179,\n        36740.170213746955,\n        36820.88673246081,\n        36834.130927575774,\n        36847.289115752224,\n        36860.01903796649,\n        36872.5791827559,\n        36884.37194077197,\n        36885.30300691632,\n        36885.41834214304,\n        36895.941209704506,\n        36936.064331881804,\n        36968.200213579534,\n        36992.963697157946,\n        37020.62784854438,\n        37096.245071526886,\n        37151.707144237495,\n        37186.55507511406,\n        37198.73920492157,\n        37219.73881007148,\n        37245.355146898946,\n        37285.77202672414,\n        37292.34894319442,\n        37293.274249582995,\n        37293.475080872326,\n        37333.42653227232,\n        37406.354996260925,\n        37422.88451150481,\n        37444.28971937628,\n        37466.395951296094,\n        37561.80295792978,\n        37595.600835730074,\n        37622.29066554315,\n        37643.67127872772,\n        37669.63110916842,\n        37672.14820469729,\n        37673.25926404848,\n        37673.98847275807,\n        37761.54033917249,\n        37791.240927833875,\n        37829.513921626974,\n        37877.333447482466,\n        37879.1093975239,\n        37908.628268072614,\n        37949.08373591661,\n        37972.043613305505,\n        38029.433184103385,\n        38092.231015806894,\n        38289.1437929903,\n        38337.15268527112,\n        38393.08295969141,\n        38443.56553244834,\n        38462.36663825384,\n        38530.20972458696,\n        38600.02333964003,\n        38659.76961491242,\n        38661.003858798664,\n        38661.55218546492,\n        38753.538034089,\n        38791.070474223336,\n        38852.75251263982,\n        38916.323999208405,\n        38987.076218801354,\n        39023.92386567547,\n        39039.133330611716,\n        39054.14399788708,\n        39074.86459512725,\n        39140.25083052737,\n        39203.917601837704,\n        39221.58140530556,\n        39245.15718114504,\n        39246.01790664695,\n        39246.088911364415,\n        39247.637889993064,\n        39280.46222330866,\n        39290.77337607958,\n        39299.56947694071,\n        39320.36721294138,\n        39347.73999978656,\n        39353.25041606812,\n        39357.909551578254,\n        39371.10702054175,\n        39386.646076608005,\n        39446.545966039026,\n        39459.74915875865,\n        39473.17888023002,\n        39493.18427984184,\n        39511.91315693182,\n        39526.05029421267,\n        39605.578710816,\n        39644.819082978116,\n        39702.276624631246,\n        39798.319740649626,\n        39807.27504591729,\n        39815.04175680073,\n        39826.21077334149,\n        39827.14327453661,\n        39827.2072297218,\n        39851.89146582658,\n        39888.50755520925,\n        39903.26428347339,\n        39910.944568183826,\n        39949.47211499498,\n        39976.94325710146,\n        40039.98225066212,\n        40046.90468447641,\n        40053.33105352028,\n        40067.34078150152,\n        40086.97565470959,\n        40094.05777268999,\n        40139.39511138978,\n        40209.29565438614,\n        40215.81575782002,\n        40266.70592872709,\n        40304.17568484883,\n        40345.76118881492,\n        40346.8961449506,\n        40347.53944291617,\n        40379.05388299433,\n        40414.60044874459,\n        40432.67350157984,\n        40469.82066950295,\n        40537.03200181852,\n        40581.82545303159,\n        40587.3757969685,\n        40595.18093180398,\n        40655.90276118788,\n        40691.84062105364,\n        40829.08503842777,\n        40858.5558755451,\n        40870.17750395764,\n        40871.31945621643,\n        40872.00304015533,\n        40950.28592145893,\n        41027.26304318898,\n        41063.19493857839,\n        41098.04752591729,\n        41165.26854638072,\n        41197.867036700874,\n        41276.424332846815,\n        41290.569690462,\n        41291.4369072384,\n        41291.500364817155,\n        41323.372840773714,\n        41360.82972209275,\n        41366.36326817347,\n        41374.443500330264,\n        41394.457032561026,\n        41455.52999499484,\n        41527.62862708357,\n        41637.32144515403,\n        41717.17355828944,\n        41718.00001679716,\n        41718.274238628284,\n        41737.35414478569,\n        41781.85786528233,\n        41810.13416157326,\n        41818.01178605604,\n        41821.32157513677,\n        41861.50122697446,\n        41919.05915548809,\n        41923.99370112705,\n        41934.546410067225,\n        42047.29178045957,\n        42073.41738967267,\n        42085.8250475258,\n        42103.69829427228,\n        42112.330594570696,\n        42120.12947437285,\n        42134.12496639542,\n        42182.69915908228,\n        42193.783106033894,\n        42208.487716284195,\n        42209.47082426564,\n        42209.835175805325,\n        42223.09867429899,\n        42331.41232979218,\n        42344.61013739508,\n        42359.78694261155,\n        42439.86283934735,\n        42457.52583289653,\n        42512.169226199985,\n        42614.25487846297,\n        42616.582147078894,\n        42617.53050061853,\n        42617.93544460014,\n        42626.04326401936,\n        42640.07414909102,\n        42694.07275309308,\n        42741.43407071701,\n        42764.7465034516,\n        42779.55275412632,\n        42796.93817566148,\n        42820.82040419023,\n        42827.42902743985,\n        42837.254852338,\n        42844.31316370161,\n        42926.62652175647,\n        42936.87023679461,\n        42945.47082286038,\n        42952.07572449072,\n        42953.03758689264,\n        42953.97423110319,\n        42954.31805647013,\n        43019.92983015951,\n        43041.2685703736,\n        43061.87056892633,\n        43069.78674630294,\n        43095.93121186879,\n        43147.092886536935,\n        43167.22765143971,\n        43173.6773587244,\n        43175.265007747636,\n        43178.3905160721,\n        43186.16416908237,\n        43207.127166696206,\n        43238.036160492295,\n        43276.075717845975,\n        43307.13685208095,\n        43325.95485363175,\n        43365.07106062575,\n        43442.601516249815,\n        43490.12582343577,\n        43491.15541606022,\n        43491.624551237175,\n        43499.18992351609,\n        43515.610232308616,\n        43537.54538567177,\n        43611.55129916471,\n        43640.07919286467,\n        43663.48970673606,\n        43735.47502509328,\n        43802.13807358041,\n        43807.78245322823,\n        43808.69556945225,\n        43808.819895197936,\n        43830.98704879379,\n        43851.82082143516,\n        43875.79288292214,\n        43930.09932918507,\n        43931.317992464385,\n        43931.742126831006,\n        43967.41518182247,\n        43984.41958161834,\n        44006.241100772946,\n        44007.54433738507,\n        44023.09067423681,\n        44032.032305090965,\n        44059.081331444584,\n        44074.66937797498,\n        44075.89165261836,\n        44076.61773667355,\n        44096.749275796756,\n        44145.728995665966,\n        44235.825157785315,\n        44258.30489034905,\n        44270.96554135101,\n        44293.72920028759,\n        44300.78078972965,\n        44308.66040362593,\n        44338.64834260896,\n        44368.02375649223,\n        44411.17481295393,\n        44486.62431738027,\n        44518.544271267994,\n        44519.65157178235,\n        44520.02963646465,\n        44531.24047525579,\n        44566.435111939936,\n        44655.18326549977,\n        44710.157040246966,\n        44716.604598673104,\n        44717.74845897349,\n        44737.97057711386,\n        44738.95108404823,\n        44739.177025930556,\n        44762.645467872,\n        44818.63284292833,\n        44855.63728689336,\n        44864.23220675737,\n        44871.9018914124,\n        44876.48011925736,\n        44915.938109129434,\n        44922.95497713941,\n        44923.870633484046,\n        44923.95188501861,\n        44938.85022589389,\n        44984.24274128589,\n        45034.568344370215,\n        45053.228741799685,\n        45069.5558677257,\n        45109.95651574196,\n        45149.07994940302,\n        45168.406413314,\n        45177.00800850618,\n        45182.527859185575,\n        45188.04770986497,\n        45208.57686726609,\n        45220.91928662168,\n        45221.919280671296,\n        45222.32190655266,\n        45259.79645048415,\n        45293.975480356705,\n        45333.02266102114,\n        45365.27119939133,\n        45430.09251647024,\n        45494.59579119646,\n        45524.698707765194,\n        45548.940062724185,\n        45605.061298353794,\n        45645.197042394095,\n        45658.32976019329,\n        45659.26521922396,\n        45659.36857347425,\n        45673.459698835875,\n        45742.65467714158,\n        45772.96755332057,\n        45851.364690884315,\n        45875.89106909595,\n        45876.973404089,\n        45877.577804504894,\n        45882.41427156599,\n        45902.3204189984,\n        45926.204931696586,\n        45976.325794974735,\n        45992.83131719431,\n        46010.16934133142,\n        46035.94600945765,\n        46117.3374675581,\n        46122.730072615086,\n        46123.9301223037,\n        46124.716074489676,\n        46126.55712154931,\n        46177.70050855655,\n        46179.28508159233,\n        46195.28492100485,\n        46225.80864795245,\n        46273.76067729369,\n        46439.80361300935,\n        46441.65186144453,\n        46442.24830559586,\n        46443.66431880385,\n        46482.71222522312,\n        46510.492902818216,\n        46543.83402397458,\n        46649.18000962697,\n        46692.30527054963,\n        46693.37614648437,\n        46693.45121557202,\n        46794.09742372768,\n        46820.05199979475,\n        46858.73569466993,\n        46893.4079874691,\n        46954.78842428799,\n        46984.422182645656,\n        47008.91023175821,\n        47046.108300888656,\n        47078.04193607218,\n        47079.16090584143,\n        47079.6363050071,\n        47088.86270128978,\n        47190.88509870211,\n        47222.32769426354,\n        47226.50230784508,\n        47227.693732629275,\n        47228.54382768239,\n        47262.046935522856,\n        47285.81214272641,\n        47303.279412163174,\n        47336.4240550148,\n        47363.15596560251,\n        47405.64428205469,\n        47430.12436341192,\n        47440.396617657694,\n        47465.802455116376,\n        47497.844608937754,\n        47498.97103176621,\n        47499.45191367519,\n        47500.415457894786,\n        47506.39080484645,\n        47519.91149182784,\n        47538.84651466826,\n        47568.080696600715,\n        47596.991398927996,\n        47612.559251766994,\n        47620.34503082454,\n        47633.22876879452,\n        47636.343971727656,\n        47657.86822490678,\n        47680.380131313694,\n        47705.12119772239,\n        47722.561171281435,\n        47737.31402492516,\n        47750.51619488291,\n        47775.63377111324,\n        47782.59177854002,\n        47783.495239455704,\n        47783.77763598297,\n        47845.45235129704,\n        47867.835557462764,\n        47884.25120168584,\n        47906.937953503664,\n        47976.2355152091,\n        48016.244292465824,\n        48026.07200827109,\n        48053.568565892856,\n        48161.7841396801,\n        48163.089514921565,\n        48163.26233705521,\n        48220.07491243553,\n        48228.67062351145,\n        48252.54138611242,\n        48289.65249406732,\n        48303.68761300932,\n        48324.171979768296,\n        48342.26435461572,\n        48346.94583783362,\n        48356.96262721398,\n        48368.687113472755,\n        48377.98799671796,\n        48381.98732168493,\n        48390.28430862623,\n        48401.19615710981,\n        48427.038318312414,\n        48437.763431746454,\n        48459.69227254962,\n        48477.17592663698,\n        48478.09203677742,\n        48478.22977573665,\n        48486.17936922756,\n        48489.687411023086,\n        48496.9965445106,\n        48505.43216011272,\n        48506.5442229847,\n        48514.8325580192,\n        48523.26817099423,\n        48533.212370845875,\n        48564.507656837566,\n        48610.35702463299,\n        48611.224047937,\n        48611.435427128825,\n        48705.20784290278,\n        48740.757099379894,\n        48748.846524598936,\n        48753.34700206508,\n        48814.868266696074,\n        48857.503658237736,\n        48909.723678611284,\n        48955.228815622504,\n        48962.9163213206,\n        48969.299135535985,\n        48984.87179151237,\n        49014.49768095603,\n        49015.509937489136,\n        49015.73411672085,\n        49027.90464366983,\n        49044.2477710835,\n        49050.8456141882,\n        49058.62981066248,\n        49063.080031334735,\n        49089.469827057736,\n        49094.05408817927,\n        49114.18837283098,\n        49203.271784270604,\n        49221.58035642318,\n        49222.58194124208,\n        49222.88662211612,\n        49301.40859562837,\n        49376.2752769459,\n        49377.49483246453,\n        49377.610922031345,\n        49382.54409795684,\n        49465.874820836696,\n        49480.967015224065,\n        49485.11224170071,\n        49486.03369874621,\n        49486.32969517118,\n        49501.36221519932,\n        49525.8281041086,\n        49549.18282846853,\n        49578.41973135784,\n        49667.38842511771,\n        49714.88981739613,\n        49735.16911698488,\n        49744.32803870668,\n        49753.64664794903,\n        49775.75203656245,\n        49784.71358812632,\n        49851.650549254475,\n        49913.92065532753,\n        49919.512226860206,\n        49920.42618494396,\n        49920.60868178405,\n        49969.68931569659,\n        49973.67105577252,\n        49990.33522524405,\n        50015.941990507876,\n        50016.84811102601,\n        50017.07680434716,\n        50032.45772934619,\n        50040.89553404691,\n        50063.0132339651,\n        50078.17229387059,\n        50128.508715934055,\n        50128.81207743204,\n        50186.087090040164,\n        50200.221360541844,\n        50204.16274670362,\n        50225.68484555126,\n        50240.304775830606,\n        50280.76203776504,\n        50286.27201885004,\n        50381.95732747953,\n        50396.359363897915,\n        50429.99881932644,\n        50454.55164399604,\n        50486.358338686216,\n        50531.006018857806,\n        50561.881644147325,\n        50630.975644685095,\n        50680.526280428865,\n        50686.83076534653,\n        50687.022519119026,\n        50687.10418434932,\n        50687.13585003082\n    ];\n\nmodule.exports = {\n    distances: distances,\n    coordinates: coordinates,\n    aid_stations: [0, 76, 218, 375, 406, 519, 634, 755, 832, 924, 1013, 1100, 1152, 1222, 1305, 1383, 1449, 1565],\n\n    getLatLongFromDistance: (d) => {\n        for (let i = 0; i < distances.length; i++) {\n            if (d < distances[i]) return [coordinates[i][1], coordinates[i][0]];\n        }\n    }\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport View from 'ol/View';\nimport Feature from 'ol/Feature';\nimport { fromLonLat } from 'ol/proj';\nimport Point from 'ol/geom/Point';\nimport Polyline from 'ol/format/Polyline';\nimport { transform } from 'ol/proj';\nimport { Icon, Stroke, Style, Text, RegularShape } from 'ol/style';\nimport LineString from 'ol/geom/LineString';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Overlay from 'ol/Overlay';\n\nimport { distances, coordinates, aid_stations, getLatLongFromDistance } from './route-info.js'\n\n\nvar vectorSource = new VectorSource(),\n  vectorLayer = new VectorLayer({\n    source: vectorSource\n  }),\n  styles = {\n    route: new Style({\n      stroke: new Stroke({\n        width: 6, color: [14, 64, 18, 0.8]\n      }),\n    }),\n    rectangle: (text) => {\n      return new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"#c2f2e0\"\n          }),\n          stroke: new Stroke({\n            color: [5, 51, 34, 1],\n            width: 1\n          }),\n          radius: 200 / Math.SQRT2,\n          radius2: 200,\n          points: 4,\n          angle: 0,\n          scale: [0.9, 0.5],\n        }),\n        text: new Text({\n          text: text,\n          font: '8px monospace',\n          textAlign: \"center\",\n          scale: 2.2,\n          fill: new Fill({\n            color: \"#053322\"\n          })\n        })\n      })\n    },\n    icon: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/marker3.png'\n      }),\n    }),\n\n    icon2: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/start-marker.png'\n      }),\n    })\n  };\n\nvar map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  view: new View({\n    center: [8657171.159654377, 1449369.2919883956],\n    zoom: 13\n  })\n});\n\nvar utils = {\n  gettiming: function (url) {\n    return new Promise(function (resolve, reject) {\n      //make sure the coord is on street\n      fetch(url? url:'data/runners.csv').then(function (response) {\n        // Convert to JSON\n        resolve(response.text());\n      }).catch(function (e) { reject(e); });\n    });\n  },\n\n  createFeature: function (coord, style, name) {\n    var feature = new Feature({\n      name: name,\n      type: 'place',\n      geometry: new Point(fromLonLat(coord))\n    });\n    feature.setStyle(style);\n    vectorSource.addFeature(feature);\n    return feature;\n  },\n  createRoute: function (polyline) {\n    // route is ol.geom.LineString\n    var route = new Polyline({\n      factor: 1e5\n    }).readGeometry(polyline, {\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857'\n    });\n    var feature = new Feature({\n      type: 'route',\n      geometry: route\n    });\n    feature.setStyle(styles.route);\n    vectorSource.addFeature(feature);\n  },\n  to4326: function (coord) {\n    return transform([\n      parseFloat(coord[0]), parseFloat(coord[1])\n    ], 'EPSG:3857', 'EPSG:4326');\n  }\n};\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n});\nmap.addOverlay(popup);\n\n// create the route\nlet lines = new Feature({\n  geometry: new LineString(coordinates.map(c => fromLonLat([c[1], c[0]]))),\n  name: 'Line',\n});\n\nlines.setStyle(styles.route);\nvectorSource.addFeature(lines);\n\n\nfunction csvJSON(csv) {\n  var lines = csv.split(\"\\n\");\n  var result = [];\n  var headers = lines[0].split(\",\");\n\n  for (var i = 1; i < lines.length; i++) {\n\n    var obj = {};\n    var currentline = lines[i].split(\",\");\n\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j] ? currentline[j].replace('\\r','') : undefined;\n    }\n\n    result.push(obj);\n\n  }\n  return result;\n}\n\nlet getPrediction = (runner) => {\n  if (runner.TIME && runner.MARK && runner.MARK != 17) {\n    let sT = Date.parse(`Sun Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`); // start time\n    let eT = Date.parse(`Sun Oct 31 2021 ${runner.TIME}:00 GMT+0530 (India Standard Time)`); // elapsed time\n    let d_p = (distances[aid_stations[runner.MARK]] / (eT - sT)) * (Date.now() - sT); // distance_predicted\n    if (d_p > distances[aid_stations[Number(runner.MARK) + 1]]) { // if crossing next mark, keep it to 85-97% of it\n      d_p = distances[aid_stations[Number(runner.MARK) + 1]] - Math.floor(Math.random() * (500 - 100 + 1) + 100) ;\n    }\n\n    return {\n      'distance' : d_p,\n      'latlong' : getLatLongFromDistance(d_p) // get lat long for it\n    }; \n  } else if (runner.MARK) { // time not captured.\n    return {\n      'distance': distances[aid_stations[runner.MARK]], // last aid station mark\n      'latlong': [ coordinates[aid_stations[runner.MARK]][1], coordinates[aid_stations[runner.MARK]][0] ]// lat long of the last aid station\n    }\n  } else {\n    return {\n      'distance' : 0,\n      'latlong' : [coordinates[1], coordinates[0]] // no MARK means, not started\n    };\n  }\n}\n\nvar markerFeature = [];\nvar markerPrediction = {};\n\ndocument.getElementById(\"select\").addEventListener(\"change\", (e) => {\n  var val = document.getElementById(\"select\").value;\n  let splits = val.split(' | ');\n  let runner = runners.filter(r => r.NAME === splits[0]);\n\n  runner = (val === '- ALL -') ? runners : runner;\n  if (runner.length === 0) return;\n\n  markerFeature.forEach(m => {\n    vectorSource.removeFeature(m);\n  })\n  markerFeature = [];\n  $(element).popover('dispose');\n  runner.forEach(r => {\n    //console.log(r);\n    if (r.MARK) {\n      let p = getPrediction(r);\n      let m = utils.createFeature(p.latlong, styles.icon, r.BIB);\n      markerFeature.push(m);\n      markerPrediction[r.BIB] = p.distance;\n    }\n  })\n});\n\nvar getExpTime = (km, t) => {\n  let sT = Date.parse(`Sun Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`);\n  let cT = Date.parse(`Sun Oct 31 2021 ${t}:00 GMT+0530 (India Standard Time)`);\n  let expT = ((cT - sT) / km) * 50000;\n  return {\n    'eta': t ? (new Date(sT + expT)).toLocaleString(): null,\n    'timing': getHourAndMin(cT - sT)\n  };\n}\n\nvar getHourAndMin = (milli) => {\n  let mins = ( milli / (1000 * 60) ) % 60;\n  let hours = Math.floor(milli / (1000 * 60 * 60));\n\n  return `${hours} HRS, ${mins} MINS`;\n}\n\nvar runners = [];\nutils.gettiming().then(function (d) {\n  runners = csvJSON(d);\n  var datalist = document.getElementById(\"runners\");\n  datalist.innerHTML += `<option value=\"- ALL -\"></option>`;\n  runners.forEach(d => {\n    // create the remaining\n    datalist.innerHTML += `<option value=\"${d.NAME} | ${d.BIB}\"></option>`;\n  });\n});\n\nutils.createFeature([77.7048069, 12.9065275], styles.icon2, 'Startpoint');\n\nmap.on('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  if (feature && feature.get('name') && feature.get('name').startsWith('B42SE')) {\n    popup.setPosition(evt.coordinate);\n    let runner = feature.get('name') ? runners.filter(r => r.BIB === feature.get('name')) : null;\n    if (runner && runner.length > 0) runner = runner[0];\n\n    let name = runner.NAME,\n      distance = markerPrediction[runner.BIB] / 1000,\n      exptime = getExpTime(distances[aid_stations[runner.MARK]], runner.TIME),\n      msg = runner.MARK == 17 ? `Finished in ${exptime.timing}` : `ETA: ${exptime.eta ? exptime.eta : 'N/A'}`;\n\n    $(element).popover('dispose');\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: `<div>${name}</div><div> Distance: ${Math.round(distance * 100) / 100} km</div><div>${msg}</div>`\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});\n"],"names":["$198f17545c774c60$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$242d04b4abe8e74a$export$4e734a3b32fb971b","a","b","$242d04b4abe8e74a$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$242d04b4abe8e74a$export$292cfa960964f0e0","begin","end","tmp","$242d04b4abe8e74a$export$8b58be045bf06082","data","extension","Array","isArray","$242d04b4abe8e74a$export$e9bab7fafb253603","arr1","arr2","len1","$e8bb49b0723cf385$export$22e23a2304399231","$e8bb49b0723cf385$export$8f11cee4bdc7e668","$e8bb49b0723cf385$export$1cd1943b3a73bbe8","$b72bee802ee7837c$export$817eb92a8194bab0","Error","$b72bee802ee7837c$var$uidCounter_","$b72bee802ee7837c$export$5e82334337e0f204","obj","ol_uid","String","$b72bee802ee7837c$export$a4ad2735b021c132","$557f882b5755ab40$var$ua","navigator","userAgent","toLowerCase","$557f882b5755ab40$export$8442bdfd18b7b8a6","indexOf","$557f882b5755ab40$export$39dfd62a25e0fe93","$557f882b5755ab40$export$76c0a3b101d93136","$557f882b5755ab40$export$6b83a0446fc26f94","devicePixelRatio","$557f882b5755ab40$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$557f882b5755ab40$export$716f8695eedb9bad","Image","decode","$557f882b5755ab40$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$d51b57da984548f6$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$d51b57da984548f6$var$__extends","$260eb39d4574b27d$export$a7a9523472993e97","assertion","errorCode","$d51b57da984548f6$exports","default","$67dae15869f57ba2$var$transformStringDiv","$67dae15869f57ba2$export$adaa4cf7ef1b65be","transform","c","d","e","f","$67dae15869f57ba2$export$5635d7ef4b8fee1c","coordinate","x","y","$67dae15869f57ba2$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$67dae15869f57ba2$export$bd70ea2a93c0fa4","source","mat","det","$67dae15869f57ba2$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$42857dc1e4e39ae1$export$2e2bcd8739ae039","$2034d68cc04dd519$export$2e2bcd8739ae039","$09aee13076acae13$export$8aceca7c77505534","coordinates","extent","$09aee13076acae13$export$fe201bb3bbe031e9","ii","$09aee13076acae13$export$1f820e3920fa5715","$09aee13076acae13$export$ab1029bcae9ddb4a","value","opt_extent","$09aee13076acae13$export$9cd59f9826255e47","slice","$09aee13076acae13$export$cbe64c389534206f","dx","dy","$09aee13076acae13$export$ac68c24d37ca240f","$09aee13076acae13$export$805bdfd6d6690e97","$09aee13076acae13$export$be866b1e0809b17e","extent1","extent2","$09aee13076acae13$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$09aee13076acae13$export$958e3e1a02eac4b6","$09aee13076acae13$export$3e2152b047719fa1","$09aee13076acae13$export$e9bab7fafb253603","$09aee13076acae13$export$30570204156ffd18","flatCoordinates","offset","stride","$09aee13076acae13$export$f1dab130b92b85a9","min","max","$09aee13076acae13$export$f9ed8a3d123a08e2","callback","val","$09aee13076acae13$export$8d09f5e2e1bf560d","$09aee13076acae13$export$e77c1cf70445e168","$09aee13076acae13$export$b84fa077c8b05295","$09aee13076acae13$export$cb1538b07e6964ff","$09aee13076acae13$export$520c40045967cb15","area","$09aee13076acae13$export$dd1bc94b04021eeb","$09aee13076acae13$export$3c49c185de0c2bfc","$09aee13076acae13$export$c08559766941f856","$09aee13076acae13$export$c91255cadecfe081","$09aee13076acae13$export$a1cfd206661d0801","corner","$09aee13076acae13$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$09aee13076acae13$export$72209efa88586d42","intersection","$09aee13076acae13$export$7b0a31e10bbff018","$09aee13076acae13$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$09aee13076acae13$var$_boundingExtentXYs","$171e0dde495a42af$export$7d15b64cf5a3a4c4","$171e0dde495a42af$export$2e2fd1ad24e4d350","cosh","exp","$171e0dde495a42af$export$b9fae0bba9d9094d","log2","log","LOG2E","$171e0dde495a42af$export$251bb0a9cef172e6","t","$171e0dde495a42af$export$88e6ebb4fe54f538","$171e0dde495a42af$export$56cb859c01fa134d","angleInRadians","PI","$171e0dde495a42af$export$cba01ba138429a1d","angleInDegrees","$171e0dde495a42af$export$ba467bec01d66def","r","$171e0dde495a42af$export$3a89f8d6f6bf6c9f","$50211efa3313caf5$var$HEX_COLOR_RE_","$50211efa3313caf5$var$NAMED_COLOR_RE_","$50211efa3313caf5$export$590567be997858b6","color","$50211efa3313caf5$export$f84e8e69fd4488a5","$50211efa3313caf5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$50211efa3313caf5$export$3004f64547af360e","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$50211efa3313caf5$export$a3295358bff77e","map","Number","$50211efa3313caf5$var$fromStringInternal_","$50211efa3313caf5$export$75093a47a9fa838d","undefined","$2d3f65ee78aa7b11$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$2d3f65ee78aa7b11$var$getKey","set","setSize","maxCacheSize","$2d3f65ee78aa7b11$export$747ccdf771a87ab8","$23cc37b221334df5$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$f182d89dddef1ea8$export$2e2bcd8739ae039","$d57f519927fa72cd$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$d57f519927fa72cd$export$42ffd38884aecdac","object","property","$d57f519927fa72cd$export$a5c4301012ad6f07","values","$d57f519927fa72cd$export$dd1bc94b04021eeb","$ca140b686b49c1e3$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ca140b686b49c1e3$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$ca140b686b49c1e3$export$2e2bcd8739ae039","$17528e13835ea298$export$2e2bcd8739ae039","$ddbfda1fb7b83a89$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$ddbfda1fb7b83a89$export$8d2a95bc11b44725","$ddbfda1fb7b83a89$export$b0a21c8b3c1c921","$b205a5a0a479f629$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$b205a5a0a479f629$var$__extends","changed","getRevision","len","ol_key","$b205a5a0a479f629$export$b7ef3f8527533384","$ca140b686b49c1e3$exports","$b205a5a0a479f629$export$2e2bcd8739ae039","$02ff1a30291f579c$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$02ff1a30291f579c$var$__extends","$02ff1a30291f579c$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$b205a5a0a479f629$exports","$de08933662e889cc$export$2e2bcd8739ae039","$abe2849bf275faed$export$2e2bcd8739ae039","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$abe2849bf275faed$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$02ff1a30291f579c$exports","$6afba345795dd0eb$export$2e2bcd8739ae039","$10a428a553b91e25$export$2e2bcd8739ae039","$3f598d8186f667d5$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$3f598d8186f667d5$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$3f598d8186f667d5$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$abe2849bf275faed$exports","$9c25d20f9d7ab135$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$9c25d20f9d7ab135$export$bb628a54ab399bc9","cosAngle","sinAngle","$9c25d20f9d7ab135$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$9c25d20f9d7ab135$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$4d624cc5d18fde9b$var$MapRenderer","MapRenderer","map_","$4d624cc5d18fde9b$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$3f598d8186f667d5$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$4d624cc5d18fde9b$var$expireIconCache","$4d624cc5d18fde9b$export$2e2bcd8739ae039","$38088ea21604ea9d$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$38088ea21604ea9d$var$__extends","$71fff7b7ffdcca6e$export$981241db82723ce2","$71fff7b7ffdcca6e$export$4d4f8be70b656192","$71fff7b7ffdcca6e$export$e16017ac68d14492","$71fff7b7ffdcca6e$var$fontRegEx","RegExp","$71fff7b7ffdcca6e$var$fontRegExMatchIndex","$71fff7b7ffdcca6e$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$71fff7b7ffdcca6e$export$52ec625a6a53b6a6","$da5bbe25d8fad2eb$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$da5bbe25d8fad2eb$export$e823f88e4111159a","element","offsetWidth","marginLeft","marginRight","$da5bbe25d8fad2eb$export$fc5b8aac72846d1e","offsetHeight","marginTop","marginBottom","$da5bbe25d8fad2eb$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$da5bbe25d8fad2eb$export$1d0aa160432dfea5","$da5bbe25d8fad2eb$export$1e1c9bf5a4ffe0d1","lastChild","$f3299d0ba5b570c1$export$3847dfea4f8d4dfa","$f3299d0ba5b570c1$export$c495d52ee3fd74b2","$f3299d0ba5b570c1$export$17bd0c38d6ae694e","$f3299d0ba5b570c1$export$e21b4112fdc612fc","$f3299d0ba5b570c1$export$365eb9648cf19bd0","$f3299d0ba5b570c1$export$1eb2eaecacf2031e","$f3299d0ba5b570c1$export$94d53b95641b5766","$f3299d0ba5b570c1$export$cf2279a1bff62eb","$f3299d0ba5b570c1$export$40a9eeef55665a40","$f3299d0ba5b570c1$export$1d36981fcadac93b","console","warn","$f3299d0ba5b570c1$var$measureFont","measureElement","$f3299d0ba5b570c1$var$measureContext","$f3299d0ba5b570c1$export$7fdcec604f0b1fa7","$f3299d0ba5b570c1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$f3299d0ba5b570c1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$f3299d0ba5b570c1$export$4feaf6852ff92513","metrics","$f3299d0ba5b570c1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$f3299d0ba5b570c1$export$915c7ba51467308f","$f3299d0ba5b570c1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$f3299d0ba5b570c1$var$executeLabelInstructions","drawImage","restore","$d8a652e4527f1969$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$71fff7b7ffdcca6e$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$d8a652e4527f1969$var$__extends","event_1","$38088ea21604ea9d$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$da5bbe25d8fad2eb$export$caeacfe04f52533a","getDataAtPixel","$4d624cc5d18fde9b$exports","$d8a652e4527f1969$export$2e2bcd8739ae039","$d9a0ab5d45e10d29$export$2e2bcd8739ae039","$55a45667519a063f$var$Property","$55a45667519a063f$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$55a45667519a063f$var$__extends","$55a45667519a063f$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$55a45667519a063f$export$2e2bcd8739ae039","$fbe1f30b9b0811de$var$Property","$fbe1f30b9b0811de$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$55a45667519a063f$exports","setLayers","$fbe1f30b9b0811de$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$fbe1f30b9b0811de$export$2e2bcd8739ae039","$51fcb9efdec94cd2$export$2e2bcd8739ae039","MapEvent","$51fcb9efdec94cd2$var$__extends","$dcc91a0eaf5c85b1$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$dcc91a0eaf5c85b1$var$__extends","getEventPixel","getCoordinateFromPixel","$51fcb9efdec94cd2$exports","$fb224f2039acedbe$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$f7f6b6491b2890ed$export$2e2bcd8739ae039","$308a4eee2e11ac9e$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$308a4eee2e11ac9e$var$__extends","emulateClick_","pointerEvent","newEvent1","$dcc91a0eaf5c85b1$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$a85542ba6ee181e9$export$2e2bcd8739ae039","$66376b6b243d2dc1$export$2e2bcd8739ae039","$dac38e077a8a1495$export$b4af72c40fd57063","$dac38e077a8a1495$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$dac38e077a8a1495$export$2e2bcd8739ae039","$b60da4fc04596e98$export$2e2bcd8739ae039","$286f240d744f313a$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$286f240d744f313a$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$286f240d744f313a$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$5a8dbd971169bbba$export$2e2bcd8739ae039","$02478b6026332846$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$02478b6026332846$export$1482081eec883108","$02478b6026332846$export$2e2bcd8739ae039","$282e8a7f99c41353$export$2e2bcd8739ae039","$c80cb2b125b4e0d9$export$2e2bcd8739ae039","$6f70a5e237bbd780$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a0a3dd962f5651db$export$2d2c9be8b5b863f","$a0a3dd962f5651db$export$f3928063e5e96d35","$a0a3dd962f5651db$export$21e6da8a7375dfe8","$a0a3dd962f5651db$export$ae9d6ed80df710e5","$a0a3dd962f5651db$export$d26945d1ad52feeb","tan","$a0a3dd962f5651db$var$EPSG3857Projection","EPSG3857Projection","point","$a0a3dd962f5651db$var$__extends","$a0a3dd962f5651db$export$b508d7ad9a891c1b","$a0a3dd962f5651db$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$a0a3dd962f5651db$export$8c71322ec28ed6b4","atan","$c0e91db6b9cdad65$export$21e6da8a7375dfe8","$c0e91db6b9cdad65$export$1482081eec883108","$c0e91db6b9cdad65$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$c0e91db6b9cdad65$var$__extends","$c0e91db6b9cdad65$export$b508d7ad9a891c1b","$fa1fc08946082439$var$cache","$93a9ea042b1bc378$var$transforms","$93a9ea042b1bc378$export$e16d8520af44a096","destination","sourceCode","destinationCode","$1f8fb04b1e88a5cd$export$63f2df7bd7371262","$1f8fb04b1e88a5cd$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1f8fb04b1e88a5cd$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51ce273c1692e987$export$dd516654c5f598fb","$51ce273c1692e987$export$83e8ab53904f8022","$51ce273c1692e987$export$59ae956cd3e343f7","$fa1fc08946082439$export$e16d8520af44a096","$51ce273c1692e987$export$3988ae62b71be9a3","projectionLike","replace","$51ce273c1692e987$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$51ce273c1692e987$export$e3c4995a701c26a3","vertices","$51ce273c1692e987$export$eeb8392580a05a37","projections","$51ce273c1692e987$export$638ad73f7aafb913","$51ce273c1692e987$export$549167224996a0fb","defaultCode","$51ce273c1692e987$export$b15d9668511529b9","opt_projection","$51ce273c1692e987$export$51186ad6e864892a","$51ce273c1692e987$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$93a9ea042b1bc378$export$3988ae62b71be9a3","$51ce273c1692e987$export$fce0c6cfca85ed96","$51ce273c1692e987$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$51ce273c1692e987$var$userProjection","$51ce273c1692e987$export$3973b77d5f6f2790","$51ce273c1692e987$export$698f563af1ba02a5","$51ce273c1692e987$export$d4b8ec0b96db1ee2","destProjection","$51ce273c1692e987$export$96bfd09e2cffb006","$51ce273c1692e987$export$494be3a3a25689ca","$51ce273c1692e987$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$892afa8da6ff9c56$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$892afa8da6ff9c56$export$f883a24d5edde77c","$6f142810539a59f0$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$6f142810539a59f0$var$getSmoothClampedResolution","$6f142810539a59f0$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$639db43e7a8d515a$export$e20fbacbb41798b","$639db43e7a8d515a$export$f883a24d5edde77c","$9a77576133df9d74$export$929e5a82286172a6","pow","$9a77576133df9d74$export$57636bb43b1ccbb0","$9a77576133df9d74$export$9b47139b511b56e4","$9a77576133df9d74$export$45db2fc2f15997e7","$a0a3dd962f5651db$exports","PROJECTIONS","$c0e91db6b9cdad65$exports","fromEPSG4326","toEPSG4326","$6c33523acda28428$export$2e2bcd8739ae039","$93aa503286cf5212$export$b92b2dedcfff79de","opt_dest","dest","$93aa503286cf5212$export$bb628a54ab399bc9","anchor","anchorX","anchorY","k","$ea4264a4ff6265c9$var$tmpTransform","$ea4264a4ff6265c9$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ea4264a4ff6265c9$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$09aee13076acae13$export$6a4fe494c558c238","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$ea4264a4ff6265c9$export$2e2bcd8739ae039","$873446fe266f67e7$var$SimpleGeometry","SimpleGeometry","layout","$873446fe266f67e7$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$873446fe266f67e7$export$6af0c1b4a8549a43","setCoordinates","opt_layout","setLayout","nesting","$873446fe266f67e7$var$getLayoutForStride","$93aa503286cf5212$export$dcdf75081b88279d","$93aa503286cf5212$export$d73ee8ef04f5226a","$ea4264a4ff6265c9$exports","$873446fe266f67e7$export$a3767472617c7861","simpleGeometry","$873446fe266f67e7$export$2e2bcd8739ae039","$72fefbd983bcbe6a$var$assignClosest","offset1","offset2","$72fefbd983bcbe6a$export$bc2eb611ddf80103","squaredDelta","$72fefbd983bcbe6a$export$fbf31c8f2668ed5a","ends","$72fefbd983bcbe6a$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$72fefbd983bcbe6a$export$5a48a0eefcf14992","$c8eff196dbbc07af$export$5c4daf67e03c190f","$c8eff196dbbc07af$export$47c3746a74384d45","coordinatess","opt_ends","jj","$c6bd32c4126fb342$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$c6bd32c4126fb342$export$51a0620f7a28532b","$c6bd32c4126fb342$export$b84e8d2c4920a0c6","$c6bd32c4126fb342$export$60a9904b67f8d51b","simplifiedEnds","$680fff1ff5967196$export$9c0934e4e9c3f61e","opt_coordinates","$680fff1ff5967196$export$cbb9596fc0f40db2","opt_coordinatess","$680fff1ff5967196$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$71997ce93cb9ec89$export$3c5e1905f889266e","twiceArea","$71997ce93cb9ec89$export$7a8ee541dfdf2ed5","$d331075f6abc3caf$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d331075f6abc3caf$var$__extends","getArea","$873446fe266f67e7$exports","$e146c4255f752222$var$Point","Point","$e146c4255f752222$var$__extends","$c8eff196dbbc07af$export$60815ead40ec79ab","$e146c4255f752222$export$2e2bcd8739ae039","$a97abfe500512224$export$cedabedc7ac0e138","$a97abfe500512224$export$949a7a3a4b6f34fa","wn","$a97abfe500512224$export$ae868c0f6acc3355","$fbc665810373f014$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$1d929bbb982e7ad1$export$4b80e395e36b5a56","ret","$b9216567382fd63e$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$09aee13076acae13$export$a6a5a7a461419425","$b9216567382fd63e$export$76dcd8f8f83b6ddb","$b9216567382fd63e$export$830a0dafbb2ef1c5","$765add36bcb2b344$export$741858880c96b18c","$58c39c2abab0d873$export$318f2842ed17e094","edge","$58c39c2abab0d873$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$58c39c2abab0d873$export$b71b604ddfc778c7","$494141410008044e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$494141410008044e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e146c4255f752222$exports","getLinearRingCount","getLinearRing","$d331075f6abc3caf$exports","getLinearRings","linearRings","$494141410008044e$export$2e2bcd8739ae039","$494141410008044e$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$494141410008044e$export$c16b671815801c75","$494141410008044e$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$494141410008044e$export$87d6a1539a56e47f","getRadius","startAngle","$b61ec8a9c26a15bd$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$b61ec8a9c26a15bd$var$__extends","resolutionConstraintInfo","$b61ec8a9c26a15bd$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$b61ec8a9c26a15bd$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$b61ec8a9c26a15bd$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$b61ec8a9c26a15bd$export$ee75376562060184","setHint","updateAnimations_","$b61ec8a9c26a15bd$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$b61ec8a9c26a15bd$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$494141410008044e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$6f142810539a59f0$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$6f142810539a59f0$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$b61ec8a9c26a15bd$export$2e2bcd8739ae039","$0b0c604ff213866b$export$622c471beb1693c7","$0b0c604ff213866b$export$a71a825ff42fb8e1","$e5de9654c10e65fa$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$fbe1f30b9b0811de$exports","view","$b61ec8a9c26a15bd$exports","$e5de9654c10e65fa$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$286f240d744f313a$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$e5de9654c10e65fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$308a4eee2e11ac9e$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","parseFloat","getClientRects","$e5de9654c10e65fa$export$2e2bcd8739ae039","$2378f1032abec9d1$var$Control","Control","target_","listenerKeys","$2378f1032abec9d1$var$__extends","mapEvent","$2378f1032abec9d1$export$2e2bcd8739ae039","$a9244539d282f1c5$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$a9244539d282f1c5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$2378f1032abec9d1$exports","$a9244539d282f1c5$export$2e2bcd8739ae039","$1e8af08824c3e884$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$1e8af08824c3e884$var$__extends","resetNorth_","$69299efdbde0e182$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$69299efdbde0e182$var$__extends","zoomByDelta_","currentZoom","newZoom","$fdf462d5ee425342$export$2e2bcd8739ae039","$855af52b0af99805$export$4c486572e961a974","$855af52b0af99805$export$ace321ff2a8016ef","$855af52b0af99805$export$2e2bcd8739ae039","Interaction","setActive","$855af52b0af99805$var$__extends","active","$8685060a4398cf47$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$8685060a4398cf47$var$__extends","stopEvent","shiftKey","$855af52b0af99805$exports","zoomByDelta","$71c992dd435def6e$export$e2a20c553f6c85ce","$71c992dd435def6e$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$71c992dd435def6e$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$71c992dd435def6e$var$isPointerDraggingEvent","$70da2eacd644b700$export$84bf76cd7afc7469","conditions","pass","$70da2eacd644b700$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$70da2eacd644b700$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$70da2eacd644b700$export$d7ddd398f22d79ef","$70da2eacd644b700$export$ba9e5d519bc326ca","$70da2eacd644b700$export$1238ad6b5e7fff70","$70da2eacd644b700$export$fdc892d0d8fe3bfb","$70da2eacd644b700$export$5d31fe68a477cfbb","$70da2eacd644b700$export$e5570ca80cd8fd54","tagName","$70da2eacd644b700$export$abb7acbfa76bf3c4","pointerType","$70da2eacd644b700$export$189f0d593022b199","isPrimary","$a559dc7f92aae2b9$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a559dc7f92aae2b9$var$__extends","centroid","$71c992dd435def6e$exports","update","getDistance","getAngle","centerpx","$d59c9ac61cc50ba7$export$2e2bcd8739ae039","DragRotate","lastAngle_","$d59c9ac61cc50ba7$var$__extends","$3a69a5cd3d9efe81$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$3a69a5cd3d9efe81$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$ee7f737b890585b1$var$DragBoxEventType","$ee7f737b890585b1$export$7053c33c051365ea","DragBoxEvent","$ee7f737b890585b1$var$__extends","$ee7f737b890585b1$export$2e2bcd8739ae039","DragBox","box_","$3a69a5cd3d9efe81$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$8fefcee995bf9fa2$export$2e2bcd8739ae039","DragZoom","out_","out","$8fefcee995bf9fa2$var$__extends","factor","$ee7f737b890585b1$exports","$fabc923eab7b8d35$export$2e2bcd8739ae039","$58983494123aebad$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$58983494123aebad$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$975fb2a1297d8301$export$2e2bcd8739ae039","KeyboardZoom","$975fb2a1297d8301$var$__extends","charCode","charCodeAt","$16f8404d2308a2e3$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bf6c611fd4e916b8$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$bf6c611fd4e916b8$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$bf6c611fd4e916b8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$116bb9adf1461407$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$116bb9adf1461407$var$__extends","rotationDelta","touch0","touch1","$59799bb9abb3d845$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$59799bb9abb3d845$var$__extends","scaleDelta","$18255666c21c3e7d$export$2e2bcd8739ae039","Map","$69299efdbde0e182$exports","zoomOptions","$1e8af08824c3e884$exports","rotateOptions","attribution","$a9244539d282f1c5$exports","attributionOptions","$c2f4f7c3a952c48b$export$ebe90cb607ad99e","altShiftDragRotate","$d59c9ac61cc50ba7$exports","doubleClickZoom","$8685060a4398cf47$exports","zoomDelta","zoomDuration","dragPan","$a559dc7f92aae2b9$exports","pinchRotate","$116bb9adf1461407$exports","pinchZoom","$59799bb9abb3d845$exports","keyboard","$58983494123aebad$exports","$975fb2a1297d8301$exports","mouseWheelZoom","$bf6c611fd4e916b8$exports","shiftDragZoom","$8fefcee995bf9fa2$exports","$73908c9ebef59c42$export$ebe90cb607ad99e","$18255666c21c3e7d$var$__extends","$d8a652e4527f1969$exports","$e5de9654c10e65fa$exports","$4f0782892497891b$exports","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","u1","m1","d1","o","h2","u","p","t2","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","define","amd","RBush","$96f1769f0e2cd014$export$2e2bcd8739ae039","$96a2d97817de77d8$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$c89ac91ebd6de9e2$export$dc5b1400ac3a10a8","$aa6f93a15af91fc4$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$aa6f93a15af91fc4$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$aa6f93a15af91fc4$export$2e2bcd8739ae039","$44eb67882e11d95b$export$2e2bcd8739ae039","CircleStyle","$44eb67882e11d95b$var$__extends","setRadius","$aa6f93a15af91fc4$exports","$6c2904a346e8a113$export$2e2bcd8739ae039","Fill","color_","setColor","$3076747ad25995d8$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$9576ac28723638ef$var$Style","Style","geometryFunction_","$9576ac28723638ef$var$defaultGeometryFunction","setGeometry","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$9576ac28723638ef$var$defaultStyles","$9576ac28723638ef$export$6865c5ac2f5ce8b6","$44eb67882e11d95b$exports","$9576ac28723638ef$export$2e2bcd8739ae039","$16d3dc96393a4cc1$var$Property","$16d3dc96393a4cc1$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$16d3dc96393a4cc1$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$9576ac28723638ef$export$c314ea3f6b164147","$accd2c26c82bb2e9$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$accd2c26c82bb2e9$export$f21891651e408226","$accd2c26c82bb2e9$export$7a98aa5364d62ba8","$accd2c26c82bb2e9$export$9f746cc58a899a00","$accd2c26c82bb2e9$export$89b10f327e413e71","$accd2c26c82bb2e9$export$2e2bcd8739ae039","$8ce9a7fca4da49bf$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$5da8d3b3b24d11fc$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$5da8d3b3b24d11fc$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$5da8d3b3b24d11fc$export$2e2bcd8739ae039","$c11bdced0b9a81c9$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$c11bdced0b9a81c9$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$5da8d3b3b24d11fc$exports","$a1c607adb44daba4$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$a1c607adb44daba4$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$a1c607adb44daba4$export$2e2bcd8739ae039","$c7cb6b0a8b35f2a7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$c7cb6b0a8b35f2a7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$c7cb6b0a8b35f2a7$export$2e2bcd8739ae039","$7a5b29aec00368aa$export$2e2bcd8739ae039","$3726f8bfced39bb2$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$690d1b56d0b26f57$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$690d1b56d0b26f57$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$690d1b56d0b26f57$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$690d1b56d0b26f57$export$2e2bcd8739ae039","$b18b939817d37d3c$var$BATCH_CONSTRUCTORS","Circle","$c7cb6b0a8b35f2a7$exports","Default","$c11bdced0b9a81c9$exports","LineString","$a1c607adb44daba4$exports","Text","$690d1b56d0b26f57$exports","$b18b939817d37d3c$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$94d311d3e85a3c42$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$94d311d3e85a3c42$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$70e7b28f28588a87$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$70e7b28f28588a87$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$94d311d3e85a3c42$exports","$f7813185a05ce2a4$export$2e2bcd8739ae039","$f21785605114342d$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$b40fd18e7edc0f63$export$153f8c6b4d8caebc","$712585ac0ed150a1$var$tmpExtent","$712585ac0ed150a1$var$p1","$712585ac0ed150a1$var$p2","$712585ac0ed150a1$var$p3","$712585ac0ed150a1$var$p4","$712585ac0ed150a1$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$712585ac0ed150a1$var$rtlRegEx","fromCharCode","$712585ac0ed150a1$var$horizontalTextAlign","align","test","TEXT_ALIGN","$712585ac0ed150a1$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$f3299d0ba5b570c1$export$a539decdd6096c57","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$712585ac0ed150a1$export$2e2bcd8739ae039","$e21e6c0c2e4854b9$var$ORDER","$e21e6c0c2e4854b9$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$e21e6c0c2e4854b9$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$e21e6c0c2e4854b9$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$e21e6c0c2e4854b9$export$2e2bcd8739ae039","$9d54967724bc5601$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9d54967724bc5601$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$9d54967724bc5601$export$2e2bcd8739ae039","$23ee047c53fc3d1c$export$2e2bcd8739ae039","$75d6b49f100392b4$export$2e2bcd8739ae039","$c2632c8bbff4f1e5$export$2e2bcd8739ae039","ImageBase","$c2632c8bbff4f1e5$var$__extends","$8910981f7733f7b9$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$8910981f7733f7b9$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$c2632c8bbff4f1e5$exports","$64d0fe27a1c2456e$var$taintedTestContext","$64d0fe27a1c2456e$var$IconImage","IconImage","imageState_","tainted_","$64d0fe27a1c2456e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$8910981f7733f7b9$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$64d0fe27a1c2456e$export$3988ae62b71be9a3","$4d16f53ba327d379$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$64d0fe27a1c2456e$exports","offset_","offsetOrigin_","offsetOrigin","$4d16f53ba327d379$var$__extends","setAnchor","iconImageSize","$21fcba48fe05b60d$export$ab51038298418f25","$963bb735b2ca135f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$963bb735b2ca135f$export$531ddd8416d52dfc","feature1","feature2","$963bb735b2ca135f$export$bdacc5b475012edb","$963bb735b2ca135f$export$36f470a33a42f413","$963bb735b2ca135f$var$renderGeometry","$963bb735b2ca135f$var$renderFeatureInternal","getGeometries","$afbb030f8356b013$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$afbb030f8356b013$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$67dae15869f57ba2$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$9d54967724bc5601$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4d16f53ba327d379$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$21fcba48fe05b60d$export$bd05e394339d469","resultFeatures","$21fcba48fe05b60d$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$09aee13076acae13$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$963bb735b2ca135f$export$75084a70d324c1e6","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$70e7b28f28588a87$exports","$afbb030f8356b013$export$2e2bcd8739ae039","$2682b71b2901dd5b$export$2e2bcd8739ae039","VectorLayer","$2682b71b2901dd5b$var$__extends","$afbb030f8356b013$exports","$16d3dc96393a4cc1$exports","$d501bf52a5fdb98e$var$RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$d501bf52a5fdb98e$export$2e2bcd8739ae039","$6fd1db52bb150087$var$adaptAttributions","attributionLike","$6fd1db52bb150087$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$6fd1db52bb150087$var$__extends","getContextOptions","refresh","setAttributions","setState","$2bc97527efdad423$export$2e2bcd8739ae039","$34a16b0e54877e09$export$84bf76cd7afc7469","$cf13a6053fbfb2c4$export$2e2bcd8739ae039","$5da96d487b25628b$var$withCredentials","$5da96d487b25628b$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5da96d487b25628b$export$441d7b57adab24d0","dataProjection","addFeatures","$b636ac1ff32355bd$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$b636ac1ff32355bd$var$__extends","$b636ac1ff32355bd$var$VectorSource","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6fd1db52bb150087$exports","$b636ac1ff32355bd$export$2e2bcd8739ae039","$b8f9ef608258debf$export$2e2bcd8739ae039","$6d613fff339c23be$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$6d613fff339c23be$var$__extends","getPreload","getUseInterimTilesOnError","$41c1f55d86eb0ee8$var$TileRange","TileRange","containsTileRange","getHeight","$41c1f55d86eb0ee8$export$958e3e1a02eac4b6","$41c1f55d86eb0ee8$export$2e2bcd8739ae039","$4d5b4b2ec243336c$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$4d5b4b2ec243336c$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","endTransition","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$4d5b4b2ec243336c$export$2e2bcd8739ae039","$9af931ecc3f060e8$export$2e2bcd8739ae039","TileLayer","$9af931ecc3f060e8$var$__extends","$4d5b4b2ec243336c$exports","$6d613fff339c23be$exports","$93650dd9a7608979$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$93650dd9a7608979$var$__extends","release","refreshInterimChain","getTileCoord","$479dcb8db4bda8fa$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$479dcb8db4bda8fa$var$__extends","naturalWidth","naturalHeight","$93650dd9a7608979$exports","$9a1cf96a930d5a58$var$brokenDiagonalRendering_","$288c3ce7a59688cb$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$eca005c166f5ca0a$export$ab6c91696bd3263e","msImageSmoothingEnabled","$9a1cf96a930d5a58$var$drawTestTriangle","v1","u2","v2","$9a1cf96a930d5a58$var$verifyBrokenDiagonalRendering","$9a1cf96a930d5a58$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$9a1cf96a930d5a58$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$171e0dde495a42af$export$8240f01c446270e6","$9a1cf96a930d5a58$var$isBrokenDiagonalRendering","ud","vd","steps","$fb80bc4c69234ab8$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$9a1cf96a930d5a58$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$fb80bc4c69234ab8$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$9cdf987200b0aa45$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$9cdf987200b0aa45$export$2e2bcd8739ae039","$f542b78ad7fc0677$export$958e3e1a02eac4b6","opt_tileCoord","$f542b78ad7fc0677$export$92d0df0f1d25c63c","$f542b78ad7fc0677$export$a47fb462a08de82f","$5823c018e97cb242$var$TileCache","TileCache","$5823c018e97cb242$var$__extends","pruneExceptNewestZ","$f542b78ad7fc0677$export$a807b7874eb66454","$5823c018e97cb242$export$2e2bcd8739ae039","$4f588e6ca9a89608$export$2e2bcd8739ae039","$6986c999812c2763$var$tmpTileCoord","$6986c999812c2763$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$6986c999812c2763$export$2e2bcd8739ae039","$b07b4a254fd8c72a$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$b07b4a254fd8c72a$var$resolutionsFromExtent","$b07b4a254fd8c72a$export$ce88871416242df8","$b07b4a254fd8c72a$export$7b5b6ef8fd55fac4","$b07b4a254fd8c72a$export$a251b12f5601c16f","opt_maxResolution","half","$31e561e541184b11$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$5823c018e97cb242$exports","tmpSize","tileOptions","$31e561e541184b11$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$b07b4a254fd8c72a$export$39a9ce3624977b84","$f542b78ad7fc0677$export$60bedf8e3e3c3dbe","$31e561e541184b11$export$c571855c51e6c4b6","TileSourceEvent","$31e561e541184b11$export$2e2bcd8739ae039","$6d3f395198882205$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$6d3f395198882205$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f542b78ad7fc0677$export$d6af199866bfb566","$6d3f395198882205$export$4229b1d9af69b3be","$5625bdab397b8065$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$5625bdab397b8065$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$31e561e541184b11$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$6d3f395198882205$export$2a1fa079bfd73dde","$5625bdab397b8065$export$2e2bcd8739ae039","$3102cb6a48eb7b01$var$TileImage","TileImage","$3102cb6a48eb7b01$var$defaultTileLoadFunction","tileClass","$479dcb8db4bda8fa$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$3102cb6a48eb7b01$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$fb80bc4c69234ab8$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5625bdab397b8065$exports","imageTile","$3102cb6a48eb7b01$export$2e2bcd8739ae039","$c7284426848359a1$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$b07b4a254fd8c72a$export$38500bbeccc864ff","$c7284426848359a1$var$__extends","$3102cb6a48eb7b01$exports","$4613e68d4486e86c$export$4de8a5e77eb994ad","$4613e68d4486e86c$export$2e2bcd8739ae039","OSM","$4613e68d4486e86c$var$__extends","$c7284426848359a1$exports","$391871f9a2e5834b$export$bb06ddfd5d66e02e","$391871f9a2e5834b$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$391871f9a2e5834b$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$7b709bd8225bc45f$export$687ff82efd78795b","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$242d04b4abe8e74a$export$2e0ae67339d5f1ac","$7b709bd8225bc45f$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$720fa649bbd4a7f1$export$2e2bcd8739ae039","flatMidpoint_","flatMidpointRevision_","$720fa649bbd4a7f1$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$6ce659ab3eb3d5ab$export$2e2bcd8739ae039","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$6ce659ab3eb3d5ab$export$7beeea566b560d4","write","transformed","decimals","power_1","$623e0170398d2ae2$var$getText","$623e0170398d2ae2$export$2e2bcd8739ae039","TextFeature","$623e0170398d2ae2$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$cf353f70112e9440$export$42498d737b05108d","opt_destOffset","destOffset","$c021e7838ef767ef$export$f7f7aa721fb1892a","numbers","opt_factor","lastNumbers","num","$c021e7838ef767ef$export$a184f75f22d08c53","$c021e7838ef767ef$export$6dd1849a130b98c5","encoded","$c021e7838ef767ef$export$699b9297c43854f5","$c021e7838ef767ef$export$3625268a2f372206","$c021e7838ef767ef$export$8f60e357408ce6f6","$c021e7838ef767ef$export$c4734ac5b9f48936","$c021e7838ef767ef$export$511e57c5f7e959a9","$c021e7838ef767ef$export$62547fcf9689f3ed","current","$c021e7838ef767ef$export$2e2bcd8739ae039","Polyline","factor_","geometryLayout_","geometryLayout","$c021e7838ef767ef$var$__extends","$391871f9a2e5834b$exports","getStrideForLayout","$720fa649bbd4a7f1$exports","$623e0170398d2ae2$exports","$bcb810a10ad47537$export$2e2bcd8739ae039","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$0649bf4fcb55985f$export$2e2bcd8739ae039","$bdd1b26e36aa3726$var$Property","$bdd1b26e36aa3726$export$2e2bcd8739ae039","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$bdd1b26e36aa3726$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$03e81036f94b2b3b$var$coordinates","$03e81036f94b2b3b$var$distances","$03e81036f94b2b3b$exports","aid_stations","getLatLongFromDistance","$dbea8b86fac5ed42$var$vectorSource","$b636ac1ff32355bd$exports","$dbea8b86fac5ed42$var$vectorLayer","$2682b71b2901dd5b$exports","$dbea8b86fac5ed42$var$styles","route","rectangle","SQRT2","icon","icon2","$dbea8b86fac5ed42$var$map","$18255666c21c3e7d$exports","$9af931ecc3f060e8$exports","$4613e68d4486e86c$exports","$dbea8b86fac5ed42$var$utils","fetch","$dbea8b86fac5ed42$var$element","$dbea8b86fac5ed42$var$popup","$bdd1b26e36aa3726$exports","$dbea8b86fac5ed42$var$lines","$dbea8b86fac5ed42$var$markerFeature","$dbea8b86fac5ed42$var$markerPrediction","splits","runner","$dbea8b86fac5ed42$var$runners","NAME","$","popover","MARK","TIME","sT","parse","eT","d_p","random","latlong","$dbea8b86fac5ed42$var$getPrediction","BIB","$dbea8b86fac5ed42$var$getHourAndMin","milli","mins","hours","csv","headers","currentline","$dbea8b86fac5ed42$var$csvJSON","datalist","startsWith","exptime","km","cT","eta","toLocaleString","timing","$dbea8b86fac5ed42$var$getExpTime","msg","html","content"],"version":3,"file":"index.2d8cd9d7.js.map"}