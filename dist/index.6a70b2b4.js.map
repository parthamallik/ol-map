{"mappings":"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CX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,iBAEjBC,GAAY,CACR,EACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,eACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,iBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBAGRC,GAAiB,CACb77B,UAAW47B,GACXhvG,YAAa+uG,GACbG,aAAc,CAAC,EAAG,GAAI,IAAK,IAA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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","route-info.js","main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","var coordinates = [\n    [12.90715, 77.70536],\n    [12.90737, 77.70542],\n    [12.90771, 77.70549],\n    [12.90828, 77.7056],\n    [12.90866, 77.70563],\n    [12.90884, 77.70575],\n    [12.90892, 77.70579],\n    [12.90902, 77.70581],\n    [12.90937, 77.70585],\n    [12.9097, 77.70594],\n    [12.91019, 77.70612],\n    [12.9109, 77.7065],\n    [12.91147, 77.70688],\n    [12.91175, 77.70709],\n    [12.9119, 77.70723],\n    [12.912, 77.70736],\n    [12.91212, 77.70761],\n    [12.91219, 77.7079],\n    [12.91231, 77.70832],\n    [12.91239, 77.7087],\n    [12.9126, 77.71024],\n    [12.9128, 77.71165],\n    [12.91297, 77.7128],\n    [12.91298, 77.71294],\n    [12.91296, 77.71307],\n    [12.91288, 77.71328],\n    [12.91272, 77.71359],\n    [12.91229, 77.71444],\n    [12.91228, 77.71456],\n    [12.91288, 77.7149],\n    [12.91329, 77.71512],\n    [12.91382, 77.71543],\n    [12.91393, 77.71551],\n    [12.91404, 77.71563],\n    [12.91435, 77.71604],\n    [12.91468, 77.71646],\n    [12.91492, 77.71678],\n    [12.91511, 77.71712],\n    [12.91554, 77.71782],\n    [12.91555, 77.7179],\n    [12.91572, 77.71812],\n    [12.91586, 77.71841],\n    [12.91585, 77.71847],\n    [12.91576, 77.71917],\n    [12.91564, 77.71956],\n    [12.91553, 77.72005],\n    [12.91545, 77.72043],\n    [12.91544, 77.72073],\n    [12.91546, 77.72089],\n    [12.91565, 77.72148],\n    [12.91553, 77.72228],\n    [12.9155, 77.72249],\n    [12.91547, 77.72287],\n    [12.91549, 77.72325],\n    [12.91554, 77.72349],\n    [12.91568, 77.72452],\n    [12.91579, 77.72469],\n    [12.91587, 77.72476],\n    [12.91614, 77.72491],\n    [12.91664, 77.72513],\n    [12.91705, 77.72536],\n    [12.91726, 77.72551],\n    [12.91748, 77.72576],\n    [12.91756, 77.72589],\n    [12.91765, 77.72606],\n    [12.91774, 77.72634],\n    [12.91782, 77.72672],\n    [12.918, 77.72831],\n    [12.91813, 77.73011],\n    [12.91827, 77.73114],\n    [12.9187, 77.73425],\n    [12.91872, 77.7345],\n    [12.91878, 77.73469],\n    [12.91885, 77.73485],\n    [12.919, 77.73504],\n    [12.91911, 77.73522],\n    [12.9192, 77.73547],\n    [12.91919, 77.73583],\n    [12.919157484, 77.73631773999],\n    [12.91915, 77.73643],\n    [12.919194487, 77.73643],\n    [12.91919475672, 77.73643],\n    [12.91919502644, 77.73643],\n    [12.91922, 77.73643],\n    [12.91985116853, 77.73640289467],\n    [12.91985400763, 77.73640277274],\n    [12.91985427712, 77.73640276117],\n    [12.92011953842, 77.73639136957],\n    [12.92085, 77.73636],\n    [12.92085, 77.73646],\n    [12.92092, 77.73646],\n    [12.92091, 77.73692],\n    [12.92091, 77.73695],\n    [12.92089641934, 77.73703487959],\n    [12.92089596468, 77.7370377212],\n    [12.92089592099, 77.73703799427],\n    [12.92083, 77.73745],\n    [12.92079270856, 77.73761486846],\n    [12.92079208356, 77.73761763162],\n    [12.92079202259, 77.73761790118],\n    [12.92064, 77.73829],\n    [12.9206, 77.7385],\n    [12.9206, 77.73879],\n    [12.92072, 77.73929],\n    [12.92076, 77.73963],\n    [12.92075, 77.73983],\n    [12.92071, 77.74002],\n    [12.92062, 77.74018],\n    [12.92044, 77.74047],\n    [12.9204, 77.74058],\n    [12.92041, 77.74058],\n    [12.92036, 77.74098],\n    [12.92034239849, 77.74123229246],\n    [12.9203422102, 77.74123499141],\n    [12.92034219094, 77.74123526743],\n    [12.9203, 77.74184],\n    [12.92021, 77.74238],\n    [12.92021, 77.7425],\n    [12.92021, 77.74281],\n    [12.92017, 77.74324],\n    [12.92008, 77.74379],\n    [12.92006349506, 77.74393078047],\n    [12.92006316655, 77.74393358252],\n    [12.92006313434, 77.74393385727],\n    [12.91991, 77.74524],\n    [12.91978, 77.74627],\n    [12.91961500632, 77.74728168819],\n    [12.91961466882, 77.7472837576],\n    [12.91961462431, 77.74728403052],\n    [12.9194, 77.7486],\n    [12.91929, 77.74917],\n    [12.91919783275, 77.74960102232],\n    [12.91919728177, 77.74960359901],\n    [12.91919722397, 77.7496038693],\n    [12.91895, 77.75076],\n    [12.91892, 77.75089],\n    [12.91865318013, 77.75207402364],\n    [12.91865271403, 77.75207609197],\n    [12.91865265327, 77.75207636157],\n    [12.91844, 77.75302],\n    [12.91835, 77.75339],\n    [12.91831, 77.75365],\n    [12.91828799084, 77.75427360045],\n    [12.91828790857, 77.75427593124],\n    [12.91828789881, 77.75427620777],\n    [12.91828, 77.7545],\n    [12.91828, 77.75461],\n    [12.91827, 77.75505],\n    [12.91820836566, 77.75602246601],\n    [12.91820823911, 77.75602446265],\n    [12.91820822161, 77.75602473878],\n    [12.91818, 77.75647],\n    [12.91816, 77.7568],\n    [12.91811, 77.75713],\n    [12.918, 77.75771],\n    [12.91797374852, 77.75785515655],\n    [12.91797324402, 77.75785794614],\n    [12.91797319482, 77.7578582182],\n    [12.91783, 77.75865],\n    [12.91776, 77.75963],\n    [12.91769, 77.76],\n    [12.9172, 77.76186],\n    [12.9168819476, 77.76321172281],\n    [12.91688148045, 77.76321370819],\n    [12.91688141716, 77.76321397717],\n    [12.91688, 77.76322],\n    [12.91663, 77.76411],\n    [12.91643, 77.76471],\n    [12.91617, 77.765],\n    [12.91603, 77.76522],\n    [12.91595, 77.76539],\n    [12.91583, 77.7655],\n    [12.91567, 77.76555],\n    [12.91553, 77.76563],\n    [12.91534, 77.76582],\n    [12.91521, 77.76589],\n    [12.91505, 77.76594],\n    [12.91494, 77.76603],\n    [12.91488, 77.76613],\n    [12.9148, 77.76645],\n    [12.91468, 77.76732],\n    [12.91464, 77.76773],\n    [12.91458, 77.76802],\n    [12.91429512711, 77.76882120554],\n    [12.91429421419, 77.76882377312],\n    [12.91429412176, 77.76882403307],\n    [12.91426, 77.76892],\n    [12.91402, 77.76954],\n    [12.91378, 77.77008],\n    [12.91345, 77.77073],\n    [12.91323, 77.77112],\n    [12.91319, 77.77121],\n    [12.91312, 77.77118],\n    [12.91309, 77.77125],\n    [12.91316, 77.77128],\n    [12.91308, 77.77149],\n    [12.91291, 77.77193],\n    [12.91288, 77.77198],\n    [12.91276, 77.77214],\n    [12.9123, 77.77258],\n    [12.91194, 77.77295],\n    [12.91190185935, 77.77300721102],\n    [12.91190019466, 77.77300970806],\n    [12.9119000424, 77.77300993645],\n    [12.9118, 77.77316],\n    [12.91173, 77.77337],\n    [12.91151, 77.77439],\n    [12.91148, 77.77477],\n    [12.91139, 77.77509],\n    [12.9113, 77.77543],\n    [12.91129, 77.77556],\n    [12.91132, 77.77578],\n    [12.91141, 77.77618],\n    [12.9115, 77.77645],\n    [12.91164, 77.77671],\n    [12.91169, 77.77681],\n    [12.91178, 77.77686],\n    [12.9119475554, 77.776909281],\n    [12.91195, 77.77691],\n    [12.91202, 77.77701],\n    [12.91205, 77.77716],\n    [12.91208, 77.7777],\n    [12.91207, 77.77787],\n    [12.91196091735, 77.77862448912],\n    [12.91196048399, 77.77862748645],\n    [12.91196044442, 77.77862776016],\n    [12.91195, 77.7787],\n    [12.9119, 77.77892],\n    [12.91177, 77.77918],\n    [12.91154307102, 77.77947176609],\n    [12.91154049313, 77.77947508052],\n    [12.91154032491, 77.7794752968],\n    [12.91142, 77.77963],\n    [12.91119, 77.77996],\n    [12.91096138495, 77.78034864585],\n    [12.91095936725, 77.78035207595],\n    [12.91095922789, 77.78035231285],\n    [12.91089, 77.78047],\n    [12.91076, 77.7808],\n    [12.91061, 77.78135],\n    [12.91051401905, 77.78175449183],\n    [12.91051323005, 77.78175781691],\n    [12.91051316625, 77.78175808576],\n    [12.91047, 77.78194],\n    [12.91038, 77.78248],\n    [12.91009, 77.78377],\n    [12.91001, 77.78423],\n    [12.90981, 77.78568],\n    [12.90964, 77.78663],\n    [12.90943, 77.78757],\n    [12.90912, 77.78846],\n    [12.90906, 77.78867],\n    [12.90905, 77.78883],\n    [12.90908, 77.78924],\n    [12.90923, 77.78966],\n    [12.90923, 77.78998],\n    [12.90919, 77.79031],\n    [12.90903, 77.79164],\n    [12.90899, 77.79172],\n    [12.90889, 77.79184],\n    [12.9086, 77.79213],\n    [12.90825, 77.79258],\n    [12.90812, 77.79275],\n    [12.90797, 77.7931],\n    [12.90791, 77.79333],\n    [12.90781, 77.79383],\n    [12.9078, 77.79407],\n    [12.90792, 77.79487],\n    [12.9079725504, 77.79526412766],\n    [12.90797299155, 77.79526743631],\n    [12.9079730281, 77.79526771045],\n    [12.90798, 77.79532],\n    [12.90801, 77.79563],\n    [12.90801, 77.79576],\n    [12.908, 77.79596],\n    [12.9079, 77.79619],\n    [12.9078, 77.7963],\n    [12.90764, 77.79639],\n    [12.90737, 77.79646],\n    [12.90732, 77.79651],\n    [12.90721, 77.79686],\n    [12.90718, 77.79693],\n    [12.90704, 77.79712],\n    [12.9069, 77.79727],\n    [12.90677, 77.79741],\n    [12.90667, 77.79758],\n    [12.90665, 77.79764],\n    [12.90656, 77.79806],\n    [12.90653, 77.79813],\n    [12.90644, 77.79822],\n    [12.90628, 77.79832],\n    [12.90594274728, 77.79839708634],\n    [12.90593752683, 77.79839827959],\n    [12.90593726358, 77.79839833976],\n    [12.90593, 77.7984],\n    [12.90579, 77.79847],\n    [12.90547, 77.79869],\n    [12.90509, 77.79904],\n    [12.90459, 77.79961],\n    [12.90431, 77.80002],\n    [12.90395, 77.80042],\n    [12.90305, 77.80135],\n    [12.90276, 77.80165],\n    [12.90269, 77.80175],\n    [12.90251, 77.80203],\n    [12.90235, 77.80229],\n    [12.90226, 77.80249],\n    [12.90219, 77.80265],\n    [12.90172, 77.80371],\n    [12.9013, 77.8047],\n    [12.90129561064, 77.8047118513],\n    [12.9012943331, 77.80471530069],\n    [12.9012942373, 77.80471555934],\n    [12.9011, 77.80524],\n    [12.90051, 77.80679],\n    [12.90024, 77.80748],\n    [12.90006848026, 77.80783206691],\n    [12.90006682565, 77.80783546321],\n    [12.90006670507, 77.80783571071],\n    [12.90005, 77.80787],\n    [12.89987, 77.80821],\n    [12.89973, 77.80845],\n    [12.89942, 77.80879],\n    [12.89907, 77.80911],\n    [12.89855, 77.80956],\n    [12.89815, 77.80989],\n    [12.89783, 77.8102],\n    [12.89733, 77.81059],\n    [12.89693390517, 77.81084324122],\n    [12.89692943287, 77.81084610055],\n    [12.89692920398, 77.81084624689],\n    [12.89672, 77.81098],\n    [12.89644, 77.81114],\n    [12.896, 77.81146],\n    [12.89584, 77.81164],\n    [12.89572, 77.81198],\n    [12.89568, 77.81249],\n    [12.89561, 77.81298],\n    [12.89553, 77.81341],\n    [12.89525, 77.81444],\n    [12.89513, 77.81483],\n    [12.89507433369, 77.81494829094],\n    [12.89507275787, 77.81495163956],\n    [12.89507264062, 77.81495188872],\n    [12.89505, 77.815],\n    [12.89486, 77.81532],\n    [12.89463, 77.81562],\n    [12.89448, 77.81589],\n    [12.89431, 77.81625],\n    [12.89418, 77.81656],\n    [12.89411, 77.81681],\n    [12.89413, 77.81708],\n    [12.89416, 77.81724],\n    [12.89426, 77.81751],\n    [12.89435, 77.8177],\n    [12.89441, 77.81779],\n    [12.89451, 77.81788],\n    [12.89464, 77.81798],\n    [12.89486, 77.81819],\n    [12.89498, 77.81844],\n    [12.89502, 77.8186],\n    [12.89504, 77.81884],\n    [12.89504, 77.81929],\n    [12.895, 77.81948],\n    [12.89499, 77.81958],\n    [12.89498, 77.81977],\n    [12.8949, 77.82031],\n    [12.8949, 77.8205],\n    [12.89489750934, 77.82061208303],\n    [12.8948974298, 77.8206156625],\n    [12.89489742365, 77.8206159391],\n    [12.89489, 77.82095],\n    [12.89487, 77.82135],\n    [12.8948, 77.82209],\n    [12.89483, 77.82243],\n    [12.89481, 77.82272],\n    [12.89473, 77.82312],\n    [12.89465, 77.82337],\n    [12.89448, 77.82373],\n    [12.8944353216, 77.82382270774],\n    [12.89408, 77.82456],\n    [12.89402, 77.82473],\n    [12.89401, 77.82484],\n    [12.89404, 77.825],\n    [12.89413, 77.82514],\n    [12.89442, 77.82548],\n    [12.89524, 77.82634],\n    [12.89538, 77.82652],\n    [12.89548, 77.82674],\n    [12.89560935617, 77.82726049935],\n    [12.89561016568, 77.82726375663],\n    [12.89561023231, 77.82726402474],\n    [12.8959, 77.82843],\n    [12.89596, 77.82866],\n    [12.89597, 77.82874],\n    [12.89605830223, 77.82869752557],\n    [12.89676, 77.82836],\n    [12.89779, 77.82783],\n    [12.89806, 77.82768],\n    [12.89867, 77.82731],\n    [12.89884692325, 77.82722743602],\n    [12.89885087277, 77.82722559291],\n    [12.89885120014, 77.82722544014],\n    [12.89942, 77.82696],\n    [12.89973, 77.82682],\n    [12.90028, 77.82666],\n    [12.90044, 77.82662],\n    [12.90042, 77.82655],\n    [12.90056, 77.82652],\n    [12.90087, 77.82649],\n    [12.90127, 77.82648],\n    [12.90169, 77.82652],\n    [12.90196, 77.82651],\n    [12.9023, 77.8265],\n    [12.90285, 77.82655],\n    [12.9033, 77.82656],\n    [12.90353, 77.82656],\n    [12.90407, 77.82653],\n    [12.90445260422, 77.82653364384],\n    [12.90445816523, 77.8265336968],\n    [12.90445852487, 77.82653370023],\n    [12.90512, 77.82654],\n    [12.90557, 77.82654],\n    [12.90575516685, 77.8265333869],\n    [12.90575966552, 77.82653322624],\n    [12.90576002496, 77.8265332134],\n    [12.90585, 77.82653],\n    [12.90672, 77.82628],\n    [12.90716, 77.82612],\n    [12.90736, 77.82607],\n    [12.90772, 77.82602],\n    [12.90854, 77.82589],\n    [12.90874468203, 77.82585130418],\n    [12.90874918786, 77.82585045234],\n    [12.90874954156, 77.82585038547],\n    [12.91055, 77.82551],\n    [12.91119, 77.82541],\n    [12.91138937703, 77.8253422119],\n    [12.91139365123, 77.82534075867],\n    [12.91139399262, 77.8253406426],\n    [12.91169, 77.82524],\n    [12.91302, 77.82467],\n    [12.91312, 77.82462],\n    [12.91357, 77.82433],\n    [12.91393, 77.82414],\n    [12.91422, 77.82405],\n    [12.91457, 77.82398],\n    [12.91482, 77.82399],\n    [12.91526, 77.82408],\n    [12.9153, 77.8241],\n    [12.91535, 77.82405],\n    [12.91557, 77.82376],\n    [12.91575, 77.82355],\n    [12.91594, 77.82342],\n    [12.91627, 77.82323],\n    [12.91638394381, 77.8232000148],\n    [12.91638790889, 77.82319897136],\n    [12.91638825727, 77.82319887968],\n    [12.91646, 77.82318],\n    [12.91669, 77.82318],\n    [12.91707, 77.82322],\n    [12.91753, 77.82339],\n    [12.91802, 77.82346],\n    [12.91843, 77.82347],\n    [12.91906, 77.82344],\n    [12.92008183284, 77.82344],\n    [12.92009082208, 77.82344],\n    [12.92009118173, 77.82344],\n    [12.92019, 77.82344],\n    [12.9204, 77.82346],\n    [12.92055, 77.8235],\n    [12.92102, 77.82367],\n    [12.9219, 77.82397],\n    [12.92233, 77.82413],\n    [12.92252, 77.82423],\n    [12.92274, 77.82434],\n    [12.92297, 77.82441],\n    [12.92311, 77.82443],\n    [12.92349, 77.82444],\n    [12.92377, 77.82443],\n    [12.92411, 77.8244],\n    [12.92419646174, 77.82434361192],\n    [12.92434, 77.82425],\n    [12.92451, 77.82413],\n    [12.92467, 77.82407],\n    [12.92492, 77.82405],\n    [12.92516, 77.82406],\n    [12.9264, 77.82437],\n    [12.92729, 77.8246],\n    [12.92738, 77.82459],\n    [12.92745, 77.82454],\n    [12.92801, 77.82372],\n    [12.92856, 77.82267],\n    [12.92877, 77.82216],\n    [12.92886, 77.82184],\n    [12.92893356094, 77.82164528018],\n    [12.92893481615, 77.82164195757],\n    [12.92893494614, 77.82164161348],\n    [12.92903, 77.82139],\n    [12.92924, 77.82098],\n    [12.92935, 77.82075],\n    [12.92939, 77.82058],\n    [12.9294, 77.82047],\n    [12.92939, 77.8203],\n    [12.92935, 77.82001],\n    [12.92922, 77.81956],\n    [12.92918, 77.81935],\n    [12.92917, 77.81916],\n    [12.92919, 77.81907],\n    [12.92927, 77.81901],\n    [12.92938, 77.81899],\n    [12.9299, 77.81888],\n    [12.93134, 77.81855],\n    [12.93151, 77.81848],\n    [12.93167, 77.81827],\n    [12.93185, 77.81811],\n    [12.9329, 77.81735],\n    [12.93313, 77.8172],\n    [12.93367, 77.81694],\n    [12.93427, 77.81669],\n    [12.93467, 77.81649],\n    [12.93512, 77.81627],\n    [12.93614, 77.81585],\n    [12.9371004552, 77.81543837701],\n    [12.93710793217, 77.81543517259],\n    [12.93710826405, 77.81543503035],\n    [12.93747, 77.81528],\n    [12.93781, 77.81516],\n    [12.93797, 77.81514],\n    [12.93837, 77.81519],\n    [12.93858, 77.81523],\n    [12.93895, 77.81528],\n    [12.9393, 77.81528],\n    [12.93959, 77.81527],\n    [12.93981, 77.81519],\n    [12.94045, 77.81499],\n    [12.94085, 77.81495],\n    [12.94144, 77.81495],\n    [12.94234, 77.81504],\n    [12.94315121086, 77.81526686371],\n    [12.94315858716, 77.81526892657],\n    [12.94315893417, 77.81526902362],\n    [12.94352, 77.81537],\n    [12.9441, 77.81553],\n    [12.94436, 77.81558],\n    [12.94455, 77.81559],\n    [12.94476, 77.81558],\n    [12.94513, 77.81547],\n    [12.94549, 77.81539],\n    [12.94579, 77.81536],\n    [12.94602, 77.81533],\n    [12.94631, 77.81524],\n    [12.94669, 77.81519],\n    [12.94689, 77.81514],\n    [12.94707, 77.81505],\n    [12.94714, 77.815],\n    [12.94728, 77.81488],\n    [12.94738, 77.81474],\n    [12.94745, 77.81463],\n    [12.94764, 77.8142],\n    [12.94771, 77.81397],\n    [12.94773, 77.81384],\n    [12.94765, 77.81362],\n    [12.94746, 77.81327],\n    [12.94741, 77.81302],\n    [12.94746, 77.81257],\n    [12.94757, 77.81223],\n    [12.94771, 77.812],\n    [12.94817, 77.81156],\n    [12.94836, 77.81129],\n    [12.9485, 77.81105],\n    [12.94865, 77.81082],\n    [12.94867633934, 77.8107883928],\n    [12.9486786637, 77.81078560357],\n    [12.94867889745, 77.81078532307],\n    [12.9487, 77.81076],\n    [12.94879, 77.81073],\n    [12.94891, 77.81075],\n    [12.94923, 77.81083],\n    [12.94922, 77.81091],\n    [12.94927, 77.81091],\n    [12.94944, 77.81092],\n    [12.94965, 77.81092],\n    [12.94975, 77.81087],\n    [12.9498, 77.81083],\n    [12.94989, 77.81055],\n    [12.94996, 77.8103],\n    [12.95007, 77.80988],\n    [12.95013, 77.80981],\n    [12.95017, 77.80979],\n    [12.95021, 77.80981],\n    [12.95027, 77.80984],\n    [12.95106, 77.81007],\n    [12.95133, 77.81009],\n    [12.95145, 77.81007],\n    [12.95173, 77.80993],\n    [12.95258, 77.80941],\n    [12.95262367957, 77.80938186747],\n    [12.95262680661, 77.80937985345],\n    [12.95262711124, 77.80937965725],\n    [12.95317, 77.80903],\n    [12.95333, 77.80891],\n    [12.95349, 77.80879],\n    [12.95345, 77.80873],\n    [12.95348, 77.8087],\n    [12.9536972143, 77.80851987165],\n    [12.95370056012, 77.80851709707],\n    [12.95370083987, 77.80851686509],\n    [12.9543, 77.80802],\n    [12.9548, 77.80748],\n    [12.95489, 77.80737],\n    [12.95491387175, 77.80733248725],\n    [12.95496, 77.80726],\n    [12.95492, 77.80715],\n    [12.95478, 77.80673],\n    [12.95468, 77.80639],\n    [12.95464, 77.80599],\n    [12.95462, 77.8054],\n    [12.95462, 77.80497],\n    [12.95464, 77.80487],\n    [12.95472, 77.80473],\n    [12.95478246556, 77.80467143857],\n    [12.95478520918, 77.80466886642],\n    [12.95478547473, 77.80466861747],\n    [12.95488, 77.80458],\n    [12.95522, 77.80433],\n    [12.95542, 77.80415],\n    [12.95556, 77.80397],\n    [12.9561082965, 77.80313042164],\n    [12.95611077773, 77.80312662224],\n    [12.95611097797, 77.80312631563],\n    [12.9562, 77.80299],\n    [12.95626, 77.80274],\n    [12.95626, 77.80254],\n    [12.95603, 77.80187],\n    [12.95587, 77.80158],\n    [12.95563, 77.80131],\n    [12.95523, 77.80092],\n    [12.95472, 77.80048],\n    [12.95453, 77.80031],\n    [12.95446, 77.80018],\n    [12.95439, 77.79974],\n    [12.95435, 77.7994],\n    [12.95431, 77.799],\n    [12.95421, 77.79865],\n    [12.95405528391, 77.79824045731],\n    [12.95405404334, 77.79823717344],\n    [12.95405391333, 77.79823682931],\n    [12.95404, 77.7982],\n    [12.9539, 77.79789],\n    [12.9538, 77.7977],\n    [12.95374, 77.79759],\n    [12.9537, 77.79743],\n    [12.95365, 77.7972],\n    [12.95351, 77.7971],\n    [12.95328, 77.79703],\n    [12.95271, 77.79697],\n    [12.95241, 77.797],\n    [12.95171, 77.79715],\n    [12.95134, 77.79724],\n    [12.9512, 77.79726],\n    [12.95067, 77.7973],\n    [12.94997, 77.7973],\n    [12.94958, 77.79729],\n    [12.94947001085, 77.7972984607],\n    [12.94946592694, 77.79729877485],\n    [12.94946556826, 77.79729880244],\n    [12.94945, 77.7973],\n    [12.94917, 77.79742],\n    [12.94886, 77.79756],\n    [12.94848, 77.79769],\n    [12.94806, 77.7978],\n    [12.9474, 77.79794],\n    [12.94681, 77.79806],\n    [12.94666, 77.79808],\n    [12.94626, 77.79812],\n    [12.9454, 77.79819],\n    [12.94476, 77.79822],\n    [12.94410750133, 77.79826762778],\n    [12.94410052484, 77.79826813701],\n    [12.94410016606, 77.7982681632],\n    [12.94339, 77.79832],\n    [12.94251, 77.7984],\n    [12.94226, 77.7984],\n    [12.94206, 77.79835],\n    [12.94176, 77.79823],\n    [12.94127, 77.79802],\n    [12.94075463731, 77.79785117425],\n    [12.94074883678, 77.79784927408],\n    [12.94074849413, 77.79784916183],\n    [12.94069, 77.79783],\n    [12.93998, 77.79764],\n    [12.93966, 77.79759],\n    [12.93951, 77.79758],\n    [12.93877, 77.79752],\n    [12.9381, 77.79746],\n    [12.93734, 77.79739],\n    [12.93679, 77.79733],\n    [12.93671, 77.79732],\n    [12.93672, 77.79725],\n    [12.93675, 77.79709],\n    [12.93707, 77.79625],\n    [12.93726, 77.79554],\n    [12.93741, 77.79488],\n    [12.93749, 77.79454],\n    [12.9375, 77.79454],\n    [12.93762, 77.79399],\n    [12.93779, 77.79303],\n    [12.93781, 77.79238],\n    [12.93787777245, 77.79171074865],\n    [12.93787807145, 77.79170779599],\n    [12.93787810862, 77.79170742891],\n    [12.93789, 77.79159],\n    [12.93798, 77.79041],\n    [12.9382, 77.78862],\n    [12.93822353195, 77.78843174479],\n    [12.93822395697, 77.78842834463],\n    [12.93822400273, 77.78842797857],\n    [12.93824, 77.7883],\n    [12.93826, 77.78778],\n    [12.93824, 77.78771],\n    [12.93814, 77.78759],\n    [12.93791, 77.78737],\n    [12.93785, 77.78728],\n    [12.93783, 77.78711],\n    [12.93787, 77.78664],\n    [12.93786, 77.78657],\n    [12.93786000002, 77.78641357697],\n    [12.93786000002, 77.78641013493],\n    [12.93786000002, 77.78640976587],\n    [12.93786, 77.78633],\n    [12.93779, 77.78632],\n    [12.93779, 77.78628],\n    [12.93784, 77.78612],\n    [12.9381430462, 77.78543814608],\n    [12.93816, 77.7854],\n    [12.93813, 77.78541],\n    [12.93803, 77.78542],\n    [12.93791, 77.78542],\n    [12.93775, 77.78538],\n    [12.93758, 77.78531],\n    [12.9373776286, 77.78525217958],\n    [12.93737334379, 77.78525095535],\n    [12.93737291063, 77.78525083159],\n    [12.9373, 77.78523],\n    [12.93697, 77.78519],\n    [12.93677, 77.78517],\n    [12.9366, 77.78511],\n    [12.93663, 77.78504],\n    [12.93661, 77.78503],\n    [12.9364, 77.78496],\n    [12.93603, 77.7848],\n    [12.93577433206, 77.78476882096],\n    [12.9357695898, 77.78476824264],\n    [12.93576914331, 77.78476818819],\n    [12.93562, 77.78475],\n    [12.93507, 77.78476],\n    [12.93495, 77.78481],\n    [12.93483, 77.78489],\n    [12.93469, 77.78497],\n    [12.93429, 77.78496],\n    [12.93379, 77.78502],\n    [12.93365, 77.78507],\n    [12.93358039252, 77.78507580062],\n    [12.93357661541, 77.78507611538],\n    [12.93357616724, 77.78507615273],\n    [12.93353, 77.78508],\n    [12.93298, 77.78498],\n    [12.93248, 77.78496],\n    [12.93247, 77.78503],\n    [12.93241, 77.78504],\n    [12.93224681255, 77.78508799631],\n    [12.93224273096, 77.78508919677],\n    [12.93224229873, 77.7850893239],\n    [12.93224, 77.78509],\n    [12.93214, 77.78509],\n    [12.93105, 77.78496],\n    [12.93095, 77.78488],\n    [12.93089, 77.7848],\n    [12.93082, 77.78426],\n    [12.9308, 77.78414],\n    [12.93073, 77.78407],\n    [12.93033, 77.78383],\n    [12.92999, 77.78361],\n    [12.92943, 77.78321],\n    [12.92909, 77.78296],\n    [12.92869, 77.78274],\n    [12.92798, 77.78243],\n    [12.92761, 77.78224],\n    [12.92744, 77.78214],\n    [12.92668, 77.78177],\n    [12.92663, 77.78177],\n    [12.92659, 77.78181],\n    [12.92654, 77.78175],\n    [12.92632, 77.78166],\n    [12.92554, 77.78131],\n    [12.92509, 77.78119],\n    [12.92426, 77.78087],\n    [12.92381, 77.78062],\n    [12.92335, 77.78038],\n    [12.92302, 77.78017],\n    [12.92261, 77.77992],\n    [12.92211, 77.77961],\n    [12.9218008674, 77.77945199879],\n    [12.92179654256, 77.77944978832],\n    [12.92179614009, 77.77944958261],\n    [12.92166, 77.77938],\n    [12.92147, 77.77934],\n    [12.92121, 77.77928],\n    [12.9209, 77.77913],\n    [12.92044, 77.7789],\n    [12.92011, 77.77877],\n    [12.91922, 77.77833],\n    [12.91841, 77.77801],\n    [12.91802, 77.77789],\n    [12.91792, 77.77788],\n    [12.9176, 77.77775],\n    [12.91754, 77.77773],\n    [12.9175, 77.77775],\n    [12.91742, 77.77785],\n    [12.91674425836, 77.77781663002],\n    [12.91673722993, 77.77781628294],\n    [12.91673678081, 77.77781626076],\n    [12.91661, 77.77781],\n    [12.91538, 77.77756],\n    [12.91513, 77.77754],\n    [12.91502, 77.77756],\n    [12.91465, 77.7777],\n    [12.91456, 77.77771],\n    [12.91438, 77.77769],\n    [12.91385, 77.7776],\n    [12.91321, 77.77747],\n    [12.91268, 77.77736],\n    [12.9125, 77.77731],\n    [12.91223, 77.77714],\n    [12.9121, 77.7771],\n    [12.91204, 77.7771],\n    [12.91197, 77.77712],\n    [12.91195, 77.77708],\n    [12.91192, 77.77699],\n    [12.91191, 77.77697],\n    [12.91179, 77.77694],\n    [12.91169, 77.7769],\n    [12.91166, 77.77688],\n    [12.91164, 77.77689],\n    [12.91154, 77.77693],\n    [12.91151040442, 77.7769398652],\n    [12.91124, 77.77703],\n    [12.91087, 77.77718],\n    [12.91069, 77.77724],\n    [12.91011, 77.77729],\n    [12.90996, 77.77724],\n    [12.90982, 77.77714],\n    [12.90974, 77.77708],\n    [12.90965, 77.77699],\n    [12.90958, 77.77696],\n    [12.90959, 77.77689],\n    [12.90953, 77.7768],\n    [12.90935, 77.77668],\n    [12.90909, 77.77657],\n    [12.90894, 77.77658],\n    [12.90861, 77.77654],\n    [12.90857, 77.77653],\n    [12.90859, 77.77646],\n    [12.90829, 77.77637],\n    [12.90821, 77.77631],\n    [12.90824, 77.77627],\n    [12.90827, 77.77621],\n    [12.90830923137, 77.77610799847],\n    [12.90831180009, 77.77610131978],\n    [12.90831196513, 77.77610089068],\n    [12.90832, 77.77608],\n    [12.90834, 77.77573],\n    [12.9084, 77.77557],\n    [12.90846, 77.77532],\n    [12.9085, 77.77513],\n    [12.90859, 77.77498],\n    [12.90853, 77.77494],\n    [12.90854, 77.7749],\n    [12.9086, 77.77464],\n    [12.9086, 77.77448],\n    [12.90861, 77.77434],\n    [12.90869, 77.77412],\n    [12.90874, 77.77398],\n    [12.90876, 77.77379],\n    [12.90879, 77.77362],\n    [12.90886, 77.77364],\n    [12.90893, 77.77361],\n    [12.909, 77.77359],\n    [12.90885, 77.77316],\n    [12.90868, 77.77285],\n    [12.90835, 77.77258],\n    [12.90823994513, 77.77246444232],\n    [12.90823481193, 77.77245905246],\n    [12.90823449769, 77.77245872251],\n    [12.90815, 77.77237],\n    [12.90797, 77.77225],\n    [12.90796, 77.77206],\n    [12.90793, 77.77183],\n    [12.90783, 77.77169],\n    [12.90772, 77.77142],\n    [12.90758, 77.77124],\n    [12.90743, 77.77114],\n    [12.9074, 77.77092],\n    [12.90727, 77.77071],\n    [12.90726392978, 77.77070613713],\n    [12.90725794725, 77.77070233006],\n    [12.90725756515, 77.77070208691],\n    [12.90716, 77.77064],\n    [12.90628, 77.77048],\n    [12.90611, 77.77041],\n    [12.90599, 77.7703],\n    [12.90595, 77.77014],\n    [12.90604, 77.76978],\n    [12.90619, 77.76962],\n    [12.90633, 77.76952],\n    [12.90642, 77.7694],\n    [12.90659, 77.76898],\n    [12.90661452375, 77.76887645554],\n    [12.90661616396, 77.76886953023],\n    [12.90661627012, 77.76886908199],\n    [12.90668, 77.7686],\n    [12.90665, 77.76841],\n    [12.90656, 77.76791],\n    [12.90622, 77.76509],\n    [12.90624, 77.76476],\n    [12.90617015533, 77.7647271319],\n    [12.9059, 77.7646],\n    [12.90559216941, 77.76446074324],\n    [12.90558450235, 77.76445727481],\n    [12.90558400869, 77.76445705149],\n    [12.90548, 77.76441],\n    [12.90489, 77.76424],\n    [12.90449, 77.76411],\n    [12.90441, 77.76406],\n    [12.90416, 77.76388],\n    [12.90272, 77.76351],\n    [12.90248, 77.76345],\n    [12.90245, 77.76345],\n    [12.90247, 77.76338],\n    [12.90225, 77.76332],\n    [12.90148, 77.76312],\n    [12.90069, 77.76293],\n    [12.90025, 77.7628],\n    [12.89984026163, 77.76270894701],\n    [12.89983141333, 77.76270698073],\n    [12.89983088603, 77.76270686355],\n    [12.8998, 77.7627],\n    [12.89979, 77.76269],\n    [12.89976, 77.76264],\n    [12.89957, 77.76223],\n    [12.89912, 77.76117],\n    [12.89885, 77.76057],\n    [12.89878, 77.7606],\n    [12.89876, 77.76055],\n    [12.89865, 77.76024],\n    [12.89861, 77.76008],\n    [12.89859, 77.76002],\n    [12.89856, 77.76],\n    [12.89853, 77.75999],\n    [12.89801, 77.75994],\n    [12.89797, 77.75994],\n    [12.89798, 77.75987],\n    [12.89773, 77.75983],\n    [12.89734, 77.75979],\n    [12.8969, 77.75974],\n    [12.89637, 77.75972],\n    [12.89549, 77.75966],\n    [12.89523, 77.75966],\n    [12.89488, 77.75969],\n    [12.89486943214, 77.75969125382],\n    [12.89486249776, 77.75969207654],\n    [12.8948619618, 77.75969214013],\n    [12.89429, 77.75976],\n    [12.89394, 77.75975],\n    [12.89334, 77.75964],\n    [12.89265, 77.75951],\n    [12.89243, 77.7595],\n    [12.89224, 77.75953],\n    [12.89188022074, 77.75951972056],\n    [12.89187137042, 77.75951946769],\n    [12.8918708311, 77.75951945228],\n    [12.89119, 77.7595],\n    [12.89084, 77.75956],\n    [12.89084, 77.75957],\n    [12.89039, 77.75964],\n    [12.88943, 77.75951],\n    [12.88907, 77.75947],\n    [12.8889, 77.75945],\n    [12.88863, 77.75943],\n    [12.88829, 77.75934],\n    [12.8878, 77.75917],\n    [12.88742, 77.75903],\n    [12.88739, 77.75901],\n    [12.88736, 77.75908],\n    [12.8872, 77.75901],\n    [12.88674, 77.75881],\n    [12.88641, 77.75863],\n    [12.88625, 77.75853],\n    [12.88588, 77.75829],\n    [12.8858, 77.75825],\n    [12.88572, 77.75825],\n    [12.88555, 77.75832],\n    [12.88552, 77.75826],\n    [12.88543, 77.75828],\n    [12.88528, 77.75826],\n    [12.88517, 77.75823],\n    [12.88501, 77.75815],\n    [12.8847, 77.75805],\n    [12.88440858701, 77.75792416249],\n    [12.88440092148, 77.75792085238],\n    [12.88440042421, 77.75792063765],\n    [12.88426, 77.75786],\n    [12.88332, 77.75741],\n    [12.8833, 77.75748],\n    [12.88242, 77.75705],\n    [12.88207, 77.7569],\n    [12.88201541216, 77.75688284381],\n    [12.8817683642, 77.75680520017],\n    [12.88172, 77.75679],\n    [12.88073, 77.7565],\n    [12.8806, 77.75645],\n    [12.88043, 77.75634],\n    [12.88036, 77.75627],\n    [12.88019, 77.7561],\n    [12.88006, 77.756],\n    [12.87966, 77.75576],\n    [12.87969, 77.7557],\n    [12.87966, 77.75568],\n    [12.87927, 77.75551],\n    [12.87915, 77.75544],\n    [12.87911, 77.7555],\n    [12.87903, 77.75546],\n    [12.87888, 77.75531],\n    [12.87885, 77.75527],\n    [12.87882, 77.75521],\n    [12.8786, 77.7552],\n    [12.87787, 77.75513],\n    [12.87781, 77.75509],\n    [12.87775, 77.75494],\n    [12.87774, 77.75491],\n    [12.87735, 77.75483],\n    [12.87716, 77.75476],\n    [12.8765, 77.75445],\n    [12.87641, 77.75437],\n    [12.87636, 77.75426],\n    [12.8763, 77.75416],\n    [12.87621, 77.75409],\n    [12.87611889574, 77.75403432515],\n    [12.87611176077, 77.7540299649],\n    [12.87611129726, 77.75402968164],\n    [12.87603, 77.75398],\n    [12.87604, 77.75361],\n    [12.8761, 77.75332],\n    [12.87616, 77.7531],\n    [12.87621, 77.75285],\n    [12.87611, 77.75216],\n    [12.87607, 77.75165],\n    [12.87604, 77.75133],\n    [12.87599, 77.75123],\n    [12.87585, 77.7511],\n    [12.87569, 77.75093],\n    [12.87545, 77.75065],\n    [12.87540570798, 77.75060986029],\n    [12.87539966368, 77.75060438264],\n    [12.87539925934, 77.75060401621],\n    [12.87513, 77.75036],\n    [12.87461, 77.74995],\n    [12.87449, 77.74986],\n    [12.87431, 77.74979],\n    [12.87412, 77.74973],\n    [12.87327, 77.74961],\n    [12.87297, 77.74956],\n    [12.87273, 77.74956],\n    [12.87254, 77.74953],\n    [12.87232, 77.74945],\n    [12.87229956231, 77.74944166355],\n    [12.87229211703, 77.74943862666],\n    [12.87229161569, 77.74943842216],\n    [12.87156, 77.74914],\n    [12.87132, 77.74902],\n    [12.87103, 77.74883],\n    [12.87069, 77.74856],\n    [12.87068, 77.74855],\n    [12.87049, 77.74836],\n    [12.87022, 77.74811],\n    [12.87005, 77.74799],\n    [12.86959, 77.74775],\n    [12.86906, 77.74755],\n    [12.86743, 77.74684],\n    [12.86704, 77.74665],\n    [12.8666, 77.7464],\n    [12.86619, 77.7462],\n    [12.86604, 77.74612],\n    [12.86551, 77.74581],\n    [12.86494, 77.74554],\n    [12.86445553448, 77.74530167342],\n    [12.86444637757, 77.7452971688],\n    [12.86444589109, 77.74529692949],\n    [12.8637, 77.74493],\n    [12.86338, 77.74482],\n    [12.86284, 77.74469],\n    [12.86229, 77.74453],\n    [12.86172, 77.74424],\n    [12.86141, 77.74412],\n    [12.86127906312, 77.74407971172],\n    [12.86115, 77.74404],\n    [12.86113, 77.74385],\n    [12.86119, 77.74325],\n    [12.86128, 77.74267],\n    [12.86131, 77.74251],\n    [12.86130094681, 77.74229272312],\n    [12.86130061787, 77.74228482863],\n    [12.86130059483, 77.74228427574],\n    [12.8613, 77.74227],\n    [12.86126, 77.74197],\n    [12.86123, 77.74188],\n    [12.86119, 77.74181],\n    [12.86102, 77.74173],\n    [12.86079, 77.74164],\n    [12.86075, 77.74161],\n    [12.86072, 77.74158],\n    [12.8607, 77.74146],\n    [12.86067, 77.74132],\n    [12.8602, 77.74105],\n    [12.86012, 77.74096],\n    [12.86009, 77.74084],\n    [12.86002, 77.74067],\n    [12.85999, 77.7405],\n    [12.86, 77.74037],\n    [12.86018, 77.73966],\n    [12.86027, 77.73931],\n    [12.86037, 77.73879],\n    [12.86047, 77.73791],\n    [12.86045, 77.73783],\n    [12.8604, 77.73778],\n    [12.86030602972, 77.73774362437],\n    [12.8602981961, 77.737740592],\n    [12.86029769134, 77.73774039661],\n    [12.86009, 77.73766],\n    [12.8598, 77.7375],\n    [12.85971, 77.7374],\n    [12.8597, 77.73733],\n    [12.85976, 77.73698],\n    [12.8598, 77.73673],\n    [12.85984, 77.73615],\n    [12.85986, 77.73609],\n    [12.85989, 77.73604],\n    [12.85998, 77.73595],\n    [12.86012, 77.73584],\n    [12.86016, 77.73579],\n    [12.86033, 77.73541],\n    [12.86056, 77.73481],\n    [12.86061, 77.73478],\n    [12.86074, 77.73433],\n    [12.8608, 77.73399],\n    [12.8608955104, 77.73361919583],\n    [12.86089747565, 77.73361156606],\n    [12.86089761346, 77.73361103102],\n    [12.86097, 77.73333],\n    [12.8610694481, 77.73301839597],\n    [12.86112, 77.73286],\n    [12.86121, 77.73253],\n    [12.86121, 77.73191],\n    [12.86116, 77.7315],\n    [12.86115, 77.73145],\n    [12.86108, 77.73145],\n    [12.86107, 77.73089],\n    [12.86104, 77.73056],\n    [12.86092, 77.7293],\n    [12.86089, 77.72903],\n    [12.86087595462, 77.7289240201],\n    [12.86087490113, 77.72891607098],\n    [12.86087482845, 77.72891552256],\n    [12.86078, 77.7282],\n    [12.86077, 77.72749],\n    [12.86074, 77.72716],\n    [12.86077, 77.72684],\n    [12.86078, 77.72622],\n    [12.86076, 77.72592],\n    [12.86068, 77.7252],\n    [12.86066493421, 77.72507043357],\n    [12.86066401076, 77.7250624919],\n    [12.86066394686, 77.72506194234],\n    [12.86063, 77.72477],\n    [12.86057, 77.72443],\n    [12.86056, 77.72438],\n    [12.86063, 77.72436],\n    [12.86059, 77.72418],\n    [12.86053, 77.72362],\n    [12.86045, 77.72296],\n    [12.86039, 77.72195],\n    [12.86036599409, 77.72121381103],\n    [12.86036575346, 77.72120643183],\n    [12.86036573542, 77.72120587869],\n    [12.86036, 77.72103],\n    [12.86038, 77.72062],\n    [12.8604, 77.72036],\n    [12.86033, 77.72035],\n    [12.86033, 77.72032],\n    [12.86031, 77.71995],\n    [12.86028, 77.71942],\n    [12.8603, 77.71938],\n    [12.86039, 77.71935],\n    [12.86039, 77.71831],\n    [12.86037, 77.71807],\n    [12.86034, 77.71796],\n    [12.86023, 77.71784],\n    [12.86017, 77.71779],\n    [12.86012, 77.71784],\n    [12.86003, 77.71775],\n    [12.85977, 77.71739],\n    [12.85975, 77.71729],\n    [12.85979577504, 77.71716284721],\n    [12.8597985053, 77.71715526313],\n    [12.85979869221, 77.71715474395],\n    [12.85984, 77.71704],\n    [12.86011, 77.71608],\n    [12.86013, 77.71596],\n    [12.86013, 77.71582],\n    [12.86002, 77.71509],\n    [12.85999, 77.71493],\n    [12.85984, 77.71445],\n    [12.85954, 77.71356],\n    [12.85953389766, 77.71353965885],\n    [12.85953157296, 77.71353190984],\n    [12.85953141427, 77.71353138087],\n    [12.85951, 77.71346],\n    [12.85943, 77.71336],\n    [12.85901, 77.71311],\n    [12.85861, 77.71296],\n    [12.85847, 77.7128],\n    [12.85843, 77.71267],\n    [12.85844, 77.71251],\n    [12.85853, 77.71231],\n    [12.85854, 77.71225],\n    [12.85853, 77.71216],\n    [12.85848, 77.71212],\n    [12.85774, 77.71214],\n    [12.85765, 77.71212],\n    [12.85759, 77.71207],\n    [12.85758, 77.71201],\n    [12.85758162177, 77.71200175606],\n    [12.85758318584, 77.71199380546],\n    [12.85758329256, 77.71199326295],\n    [12.8577, 77.7114],\n    [12.85775, 77.71121],\n    [12.85775, 77.71102],\n    [12.85773, 77.71095],\n    [12.8575, 77.711],\n    [12.85704, 77.71101],\n    [12.85686, 77.71099],\n    [12.85681, 77.71096],\n    [12.85682, 77.71095],\n    [12.85684, 77.71093],\n    [12.85679, 77.71088],\n    [12.85692, 77.71074],\n    [12.85707, 77.7105],\n    [12.85731, 77.71025],\n    [12.85751, 77.71005],\n    [12.85761, 77.70991],\n    [12.85779, 77.7096],\n    [12.85812, 77.70897],\n    [12.85835736723, 77.70860547189],\n    [12.85836199001, 77.7085983726],\n    [12.8583622897, 77.70859791236],\n    [12.8584, 77.70854],\n    [12.85849, 77.70842],\n    [12.85858, 77.70824],\n    [12.85875, 77.70758],\n    [12.85883, 77.70733],\n    [12.85893, 77.70714],\n    [12.85932, 77.70661],\n    [12.85964, 77.70609],\n    [12.85967725242, 77.70605470826],\n    [12.85968315635, 77.70604911507],\n    [12.85968355272, 77.70604873956],\n    [12.85983, 77.70591],\n    [12.85999, 77.70581],\n    [12.8602, 77.70576],\n    [12.86068824558, 77.70574809159],\n    [12.86069877595, 77.70574783475],\n    [12.86069931538, 77.70574782159],\n    [12.86102, 77.70574],\n    [12.86117, 77.70571],\n    [12.86136, 77.70566],\n    [12.86135, 77.70566],\n    [12.86145, 77.70556],\n    [12.86152, 77.70552],\n    [12.86176, 77.70548],\n    [12.86189994672, 77.70547575919],\n    [12.86190860728, 77.70547549675],\n    [12.86190914662, 77.70547548041],\n    [12.86209, 77.70547],\n    [12.86253, 77.70549],\n    [12.86334, 77.70551],\n    [12.86354, 77.70548],\n    [12.86365, 77.70545],\n    [12.86383, 77.70535],\n    [12.86378, 77.70539],\n    [12.86382, 77.70545],\n    [12.86404, 77.70529],\n    [12.86426, 77.70514],\n    [12.86463, 77.70502],\n    [12.8653, 77.70491],\n    [12.86558147011, 77.70485226257],\n    [12.86559067167, 77.70485037507],\n    [12.86559120076, 77.70485026654],\n    [12.86569, 77.70483],\n    [12.86598, 77.7047],\n    [12.86673, 77.70442],\n    [12.86718, 77.70421],\n    [12.86723, 77.70418],\n    [12.86724, 77.70418],\n    [12.86739380407, 77.70408047981],\n    [12.86740104322, 77.70407579565],\n    [12.86740149958, 77.70407550036],\n    [12.86758, 77.70396],\n    [12.86804, 77.70375],\n    [12.86835649469, 77.70364450178],\n    [12.86843, 77.70362],\n    [12.86842, 77.70355],\n    [12.86846, 77.70354],\n    [12.86881, 77.70348],\n    [12.86887130944, 77.70346467265],\n    [12.86887930504, 77.70346267375],\n    [12.86887982927, 77.70346254269],\n    [12.86901, 77.70343],\n    [12.86933, 77.70317],\n    [12.86959, 77.70279],\n    [12.8697, 77.70266],\n    [12.86983, 77.70259],\n    [12.87018, 77.70249],\n    [12.8705, 77.70234],\n    [12.87065, 77.70225],\n    [12.87071, 77.7022],\n    [12.87067, 77.70217],\n    [12.87071, 77.7022],\n    [12.87086, 77.70209],\n    [12.87095230006, 77.70202684742],\n    [12.87095919739, 77.7020221282],\n    [12.87095964627, 77.70202182107],\n    [12.87124, 77.70183],\n    [12.87152, 77.7017],\n    [12.87186, 77.70161],\n    [12.87215, 77.70161],\n    [12.87273, 77.70167],\n    [12.87331, 77.70168],\n    [12.87358, 77.70166],\n    [12.87379, 77.7016],\n    [12.87427, 77.70144],\n    [12.8746, 77.70129],\n    [12.87470704043, 77.70123880678],\n    [12.87471466509, 77.70123516021],\n    [12.87471515412, 77.70123492632],\n    [12.87483, 77.70118],\n    [12.87533, 77.7008],\n    [12.87553, 77.70061],\n    [12.87602, 77.70009],\n    [12.87618179836, 77.69993629159],\n    [12.87618799607, 77.69993040376],\n    [12.87618839196, 77.69993002767],\n    [12.87622, 77.6999],\n    [12.87637, 77.6998],\n    [12.87657, 77.69972],\n    [12.87701, 77.69962],\n    [12.87715, 77.69957],\n    [12.87729, 77.6995],\n    [12.87749, 77.69938],\n    [12.87809, 77.69895],\n    [12.87813019463, 77.69892320359],\n    [12.87813696946, 77.69891868704],\n    [12.87813742189, 77.69891838542],\n    [12.87815, 77.69891],\n    [12.87854, 77.69866],\n    [12.87855122357, 77.69865438822],\n    [12.87868, 77.69859],\n    [12.87894, 77.6985],\n    [12.87936, 77.6984],\n    [12.88083237367, 77.69814478859],\n    [12.88084772794, 77.69814212717],\n    [12.88084834863, 77.69814201958],\n    [12.88086, 77.69814],\n    [12.8812, 77.69805],\n    [12.88143, 77.69795],\n    [12.88171, 77.69784],\n    [12.88259, 77.69748],\n    [12.88295307525, 77.69734012726],\n    [12.88296206103, 77.69733666554],\n    [12.88296265033, 77.69733643851],\n    [12.88381, 77.69701],\n    [12.88403, 77.69693],\n    [12.88435, 77.69679],\n    [12.88462, 77.69663],\n    [12.88514, 77.69644],\n    [12.8854, 77.69638],\n    [12.88562, 77.69639],\n    [12.88594, 77.69649],\n    [12.88622716817, 77.69649],\n    [12.8862365325, 77.69649],\n    [12.886237162, 77.69649],\n    [12.88632, 77.69649],\n    [12.88723, 77.69637],\n    [12.88751, 77.69633],\n    [12.88754623455, 77.69632253996],\n    [12.8875540905, 77.69632092256],\n    [12.88755470768, 77.69632079549],\n    [12.88785, 77.69626],\n    [12.88804, 77.69616],\n    [12.88817, 77.69607],\n    [12.88846, 77.696],\n    [12.8887, 77.69599],\n    [12.88908, 77.69603],\n    [12.8893, 77.69603],\n    [12.88939, 77.69601],\n    [12.88958, 77.69588],\n    [12.88981581648, 77.69571021214],\n    [12.88982298862, 77.69570504819],\n    [12.88982350387, 77.69570467721],\n    [12.88983, 77.6957],\n    [12.88988, 77.69568],\n    [12.89, 77.69566],\n    [12.89017, 77.69565],\n    [12.89043, 77.69569],\n    [12.89069, 77.69569],\n    [12.89083, 77.69569],\n    [12.8909, 77.69569],\n    [12.891, 77.69563],\n    [12.89102, 77.69561],\n    [12.89112, 77.69578],\n    [12.89126, 77.69593],\n    [12.89146, 77.69603],\n    [12.89159, 77.69612],\n    [12.89168, 77.69622],\n    [12.89176, 77.69631],\n    [12.89194, 77.69645],\n    [12.89197799195, 77.69650098907],\n    [12.89198279389, 77.69650743376],\n    [12.89198317617, 77.69650794682],\n    [12.89232, 77.69696],\n    [12.89237, 77.69716],\n    [12.89235, 77.69731],\n    [12.89229, 77.69751],\n    [12.89205, 77.6981],\n    [12.89191, 77.69844],\n    [12.89192, 77.69853],\n    [12.892, 77.69877],\n    [12.89284553778, 77.69926431335],\n    [12.89285554835, 77.6992701657],\n    [12.89285609528, 77.69927048544],\n    [12.8933, 77.69953],\n    [12.89336, 77.69958],\n    [12.89354, 77.6997],\n    [12.89384, 77.69985],\n    [12.89396, 77.69989],\n    [12.89414, 77.69993],\n    [12.8943, 77.69996],\n    [12.89433, 77.69999],\n    [12.89435, 77.70008],\n    [12.89431, 77.70018],\n    [12.89428, 77.70026],\n    [12.89431, 77.70028],\n    [12.89428, 77.70035],\n    [12.89437, 77.70039],\n    [12.89448, 77.7006],\n    [12.89452, 77.70069],\n    [12.89461, 77.70087],\n    [12.89471593697, 77.70098917905],\n    [12.89472140754, 77.70099533344],\n    [12.8947218317, 77.70099581062],\n    [12.89477, 77.70105],\n    [12.8948, 77.70106],\n    [12.89483, 77.701],\n    [12.8949, 77.70103],\n    [12.89491, 77.70103],\n    [12.89488, 77.7011],\n    [12.89495, 77.70113],\n    [12.89492106399, 77.70121680805],\n    [12.89483, 77.70149],\n    [12.89469951083, 77.70189125658],\n    [12.89469708319, 77.70189872161],\n    [12.89469688398, 77.70189933418],\n    [12.89443, 77.70272],\n    [12.89436, 77.70304],\n    [12.89429, 77.70302],\n    [12.89428, 77.70306],\n    [12.89419, 77.70362],\n    [12.89406, 77.70399],\n    [12.89383, 77.70441],\n    [12.89359, 77.70475],\n    [12.89358, 77.70482],\n    [12.89361, 77.70487],\n    [12.8937, 77.70498],\n    [12.89392131124, 77.7051321514],\n    [12.89392855974, 77.70513713475],\n    [12.89392908264, 77.70513749424],\n    [12.89402, 77.7052],\n    [12.89413, 77.7053],\n    [12.89414, 77.70536],\n    [12.89421, 77.70536],\n    [12.89425, 77.70536],\n    [12.89448, 77.70542],\n    [12.89452, 77.70541],\n    [12.8947, 77.70543],\n    [12.89546, 77.70569],\n    [12.89561527572, 77.70574612359],\n    [12.89562337802, 77.70574905213],\n    [12.89562397172, 77.70574926672],\n    [12.89629, 77.70599],\n    [12.89691789698, 77.70623931198],\n    [12.89692803915, 77.70624333902],\n    [12.89692862618, 77.70624357211],\n    [12.89697, 77.70626],\n    [12.89766, 77.70656],\n    [12.89779, 77.7066],\n    [12.89782702888, 77.70660411432],\n    [12.89783500259, 77.70660500029],\n    [12.8978356284, 77.70660506982],\n    [12.89797, 77.70662],\n    [12.89819, 77.70662],\n    [12.8984, 77.70662],\n    [12.89866, 77.70658],\n    [12.89945, 77.70645],\n    [12.89987, 77.70637],\n    [12.90005, 77.70634],\n    [12.90013, 77.70632],\n    [12.90019, 77.70626],\n    [12.90038, 77.7062],\n    [12.90046, 77.70621],\n    [12.90106, 77.70626],\n    [12.90162, 77.70626],\n    [12.90167022983, 77.70625799081],\n    [12.90167831616, 77.70625766736],\n    [12.90167894515, 77.7062576422],\n    [12.90212, 77.70624],\n    [12.90215, 77.70622],\n    [12.90223, 77.70609],\n    [12.90233990731, 77.70588239746],\n    [12.90234368983, 77.70587525269],\n    [12.90234399026, 77.70587468521],\n    [12.90241, 77.70575],\n    [12.90234, 77.70572],\n    [12.90245, 77.70555],\n    [12.90252, 77.70543],\n    [12.90294828267, 77.7052795887],\n    [12.90295, 77.70528],\n    [12.90322, 77.70483],\n    [12.90323, 77.7047],\n    [12.90321, 77.70467],\n    [12.90331, 77.7045],\n    [12.90337, 77.70438],\n    [12.90354, 77.70405],\n    [12.90358, 77.70408],\n    [12.90437, 77.70443],\n    [12.90449, 77.70448],\n    [12.90476, 77.70462],\n    [12.90497, 77.70469],\n    [12.90525, 77.70475],\n    [12.90562, 77.70491],\n    [12.90588, 77.70501],\n    [12.90647, 77.70521],\n    [12.90694771788, 77.70536923929],\n    [12.90689380589, 77.70535126861],\n    [12.90694934041, 77.70536978013],\n    [12.90694998915, 77.70536999638],\n    [12.90694999995, 77.70536999998]\n],\n    distances = [\n        0,\n        25.312545177271964,\n        63.87263788612921,\n        128.3662332904793,\n        170.74703358967403,\n        194.61860528164615,\n        204.5171567990287,\n        215.84763881668556,\n        255.0065952874924,\n        292.97534408566196,\n        350.84891917118773,\n        439.8953540141516,\n        515.483290312427,\n        554.0505714603956,\n        576.5991342777804,\n        594.5495881289462,\n        624.7555449187458,\n        657.1400308568564,\n        704.5804059741256,\n        746.7255790044783,\n        915.2645060767039,\n        1069.6991411170898,\n        1195.7717869882497,\n        1211.0362929749583,\n        1225.3457119431043,\n        1249.8044132899927,\n        1287.8378883389742,\n        1391.641129365334,\n        1404.7451116198647,\n        1480.9699787165187,\n        1532.4306694173822,\n        1600.2758386945768,\n        1615.300888203522,\n        1633.1836362788624,\n        1689.4351066940262,\n        1747.9161552311966,\n        1791.6879753703624,\n        1834.177991368112,\n        1923.863174730142,\n        1932.6555593351986,\n        1963.0958046888427,\n        1998.176529431029,\n        2004.7917356156424,\n        2081.3165011907986,\n        2125.641501708447,\n        2180.138914147186,\n        2222.274531757643,\n        2254.810356361503,\n        2272.301619784502,\n        2339.651215514183,\n        2427.3822007175086,\n        2450.4033234915764,\n        2491.7332968914,\n        2532.9837854316434,\n        2559.5880948064623,\n        2672.3021130466905,\n        2694.4189746548063,\n        2706.1114068450165,\n        2740.253191202942,\n        2800.7479005653136,\n        2852.7086202000037,\n        2881.161664090291,\n        2917.666527575644,\n        2934.3295325138,\n        2955.2967716556736,\n        2987.250970678318,\n        3029.385628745252,\n        3202.869717606912,\n        3398.4902480118303,\n        3511.2025906249382,\n        3851.640375470323,\n        3878.8276921151883,\n        3900.474439196755,\n        3919.4826056626002,\n        3945.9826504555353,\n        3969.008560394947,\n        3997.8926892827644,\n        4036.925395396062,\n        4089.910352807175,\n        4102.106656228547,\n        4107.054298073792,\n        4107.192767559032,\n        4107.361990179008,\n        4110.145773726336,\n        4180.390340907564,\n        4180.822453873062,\n        4181.174393623672,\n        4210.698939208525,\n        4292.000716173223,\n        4302.854852313463,\n        4310.665627939966,\n        4360.538706701312,\n        4363.868533695225,\n        4373.220554712682,\n        4374.003150979601,\n        4374.703442199028,\n        4419.9605359661355,\n        4438.315734025077,\n        4438.957376919581,\n        4439.443497865747,\n        4514.222585002374,\n        4537.414692113252,\n        4568.845540409825,\n        4624.6539387924,\n        4661.770465826946,\n        4683.475306530917,\n        4704.543483847794,\n        4724.568305684847,\n        4761.833036822263,\n        4774.568034009629,\n        4775.815547967958,\n        4819.527637978128,\n        4846.950027205275,\n        4847.700005743131,\n        4848.406005310607,\n        4914.119865633471,\n        4973.499688084064,\n        4986.5256157618305,\n        5020.131183011214,\n        5066.949920658331,\n        5127.395608327772,\n        5142.774574643082,\n        5143.467130723061,\n        5144.1099589602745,\n        5286.691894100222,\n        5399.2568850760745,\n        5510.432554130373,\n        5511.237445962809,\n        5512.029307939363,\n        5656.639723327673,\n        5719.619906481814,\n        5767.454311488084,\n        5768.328004584482,\n        5769.144649458342,\n        5897.428530141113,\n        5911.93006106851,\n        6043.643662744582,\n        6044.354396069715,\n        6044.943274018865,\n        6149.9145677855795,\n        6191.246934111196,\n        6219.77618321262,\n        6287.406679710418,\n        6287.661212456189,\n        6287.834372167407,\n        6312.107867523774,\n        6324.0382446349,\n        6371.741705620891,\n        6477.363455489014,\n        6478.208298485683,\n        6479.124731995417,\n        6527.495624348025,\n        6563.348178083408,\n        6599.564075460688,\n        6663.615428444523,\n        6679.654045774571,\n        6680.755793844988,\n        6681.754132595969,\n        6769.036717758727,\n        6875.53892245752,\n        6916.394728781422,\n        7125.217955963091,\n        7275.928328365056,\n        7276.2774326320105,\n        7276.378959800467,\n        7277.054942740092,\n        7377.440625290307,\n        7446.168519154874,\n        7488.877216405436,\n        7517.361972167662,\n        7537.8349853818745,\n        7555.746494008686,\n        7574.363649768198,\n        7592.2042138365705,\n        7621.721397436009,\n        7638.071937849309,\n        7656.692246844913,\n        7672.36153742828,\n        7685.11284672456,\n        7720.925027919663,\n        7816.161344892003,\n        7860.825767688272,\n        7892.961693460196,\n        7985.397248616131,\n        7985.9655681971235,\n        7986.376681811854,\n        7997.453602411448,\n        8069.756436101866,\n        8134.080522081796,\n        8213.512915669056,\n        8262.350638643687,\n        8273.07220234866,\n        8281.510313943512,\n        8289.804217043375,\n        8298.246993546138,\n        8322.688984014394,\n        8373.990418447922,\n        8380.37546131298,\n        8402.262262668128,\n        8472.196646063334,\n        8528.862953936148,\n        8536.39873228019,\n        8537.062486769533,\n        8537.624901524943,\n        8557.337115512157,\n        8581.39734605807,\n        8694.624323540254,\n        8735.948268136373,\n        8772.047914261446,\n        8810.23465178465,\n        8824.373534517774,\n        8848.453174171997,\n        8892.948168525469,\n        8923.877181585107,\n        8956.072178114382,\n        8968.25630239735,\n        8979.64024188476,\n        8999.02418971936,\n        8999.742222124516,\n        9013.090763828903,\n        9029.692496198355,\n        9088.317619590365,\n        9106.782632141658,\n        9189.452985292535,\n        9190.03168777574,\n        9190.509416245635,\n        9198.439640620316,\n        9222.9283107723,\n        9254.602135533896,\n        9295.060942779155,\n        9295.719438698849,\n        9296.189870372815,\n        9317.647051042533,\n        9361.620148528324,\n        9410.821904616989,\n        9411.386518492329,\n        9411.68809370049,\n        9426.588278941355,\n        9465.166130310257,\n        9527.066727200552,\n        9572.187640168335,\n        9572.560775996342,\n        9572.66283868007,\n        9592.956072366775,\n        9652.333656729323,\n        9795.81966857986,\n        9846.46436109428,\n        10005.187318800216,\n        10109.873318064674,\n        10214.396364557377,\n        10316.83275239496,\n        10340.551893184833,\n        10357.929919121636,\n        10402.49298888966,\n        10450.974342090038,\n        10485.65798638455,\n        10521.700797336247,\n        10666.946063291893,\n        10676.692378984668,\n        10693.80507250954,\n        10738.836362000304,\n        10801.234054525834,\n        10824.653561655201,\n        10866.093309831691,\n        10891.899746322399,\n        10947.221389216393,\n        10973.257867600294,\n        11060.986747199999,\n        11104.103365836905,\n        11104.530274109895,\n        11104.763592311947,\n        11110.489396256762,\n        11144.255461849392,\n        11158.346777725252,\n        11180.052545588978,\n        11207.348683302922,\n        11223.651680555271,\n        11243.941592098055,\n        11274.908050334107,\n        11282.673343984243,\n        11322.532167687348,\n        11330.825932788128,\n        11356.643846072966,\n        11379.157892728683,\n        11400.122746191892,\n        11421.652706626814,\n        11428.551710926355,\n        11475.164664042863,\n        11483.471077503887,\n        11497.456898676128,\n        11518.29662119656,\n        11556.719832274202,\n        11557.420533034827,\n        11557.713674766064,\n        11558.566200541623,\n        11575.884181945718,\n        11618.717475393003,\n        11675.50214205303,\n        11758.61587346778,\n        11812.876626569203,\n        11871.888030609793,\n        12013.930356860315,\n        12059.72652798039,\n        12073.075012431087,\n        12109.430129515422,\n        12142.757820372808,\n        12166.634627128033,\n        12185.643322091013,\n        12311.862205228737,\n        12428.888922062926,\n        12430.299651398002,\n        12430.897586413019,\n        12431.462851413591,\n        12492.275798633447,\n        12672.634828596378,\n        12753.228607535293,\n        12795.90087222723,\n        12796.921631130012,\n        12797.876683535727,\n        12802.14412324605,\n        12844.093898177842,\n        12874.423580564655,\n        12924.89335006264,\n        12977.032645545185,\n        13052.684813542774,\n        13109.767188957967,\n        13158.71351260806,\n        13228.560466991032,\n        13280.4640522332,\n        13281.320922604087,\n        13281.871277233131,\n        13309.286083042252,\n        13344.9273743701,\n        13404.90145957119,\n        13431.30640183965,\n        13470.500628115697,\n        13525.958395785665,\n        13579.637061324835,\n        13627.08626500545,\n        13742.988580704463,\n        13787.316854046161,\n        13801.55499869105,\n        13801.989587779131,\n        13802.176503760818,\n        13807.970573452,\n        13848.584740419661,\n        13889.955214774067,\n        13923.640168375872,\n        13966.998516214813,\n        14003.577755713806,\n        14031.771453773166,\n        14061.121417749515,\n        14078.781895343016,\n        14110.088720502497,\n        14132.985911637099,\n        14144.80505154017,\n        14159.598174754967,\n        14177.667342133549,\n        14211.083343252256,\n        14241.289795011991,\n        14259.194660827632,\n        14285.304017554823,\n        14334.079834225706,\n        14355.148889587317,\n        14366.044852971405,\n        14386.669090131298,\n        14445.872348823968,\n        14466.466597114078,\n        14478.618538820072,\n        14479.006620937742,\n        14479.04339271263,\n        14515.26190013047,\n        14558.675222990063,\n        14639.261213767537,\n        14676.266160016392,\n        14707.780737514518,\n        14752.042390403278,\n        14780.567841108674,\n        14823.930468008472,\n        14835.15859134237,\n        14924.311027988157,\n        14943.922377525634,\n        14955.921406917045,\n        14973.600326122765,\n        14991.795030043982,\n        15040.771686590588,\n        15171.168452743907,\n        15196.132797723565,\n        15222.446206850442,\n        15280.668519633638,\n        15281.044088112316,\n        15281.096296997206,\n        15411.519697391688,\n        15437.32824188642,\n        15446.079543060312,\n        15456.933341137157,\n        15543.120213436127,\n        15671.252404091012,\n        15705.401098071354,\n        15784.200810879094,\n        15805.820671303602,\n        15806.549866144673,\n        15807.058861072515,\n        15876.544195081673,\n        15914.209903552879,\n        15977.779887310697,\n        15996.093480741372,\n        16004.002378661115,\n        16019.906671719915,\n        16054.530373209096,\n        16099.021663494257,\n        16145.924351636952,\n        16175.966548125394,\n        16213.78851857308,\n        16275.186100870565,\n        16325.236135099578,\n        16350.812121146444,\n        16410.946518275407,\n        16453.493646054598,\n        16454.21798144458,\n        16454.60333434939,\n        16528.16006344838,\n        16578.19952154088,\n        16598.804615651938,\n        16599.36994858296,\n        16599.56574109781,\n        16609.57752646851,\n        16710.040337624505,\n        16761.948591252047,\n        16784.839328037342,\n        16825.23775151031,\n        16917.50109655078,\n        16940.649370126193,\n        16941.395727387728,\n        16941.990547174726,\n        17145.564656042403,\n        17217.552513497958,\n        17240.915806932193,\n        17241.747186863235,\n        17242.409162743013,\n        17277.0909068255,\n        17437.3663858802,\n        17449.750223545005,\n        17508.843347142196,\n        17553.86278345487,\n        17587.555139466207,\n        17627.207072309055,\n        17655.02723646915,\n        17704.91598728671,\n        17709.86430757488,\n        17717.63039592865,\n        17757.460223983202,\n        17787.772640971467,\n        17813.172852977634,\n        17855.25546960864,\n        17868.353788820164,\n        17869.187134370986,\n        17869.909579431478,\n        17878.17935412909,\n        17903.765421283853,\n        17946.24681915176,\n        18000.617409199138,\n        18055.632302660837,\n        18101.238674468917,\n        18171.367752767987,\n        18284.99050092103,\n        18285.997148292627,\n        18286.038065003053,\n        18297.02678452259,\n        18320.479199701407,\n        18337.716757930164,\n        18393.133502671993,\n        18496.247271714958,\n        18547.11526350339,\n        18570.872751771836,\n        18598.098373721037,\n        18624.78776115779,\n        18640.52424585887,\n        18682.79845413509,\n        18713.960004752465,\n        18751.911599914143,\n        18763.318415948423,\n        18782.256461101846,\n        18805.204348765576,\n        18824.15094961161,\n        18852.037392408038,\n        18878.74919802442,\n        19020.66536608748,\n        19122.7203842301,\n        19132.788394193216,\n        19142.27366186065,\n        19250.78679208674,\n        19379.974702547144,\n        19439.976687500937,\n        19476.072056228695,\n        19498.7048296331,\n        19499.110062166368,\n        19499.279249041287,\n        19528.52559431141,\n        19578.722571173275,\n        19606.48944604251,\n        19625.445428817406,\n        19637.424593267406,\n        19655.887114687233,\n        19687.63413409391,\n        19738.50510959165,\n        19761.70167610769,\n        19782.329953351877,\n        19792.34813416977,\n        19803.379436587267,\n        19815.810092408803,\n        19874.848419088696,\n        20038.915080994622,\n        20059.285609260598,\n        20088.174171412476,\n        20114.656498649794,\n        20257.539792227137,\n        20287.844158570148,\n        20354.172153367163,\n        20426.180616634487,\n        20475.65884278499,\n        20531.08749969719,\n        20653.299332975337,\n        20769.04054480986,\n        20770.04356327873,\n        20770.503229711372,\n        20814.097733418035,\n        20854.0805063944,\n        20872.007641028104,\n        20916.81584337223,\n        20940.567823989215,\n        20982.066130763564,\n        21020.984828392422,\n        21053.24980068923,\n        21079.2038206835,\n        21153.59604287554,\n        21198.28482723978,\n        21263.889873561737,\n        21364.439495227416,\n        21457.932452368572,\n        21458.820003127843,\n        21459.153364328857,\n        21500.769316553437,\n        21567.555320004787,\n        21596.97373004422,\n        21618.13581241667,\n        21641.518711195484,\n        21684.357159080002,\n        21725.321400031942,\n        21758.845125757824,\n        21784.63449745194,\n        21818.329315345447,\n        21860.933209584677,\n        21883.827767618877,\n        21906.095883597656,\n        21915.584064257506,\n        21935.869048727658,\n        21954.679275136947,\n        21968.915951403575,\n        22020.07983529877,\n        22046.192003512882,\n        22060.458911508893,\n        22085.9099696254,\n        22129.330383086624,\n        22156.993130836898,\n        22206.07749787683,\n        22244.90623056702,\n        22274.303341360916,\n        22344.2366145796,\n        22380.334673915513,\n        22410.654590582657,\n        22440.65329867265,\n        22445.202411648643,\n        22445.896258233086,\n        22446.40745803398,\n        22450.045489512715,\n        22460.574937133933,\n        22474.09743014343,\n        22510.722212973382,\n        22519.46581425048,\n        22525.028800822114,\n        22543.963703538866,\n        22567.315081577217,\n        22579.684824340216,\n        22586.734794352295,\n        22618.685270765043,\n        22646.872973386708,\n        22694.001913915417,\n        22704.10426086868,\n        22709.05291075393,\n        22714.002991338213,\n        22721.42723295498,\n        22812.739085599867,\n        22842.84133976716,\n        22856.36466136784,\n        22891.003151075965,\n        23001.042801549345,\n        23006.798589696624,\n        23007.477777307235,\n        23008.04179192101,\n        23079.318598844024,\n        23101.363543417483,\n        23123.406675453818,\n        23131.296832269756,\n        23135.970306554726,\n        23167.02613739789,\n        23167.54804561051,\n        23167.66394473987,\n        23253.32460260664,\n        23334.04213374,\n        23349.60810635252,\n        23354.476675505877,\n        23363.92062527803,\n        23376.66338322441,\n        23424.773284595456,\n        23463.27183119647,\n        23506.857654377098,\n        23570.838866083333,\n        23617.44787296762,\n        23628.55559044596,\n        23646.170359973014,\n        23655.62068023298,\n        23656.535796676206,\n        23657.27585096517,\n        23671.52755961253,\n        23718.04136677319,\n        23747.626865329068,\n        23772.58664885941,\n        23882.106445924168,\n        23882.615821361036,\n        23882.656039043188,\n        23900.438371913035,\n        23928.3399524709,\n        23950.01509825513,\n        24026.993093425328,\n        24063.108708583273,\n        24102.713783784184,\n        24164.07262320021,\n        24238.163902004937,\n        24266.197512413848,\n        24282.29807329644,\n        24330.612418239296,\n        24367.726438574486,\n        24411.301002014585,\n        24450.825937590456,\n        24498.42389986668,\n        24498.812906911302,\n        24498.853581241194,\n        24503.134393455493,\n        24540.159528399025,\n        24563.560462519563,\n        24577.22238488173,\n        24595.12378546176,\n        24620.66169508083,\n        24639.630941962547,\n        24666.30843586561,\n        24730.022306205334,\n        24763.53930695102,\n        24843.05568032935,\n        24885.33886423286,\n        24901.05929314668,\n        24960.15273181165,\n        25037.990678839717,\n        25081.37189297724,\n        25093.64398131245,\n        25094.29337943531,\n        25094.788800781716,\n        25096.601707340225,\n        25130.347016202464,\n        25168.01301701682,\n        25212.558678612342,\n        25260.7628627011,\n        25335.704826755547,\n        25402.588135994047,\n        25419.413381074144,\n        25464.10411463423,\n        25560.032457185098,\n        25631.271636088848,\n        25704.009919813514,\n        25704.787811109407,\n        25704.926676743213,\n        25784.093800833896,\n        25882.32966168423,\n        25910.132322209825,\n        25933.027835187102,\n        25968.83587557758,\n        26027.885697320653,\n        26088.04618747826,\n        26088.991442598886,\n        26089.662856379786,\n        26096.525353882815,\n        26178.117245390087,\n        26214.116929279557,\n        26230.84513378636,\n        26313.388331821432,\n        26388.17540059006,\n        26473.024995177893,\n        26534.53032487633,\n        26543.507114663804,\n        26551.188468171335,\n        26568.851543623376,\n        26666.5921892656,\n        26746.3853576701,\n        26819.830340685283,\n        26857.7363393738,\n        26858.857993994978,\n        26919.93817615921,\n        27025.67879745839,\n        27096.15576909569,\n        27169.074389801754,\n        27169.396245809876,\n        27169.437594489802,\n        27182.232146400514,\n        27310.502296454535,\n        27506.024540135422,\n        27526.593274978884,\n        27526.966036898553,\n        27527.02488322472,\n        27541.007864438685,\n        27597.405135119814,\n        27605.310997056844,\n        27622.421788098345,\n        27657.386383997007,\n        27669.20378323808,\n        27687.760898765056,\n        27738.88965896151,\n        27746.557177219613,\n        27763.509205289036,\n        27763.88398059368,\n        27763.92797991683,\n        27772.572372559956,\n        27780.431100949085,\n        27784.766107597814,\n        27802.975292441177,\n        27884.189893870953,\n        27888.73462214532,\n        27892.242426121713,\n        27903.414662016854,\n        27916.758063048303,\n        27935.069745045894,\n        27955.438286735676,\n        27978.797242475026,\n        27979.30295160944,\n        27979.454270131206,\n        27987.87201980671,\n        28024.82263377267,\n        28047.16883546244,\n        28067.1609189168,\n        28075.453282775085,\n        28077.947118129967,\n        28102.501911459192,\n        28147.15005372792,\n        28175.78167814833,\n        28176.434727619315,\n        28176.829191025463,\n        28193.535267898187,\n        28254.703784079204,\n        28269.11152550328,\n        28285.030086540624,\n        28302.85387414328,\n        28347.346945122907,\n        28403.32448750505,\n        28419.811856669774,\n        28427.584570555056,\n        28428.100039067696,\n        28428.38656443209,\n        28433.54511587,\n        28495.655773047314,\n        28551.296133170956,\n        28558.968751785513,\n        28565.735512109895,\n        28584.615191164365,\n        28585.229249642765,\n        28585.664817042238,\n        28586.206800446627,\n        28597.337851698998,\n        28719.35857273252,\n        28733.471425798132,\n        28744.42486340683,\n        28803.46537691436,\n        28816.668353942398,\n        28827.546459501467,\n        28879.07272294949,\n        28923.770548309156,\n        28999.643932370847,\n        29046.157382660243,\n        29096.623282681772,\n        29182.422949544256,\n        29228.43065055287,\n        29250.220437937234,\n        29343.759751930087,\n        29349.320584473146,\n        29355.53272843802,\n        29364.088973561793,\n        29390.425191660193,\n        29485.08941587065,\n        29536.7899915245,\n        29635.383173832284,\n        29692.28568956315,\n        29749.66952032561,\n        29792.85044937506,\n        29845.88524273409,\n        29910.845975695906,\n        29949.249666343494,\n        29949.849929312644,\n        29950.124766791985,\n        29967.03987971024,\n        29988.60918261559,\n        30018.243888891746,\n        30056.356044702305,\n        30113.25665246162,\n        30152.56333799256,\n        30262.417112499632,\n        30358.9316328276,\n        30404.205902255922,\n        30415.378425017585,\n        30453.649412144336,\n        30460.666781124302,\n        30465.61949667188,\n        30479.643125572085,\n        30554.86951752036,\n        30555.70313005108,\n        30556.007691787403,\n        30570.124246661177,\n        30709.55285315364,\n        30737.43735091233,\n        30749.862043140954,\n        30793.71359325812,\n        30803.781162385036,\n        30823.913363652704,\n        30883.648479763993,\n        30956.194649395675,\n        31016.321828521417,\n        31037.05759307087,\n        31072.283332453324,\n        31087.375171078733,\n        31094.047356121497,\n        31102.127428881486,\n        31107.000123695867,\n        31117.309260920672,\n        31119.745779751385,\n        31133.479921108967,\n        31145.415631968022,\n        31149.399556593846,\n        31151.888832459226,\n        31163.82900114879,\n        31167.31394295824,\n        31198.944486959335,\n        31243.186878908768,\n        31264.241131576706,\n        31328.96615836133,\n        31346.514394098333,\n        31365.491848416466,\n        31376.523821825343,\n        31390.507101128787,\n        31398.953481671026,\n        31406.629389900274,\n        31418.451023232017,\n        31442.322136835734,\n        31473.595380798855,\n        31490.310144368752,\n        31527.259692859934,\n        31531.837644324467,\n        31539.74380565147,\n        31574.499390225148,\n        31585.518929492115,\n        31590.990664069457,\n        31598.300868638595,\n        31610.1871165193,\n        31610.999899472194,\n        31611.276245531615,\n        31613.729034059288,\n        31651.730622420506,\n        31670.315267690374,\n        31698.224108118182,\n        31719.296395300553,\n        31738.391667567703,\n        31746.357824391525,\n        31750.849256855952,\n        31779.811094444747,\n        31797.155983278943,\n        31812.372969425545,\n        31837.82396989546,\n        31853.985753676836,\n        31874.69923088625,\n        31893.424399011627,\n        31901.50428787059,\n        31909.939854839096,\n        31918.020322578253,\n        31967.520894644265,\n        32006.073586250448,\n        32053.0085964687,\n        32070.51994876013,\n        32071.3549683011,\n        32071.524347423594,\n        32084.969171647004,\n        32108.839037620633,\n        32129.46247170047,\n        32154.613386037658,\n        32173.42548279205,\n        32205.142829963886,\n        32230.101925956475,\n        32249.993401045285,\n        32274.070394906787,\n        32301.033775834203,\n        32301.838694924554,\n        32302.642322130694,\n        32302.880477873914,\n        32315.650293380684,\n        32415.02768709681,\n        32435.400370337768,\n        32453.299367380343,\n        32471.207920261182,\n        32511.49249883051,\n        32535.557177465776,\n        32554.530654890343,\n        32570.946906809484,\n        32620.240836285884,\n        32631.80327425842,\n        32632.769285018243,\n        32633.384220524003,\n        32663.405870630686,\n        32684.27871532595,\n        32739.393113310154,\n        33047.37152855679,\n        33083.21275553881,\n        33091.777835285255,\n        33124.84437354048,\n        33162.25681683382,\n        33163.298470098314,\n        33163.748946355074,\n        33176.39675471637,\n        33244.54134297941,\n        33291.20008604634,\n        33301.6264456841,\n        33335.59148065268,\n        33500.65887969972,\n        33528.13061824655,\n        33531.498729784435,\n        33539.41828890405,\n        33564.734741710105,\n        33653.05744049295,\n        33743.28433486791,\n        33794.20060504311,\n        33840.81943657115,\n        33841.857380801965,\n        33842.05503318096,\n        33845.57088661919,\n        33847.12471488162,\n        33853.48852825671,\n        33902.69443482699,\n        34028.009994391825,\n        34099.63895187006,\n        34108.07636459487,\n        34113.936981201194,\n        34149.695186640965,\n        34167.60042607289,\n        34174.47631081122,\n        34178.45906561996,\n        34181.97117958739,\n        34240.04622869049,\n        34244.497370372104,\n        34252.16726577889,\n        34280.30257228273,\n        34323.885296339315,\n        34373.11070970961,\n        34432.08417993711,\n        34530.15210503215,\n        34559.063652117155,\n        34598.118177336386,\n        34599.35896148793,\n        34600.25045980929,\n        34600.758659260064,\n        34664.78620118526,\n        34703.724648795986,\n        34771.50219166425,\n        34849.513646586616,\n        34874.01031747425,\n        34895.397240890474,\n        34935.42447781854,\n        34936.60682762598,\n        34937.23621062312,\n        35012.97369172721,\n        35052.434689554044,\n        35053.630900528995,\n        35104.24243028903,\n        35211.91689474113,\n        35252.18342847352,\n        35271.21269705867,\n        35301.31402751426,\n        35340.358719231444,\n        35397.87587153482,\n        35442.77232749966,\n        35446.75080460761,\n        35455.039597032715,\n        35474.38141249469,\n        35529.93563443238,\n        35571.495146043366,\n        35592.3302575659,\n        35641.008402831016,\n        35650.90882678363,\n        35659.81024357878,\n        35680.18243247718,\n        35687.50245463772,\n        35697.75119568942,\n        35714.57771532529,\n        35727.24483289498,\n        35747.04538002726,\n        35783.185298832104,\n        35818.347533736094,\n        35819.46487319387,\n        35820.116343166796,\n        35837.07044878057,\n        35952.41750590875,\n        35960.35094705272,\n        36068.73886552855,\n        36110.924140109855,\n        36117.29591281613,\n        36146.039427999436,\n        36151.6755919824,\n        36266.15897501196,\n        36281.59719664697,\n        36303.94725168694,\n        36314.81930327398,\n        36341.219322108474,\n        36359.28974836549,\n        36410.8186121464,\n        36418.136248380484,\n        36422.13333569975,\n        36469.25419807794,\n        36484.60992953442,\n        36492.498169473656,\n        36502.4017500111,\n        36525.69827792982,\n        36531.179496262535,\n        36538.4959794148,\n        36562.9847261128,\n        36644.511430275765,\n        36652.47262663814,\n        36670.049711952444,\n        36673.495281762676,\n        36717.72050412179,\n        36740.170213746955,\n        36820.88673246081,\n        36834.130927575774,\n        36847.289115752224,\n        36860.01903796649,\n        36872.5791827559,\n        36884.37194077197,\n        36885.30300691632,\n        36885.41834214304,\n        36895.941209704506,\n        36936.064331881804,\n        36968.200213579534,\n        36992.963697157946,\n        37020.62784854438,\n        37096.245071526886,\n        37151.707144237495,\n        37186.55507511406,\n        37198.73920492157,\n        37219.73881007148,\n        37245.355146898946,\n        37285.77202672414,\n        37292.34894319442,\n        37293.274249582995,\n        37293.475080872326,\n        37333.42653227232,\n        37406.354996260925,\n        37422.88451150481,\n        37444.28971937628,\n        37466.395951296094,\n        37561.80295792978,\n        37595.600835730074,\n        37622.29066554315,\n        37643.67127872772,\n        37669.63110916842,\n        37672.14820469729,\n        37673.25926404848,\n        37673.98847275807,\n        37761.54033917249,\n        37791.240927833875,\n        37829.513921626974,\n        37877.333447482466,\n        37879.1093975239,\n        37908.628268072614,\n        37949.08373591661,\n        37972.043613305505,\n        38029.433184103385,\n        38092.231015806894,\n        38289.1437929903,\n        38337.15268527112,\n        38393.08295969141,\n        38443.56553244834,\n        38462.36663825384,\n        38530.20972458696,\n        38600.02333964003,\n        38659.76961491242,\n        38661.003858798664,\n        38661.55218546492,\n        38753.538034089,\n        38791.070474223336,\n        38852.75251263982,\n        38916.323999208405,\n        38987.076218801354,\n        39023.92386567547,\n        39039.133330611716,\n        39054.14399788708,\n        39074.86459512725,\n        39140.25083052737,\n        39203.917601837704,\n        39221.58140530556,\n        39245.15718114504,\n        39246.01790664695,\n        39246.088911364415,\n        39247.637889993064,\n        39280.46222330866,\n        39290.77337607958,\n        39299.56947694071,\n        39320.36721294138,\n        39347.73999978656,\n        39353.25041606812,\n        39357.909551578254,\n        39371.10702054175,\n        39386.646076608005,\n        39446.545966039026,\n        39459.74915875865,\n        39473.17888023002,\n        39493.18427984184,\n        39511.91315693182,\n        39526.05029421267,\n        39605.578710816,\n        39644.819082978116,\n        39702.276624631246,\n        39798.319740649626,\n        39807.27504591729,\n        39815.04175680073,\n        39826.21077334149,\n        39827.14327453661,\n        39827.2072297218,\n        39851.89146582658,\n        39888.50755520925,\n        39903.26428347339,\n        39910.944568183826,\n        39949.47211499498,\n        39976.94325710146,\n        40039.98225066212,\n        40046.90468447641,\n        40053.33105352028,\n        40067.34078150152,\n        40086.97565470959,\n        40094.05777268999,\n        40139.39511138978,\n        40209.29565438614,\n        40215.81575782002,\n        40266.70592872709,\n        40304.17568484883,\n        40345.76118881492,\n        40346.8961449506,\n        40347.53944291617,\n        40379.05388299433,\n        40414.60044874459,\n        40432.67350157984,\n        40469.82066950295,\n        40537.03200181852,\n        40581.82545303159,\n        40587.3757969685,\n        40595.18093180398,\n        40655.90276118788,\n        40691.84062105364,\n        40829.08503842777,\n        40858.5558755451,\n        40870.17750395764,\n        40871.31945621643,\n        40872.00304015533,\n        40950.28592145893,\n        41027.26304318898,\n        41063.19493857839,\n        41098.04752591729,\n        41165.26854638072,\n        41197.867036700874,\n        41276.424332846815,\n        41290.569690462,\n        41291.4369072384,\n        41291.500364817155,\n        41323.372840773714,\n        41360.82972209275,\n        41366.36326817347,\n        41374.443500330264,\n        41394.457032561026,\n        41455.52999499484,\n        41527.62862708357,\n        41637.32144515403,\n        41717.17355828944,\n        41718.00001679716,\n        41718.274238628284,\n        41737.35414478569,\n        41781.85786528233,\n        41810.13416157326,\n        41818.01178605604,\n        41821.32157513677,\n        41861.50122697446,\n        41919.05915548809,\n        41923.99370112705,\n        41934.546410067225,\n        42047.29178045957,\n        42073.41738967267,\n        42085.8250475258,\n        42103.69829427228,\n        42112.330594570696,\n        42120.12947437285,\n        42134.12496639542,\n        42182.69915908228,\n        42193.783106033894,\n        42208.487716284195,\n        42209.47082426564,\n        42209.835175805325,\n        42223.09867429899,\n        42331.41232979218,\n        42344.61013739508,\n        42359.78694261155,\n        42439.86283934735,\n        42457.52583289653,\n        42512.169226199985,\n        42614.25487846297,\n        42616.582147078894,\n        42617.53050061853,\n        42617.93544460014,\n        42626.04326401936,\n        42640.07414909102,\n        42694.07275309308,\n        42741.43407071701,\n        42764.7465034516,\n        42779.55275412632,\n        42796.93817566148,\n        42820.82040419023,\n        42827.42902743985,\n        42837.254852338,\n        42844.31316370161,\n        42926.62652175647,\n        42936.87023679461,\n        42945.47082286038,\n        42952.07572449072,\n        42953.03758689264,\n        42953.97423110319,\n        42954.31805647013,\n        43019.92983015951,\n        43041.2685703736,\n        43061.87056892633,\n        43069.78674630294,\n        43095.93121186879,\n        43147.092886536935,\n        43167.22765143971,\n        43173.6773587244,\n        43175.265007747636,\n        43178.3905160721,\n        43186.16416908237,\n        43207.127166696206,\n        43238.036160492295,\n        43276.075717845975,\n        43307.13685208095,\n        43325.95485363175,\n        43365.07106062575,\n        43442.601516249815,\n        43490.12582343577,\n        43491.15541606022,\n        43491.624551237175,\n        43499.18992351609,\n        43515.610232308616,\n        43537.54538567177,\n        43611.55129916471,\n        43640.07919286467,\n        43663.48970673606,\n        43735.47502509328,\n        43802.13807358041,\n        43807.78245322823,\n        43808.69556945225,\n        43808.819895197936,\n        43830.98704879379,\n        43851.82082143516,\n        43875.79288292214,\n        43930.09932918507,\n        43931.317992464385,\n        43931.742126831006,\n        43967.41518182247,\n        43984.41958161834,\n        44006.241100772946,\n        44007.54433738507,\n        44023.09067423681,\n        44032.032305090965,\n        44059.081331444584,\n        44074.66937797498,\n        44075.89165261836,\n        44076.61773667355,\n        44096.749275796756,\n        44145.728995665966,\n        44235.825157785315,\n        44258.30489034905,\n        44270.96554135101,\n        44293.72920028759,\n        44300.78078972965,\n        44308.66040362593,\n        44338.64834260896,\n        44368.02375649223,\n        44411.17481295393,\n        44486.62431738027,\n        44518.544271267994,\n        44519.65157178235,\n        44520.02963646465,\n        44531.24047525579,\n        44566.435111939936,\n        44655.18326549977,\n        44710.157040246966,\n        44716.604598673104,\n        44717.74845897349,\n        44737.97057711386,\n        44738.95108404823,\n        44739.177025930556,\n        44762.645467872,\n        44818.63284292833,\n        44855.63728689336,\n        44864.23220675737,\n        44871.9018914124,\n        44876.48011925736,\n        44915.938109129434,\n        44922.95497713941,\n        44923.870633484046,\n        44923.95188501861,\n        44938.85022589389,\n        44984.24274128589,\n        45034.568344370215,\n        45053.228741799685,\n        45069.5558677257,\n        45109.95651574196,\n        45149.07994940302,\n        45168.406413314,\n        45177.00800850618,\n        45182.527859185575,\n        45188.04770986497,\n        45208.57686726609,\n        45220.91928662168,\n        45221.919280671296,\n        45222.32190655266,\n        45259.79645048415,\n        45293.975480356705,\n        45333.02266102114,\n        45365.27119939133,\n        45430.09251647024,\n        45494.59579119646,\n        45524.698707765194,\n        45548.940062724185,\n        45605.061298353794,\n        45645.197042394095,\n        45658.32976019329,\n        45659.26521922396,\n        45659.36857347425,\n        45673.459698835875,\n        45742.65467714158,\n        45772.96755332057,\n        45851.364690884315,\n        45875.89106909595,\n        45876.973404089,\n        45877.577804504894,\n        45882.41427156599,\n        45902.3204189984,\n        45926.204931696586,\n        45976.325794974735,\n        45992.83131719431,\n        46010.16934133142,\n        46035.94600945765,\n        46117.3374675581,\n        46122.730072615086,\n        46123.9301223037,\n        46124.716074489676,\n        46126.55712154931,\n        46177.70050855655,\n        46179.28508159233,\n        46195.28492100485,\n        46225.80864795245,\n        46273.76067729369,\n        46439.80361300935,\n        46441.65186144453,\n        46442.24830559586,\n        46443.66431880385,\n        46482.71222522312,\n        46510.492902818216,\n        46543.83402397458,\n        46649.18000962697,\n        46692.30527054963,\n        46693.37614648437,\n        46693.45121557202,\n        46794.09742372768,\n        46820.05199979475,\n        46858.73569466993,\n        46893.4079874691,\n        46954.78842428799,\n        46984.422182645656,\n        47008.91023175821,\n        47046.108300888656,\n        47078.04193607218,\n        47079.16090584143,\n        47079.6363050071,\n        47088.86270128978,\n        47190.88509870211,\n        47222.32769426354,\n        47226.50230784508,\n        47227.693732629275,\n        47228.54382768239,\n        47262.046935522856,\n        47285.81214272641,\n        47303.279412163174,\n        47336.4240550148,\n        47363.15596560251,\n        47405.64428205469,\n        47430.12436341192,\n        47440.396617657694,\n        47465.802455116376,\n        47497.844608937754,\n        47498.97103176621,\n        47499.45191367519,\n        47500.415457894786,\n        47506.39080484645,\n        47519.91149182784,\n        47538.84651466826,\n        47568.080696600715,\n        47596.991398927996,\n        47612.559251766994,\n        47620.34503082454,\n        47633.22876879452,\n        47636.343971727656,\n        47657.86822490678,\n        47680.380131313694,\n        47705.12119772239,\n        47722.561171281435,\n        47737.31402492516,\n        47750.51619488291,\n        47775.63377111324,\n        47782.59177854002,\n        47783.495239455704,\n        47783.77763598297,\n        47845.45235129704,\n        47867.835557462764,\n        47884.25120168584,\n        47906.937953503664,\n        47976.2355152091,\n        48016.244292465824,\n        48026.07200827109,\n        48053.568565892856,\n        48161.7841396801,\n        48163.089514921565,\n        48163.26233705521,\n        48220.07491243553,\n        48228.67062351145,\n        48252.54138611242,\n        48289.65249406732,\n        48303.68761300932,\n        48324.171979768296,\n        48342.26435461572,\n        48346.94583783362,\n        48356.96262721398,\n        48368.687113472755,\n        48377.98799671796,\n        48381.98732168493,\n        48390.28430862623,\n        48401.19615710981,\n        48427.038318312414,\n        48437.763431746454,\n        48459.69227254962,\n        48477.17592663698,\n        48478.09203677742,\n        48478.22977573665,\n        48486.17936922756,\n        48489.687411023086,\n        48496.9965445106,\n        48505.43216011272,\n        48506.5442229847,\n        48514.8325580192,\n        48523.26817099423,\n        48533.212370845875,\n        48564.507656837566,\n        48610.35702463299,\n        48611.224047937,\n        48611.435427128825,\n        48705.20784290278,\n        48740.757099379894,\n        48748.846524598936,\n        48753.34700206508,\n        48814.868266696074,\n        48857.503658237736,\n        48909.723678611284,\n        48955.228815622504,\n        48962.9163213206,\n        48969.299135535985,\n        48984.87179151237,\n        49014.49768095603,\n        49015.509937489136,\n        49015.73411672085,\n        49027.90464366983,\n        49044.2477710835,\n        49050.8456141882,\n        49058.62981066248,\n        49063.080031334735,\n        49089.469827057736,\n        49094.05408817927,\n        49114.18837283098,\n        49203.271784270604,\n        49221.58035642318,\n        49222.58194124208,\n        49222.88662211612,\n        49301.40859562837,\n        49376.2752769459,\n        49377.49483246453,\n        49377.610922031345,\n        49382.54409795684,\n        49465.874820836696,\n        49480.967015224065,\n        49485.11224170071,\n        49486.03369874621,\n        49486.32969517118,\n        49501.36221519932,\n        49525.8281041086,\n        49549.18282846853,\n        49578.41973135784,\n        49667.38842511771,\n        49714.88981739613,\n        49735.16911698488,\n        49744.32803870668,\n        49753.64664794903,\n        49775.75203656245,\n        49784.71358812632,\n        49851.650549254475,\n        49913.92065532753,\n        49919.512226860206,\n        49920.42618494396,\n        49920.60868178405,\n        49969.68931569659,\n        49973.67105577252,\n        49990.33522524405,\n        50015.941990507876,\n        50016.84811102601,\n        50017.07680434716,\n        50032.45772934619,\n        50040.89553404691,\n        50063.0132339651,\n        50078.17229387059,\n        50128.508715934055,\n        50128.81207743204,\n        50186.087090040164,\n        50200.221360541844,\n        50204.16274670362,\n        50225.68484555126,\n        50240.304775830606,\n        50280.76203776504,\n        50286.27201885004,\n        50381.95732747953,\n        50396.359363897915,\n        50429.99881932644,\n        50454.55164399604,\n        50486.358338686216,\n        50531.006018857806,\n        50561.881644147325,\n        50630.975644685095,\n        50680.526280428865,\n        50686.83076534653,\n        50687.022519119026,\n        50687.10418434932,\n        50687.13585003082\n    ];\n\nmodule.exports = {\n    distances: distances,\n    coordinates: coordinates,\n    aid_stations: [0, 76, 218, 375, 406, 519, 634, 755, 832, 924, 1013, 1100, 1152, 1222, 1305, 1383, 1449, 1565],\n\n    getLatLongFromDistance: (d) => {\n        for (let i = 0; i < distances.length; i++) {\n            if (d < distances[i]) return [coordinates[i][1], coordinates[i][0]];\n        }\n    }\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport View from 'ol/View';\nimport Feature from 'ol/Feature';\nimport { fromLonLat } from 'ol/proj';\nimport Point from 'ol/geom/Point';\nimport Polyline from 'ol/format/Polyline';\nimport { transform } from 'ol/proj';\nimport { Icon, Stroke, Style, Text, RegularShape } from 'ol/style';\nimport LineString from 'ol/geom/LineString';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Overlay from 'ol/Overlay';\n\nimport { distances, coordinates, aid_stations, getLatLongFromDistance } from './route-info.js'\n\n\nvar vectorSource = new VectorSource(),\n  vectorLayer = new VectorLayer({\n    source: vectorSource\n  }),\n  styles = {\n    route: new Style({\n      stroke: new Stroke({\n        width: 6, color: [14, 64, 18, 0.8]\n      }),\n    }),\n    rectangle: (text) => {\n      return new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"#c2f2e0\"\n          }),\n          stroke: new Stroke({\n            color: [5, 51, 34, 1],\n            width: 1\n          }),\n          radius: 200 / Math.SQRT2,\n          radius2: 200,\n          points: 4,\n          angle: 0,\n          scale: [0.9, 0.5],\n        }),\n        text: new Text({\n          text: text,\n          font: '8px monospace',\n          textAlign: \"center\",\n          scale: 2.2,\n          fill: new Fill({\n            color: \"#053322\"\n          })\n        })\n      })\n    },\n    icon: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/marker3.png'\n      }),\n    }),\n\n    icon2: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/start-marker.png'\n      }),\n    })\n  };\n\nvar map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  view: new View({\n    center: [8657171.159654377, 1449369.2919883956],\n    zoom: 13\n  })\n});\n\nvar utils = {\n  gettiming: function (url) {\n    return new Promise(function (resolve, reject) {\n      //make sure the coord is on street\n      fetch(url? url:'data/runners.csv').then(function (response) {\n        // Convert to JSON\n        resolve(response.text());\n      }).catch(function (e) { reject(e); });\n    });\n  },\n\n  createFeature: function (coord, style, name) {\n    var feature = new Feature({\n      name: name,\n      type: 'place',\n      geometry: new Point(fromLonLat(coord))\n    });\n    feature.setStyle(style);\n    vectorSource.addFeature(feature);\n    return feature;\n  },\n  createRoute: function (polyline) {\n    // route is ol.geom.LineString\n    var route = new Polyline({\n      factor: 1e5\n    }).readGeometry(polyline, {\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857'\n    });\n    var feature = new Feature({\n      type: 'route',\n      geometry: route\n    });\n    feature.setStyle(styles.route);\n    vectorSource.addFeature(feature);\n  },\n  to4326: function (coord) {\n    return transform([\n      parseFloat(coord[0]), parseFloat(coord[1])\n    ], 'EPSG:3857', 'EPSG:4326');\n  }\n};\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n});\nmap.addOverlay(popup);\n\n// create the route\nlet lines = new Feature({\n  geometry: new LineString(coordinates.map(c => fromLonLat([c[1], c[0]]))),\n  name: 'Line',\n});\n\nlines.setStyle(styles.route);\nvectorSource.addFeature(lines);\n\n\nfunction csvJSON(csv) {\n  var lines = csv.split(\"\\n\");\n  var result = [];\n  var headers = lines[0].split(\",\");\n\n  for (var i = 1; i < lines.length; i++) {\n\n    var obj = {};\n    var currentline = lines[i].split(\",\");\n\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j] ? currentline[j].replace('\\r','') : undefined;\n    }\n\n    result.push(obj);\n\n  }\n  return result;\n}\n\nlet getPrediction = (runner) => {\n  if (runner.TIME && runner.MARK && runner.MARK != 17) {\n    let sT = Date.parse(`Sun Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`); // start time\n    let eT = Date.parse(`Sun Oct 31 2021 ${runner.TIME}:00 GMT+0530 (India Standard Time)`); // elapsed time\n    let d_p = (distances[aid_stations[runner.MARK]] / (eT - sT)) * (Date.now() - sT); // distance_predicted\n    if (d_p > distances[aid_stations[Number(runner.MARK) + 1]]) { // if crossing next mark, keep it to 85-97% of it\n      d_p = distances[aid_stations[Number(runner.MARK) + 1]] - Math.floor(Math.random() * (500 - 100 + 1) + 100) ;\n    }\n\n    return {\n      'distance' : d_p,\n      'latlong' : getLatLongFromDistance(d_p) // get lat long for it\n    }; \n  } else if (runner.MARK) { // time not captured.\n    return {\n      'distance': distances[aid_stations[runner.MARK]], // last aid station mark\n      'latlong': [ coordinates[aid_stations[runner.MARK]][1], coordinates[aid_stations[runner.MARK]][0] ]// lat long of the last aid station\n    }\n  } else {\n    return {\n      'distance' : 0,\n      'latlong' : [coordinates[1], coordinates[0]] // no MARK means, not started\n    };\n  }\n}\n\nvar markerFeature = [];\nvar markerPrediction = {};\n\ndocument.getElementById(\"select\").addEventListener(\"change\", (e) => {\n  var val = document.getElementById(\"select\").value;\n  let splits = val.split(' | ');\n  let runner = runners.filter(r => r.NAME === splits[0]);\n\n  runner = (val === '- ALL -') ? runners : runner;\n  if (runner.length === 0) return;\n\n  markerFeature.forEach(m => {\n    vectorSource.removeFeature(m);\n  })\n  markerFeature = [];\n  $(element).popover('dispose');\n  runner.forEach(r => {\n    //console.log(r);\n    if (r.MARK) {\n      let p = getPrediction(r);\n      let m = utils.createFeature(p.latlong, styles.icon, r.BIB);\n      markerFeature.push(m);\n      markerPrediction[r.BIB] = p.distance;\n    }\n  })\n});\n\nvar getExpTime = (km, t) => {\n  let sT = Date.parse(`Sun Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`);\n  let cT = Date.parse(`Sun Oct 31 2021 ${t}:00 GMT+0530 (India Standard Time)`);\n  let expT = ((cT - sT) / km) * 50000;\n  return {\n    'eta': t ? (new Date(sT + expT)).toLocaleString(): null,\n    'timing': getHourAndMin(cT - sT)\n  };\n}\n\nvar getHourAndMin = (milli) => {\n  let mins = ( milli / (1000 * 60) ) % 60;\n  let hours = Math.floor(milli / (1000 * 60 * 60));\n\n  return `${hours} HRS, ${mins} MINS`;\n}\n\nvar runners = [];\nutils.gettiming().then(function (d) {\n  runners = csvJSON(d);\n  var datalist = document.getElementById(\"runners\");\n  datalist.innerHTML += `<option value=\"- ALL -\"></option>`;\n  runners.forEach(d => {\n    // create the remaining\n    datalist.innerHTML += `<option value=\"${d.NAME} | ${d.BIB}\"></option>`;\n  });\n});\n\nutils.createFeature([77.7048069, 12.9065275], styles.icon2, 'Startpoint');\n\nmap.on('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  if (feature && feature.get('name') && feature.get('name').startsWith('B42SE')) {\n    popup.setPosition(evt.coordinate);\n    let runner = feature.get('name') ? runners.filter(r => r.BIB === feature.get('name')) : null;\n    if (runner && runner.length > 0) runner = runner[0];\n\n    let name = runner.NAME,\n      distance = markerPrediction[runner.BIB] / 1000,\n      exptime = getExpTime(distances[aid_stations[runner.MARK]], runner.TIME),\n      msg = runner.MARK == 17 ? `Finished in ${exptime.timing}` : `ETA: ${exptime.eta ? exptime.eta : 'N/A'}`;\n\n    $(element).popover('dispose');\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: `<div>${name}</div><div> Distance: ${Math.round(distance * 100) / 100} km</div><div>${msg}</div>`\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});\n"],"names":["$067f9ac7e6a7ca12$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$60dc12dce84fb4e2$export$4e734a3b32fb971b","a","b","$60dc12dce84fb4e2$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$60dc12dce84fb4e2$export$292cfa960964f0e0","begin","end","tmp","$60dc12dce84fb4e2$export$8b58be045bf06082","data","extension","Array","isArray","$60dc12dce84fb4e2$export$e9bab7fafb253603","arr1","arr2","len1","$8a0f41c43a3673ec$export$22e23a2304399231","$8a0f41c43a3673ec$export$8f11cee4bdc7e668","$8a0f41c43a3673ec$export$1cd1943b3a73bbe8","$6abcfe1107f4110c$export$817eb92a8194bab0","Error","$6abcfe1107f4110c$var$uidCounter_","$6abcfe1107f4110c$export$5e82334337e0f204","obj","ol_uid","String","$7dbb54b117a1cf02$var$ua","navigator","userAgent","toLowerCase","$7dbb54b117a1cf02$export$8442bdfd18b7b8a6","indexOf","$7dbb54b117a1cf02$export$39dfd62a25e0fe93","$7dbb54b117a1cf02$export$76c0a3b101d93136","$7dbb54b117a1cf02$export$6b83a0446fc26f94","devicePixelRatio","$7dbb54b117a1cf02$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$7dbb54b117a1cf02$export$716f8695eedb9bad","Image","decode","$7dbb54b117a1cf02$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$2fff262e5aaa5918$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$2fff262e5aaa5918$var$__extends","$b38da05ca355968c$export$a7a9523472993e97","assertion","errorCode","$2fff262e5aaa5918$exports","default","$015b48627391618f$var$transformStringDiv","$015b48627391618f$export$adaa4cf7ef1b65be","transform","c","d","e","f","$015b48627391618f$export$5635d7ef4b8fee1c","coordinate","x","y","$015b48627391618f$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$015b48627391618f$export$bd70ea2a93c0fa4","source","mat","det","$015b48627391618f$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$ad72d926c3f8f60f$export$2e2bcd8739ae039","$89c59ad4de1abacc$export$2e2bcd8739ae039","$bc03eabba1c60380$export$8aceca7c77505534","coordinates","extent","$bc03eabba1c60380$export$fe201bb3bbe031e9","ii","$bc03eabba1c60380$export$1f820e3920fa5715","$bc03eabba1c60380$export$ab1029bcae9ddb4a","value","opt_extent","$bc03eabba1c60380$export$9cd59f9826255e47","slice","$bc03eabba1c60380$export$cbe64c389534206f","dx","dy","$bc03eabba1c60380$export$ac68c24d37ca240f","$bc03eabba1c60380$export$805bdfd6d6690e97","$bc03eabba1c60380$export$be866b1e0809b17e","extent1","extent2","$bc03eabba1c60380$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$bc03eabba1c60380$export$958e3e1a02eac4b6","$bc03eabba1c60380$export$3e2152b047719fa1","$bc03eabba1c60380$export$e9bab7fafb253603","$bc03eabba1c60380$export$30570204156ffd18","flatCoordinates","offset","stride","$bc03eabba1c60380$export$f1dab130b92b85a9","min","max","$bc03eabba1c60380$export$f9ed8a3d123a08e2","callback","val","$bc03eabba1c60380$export$8d09f5e2e1bf560d","$bc03eabba1c60380$export$e77c1cf70445e168","$bc03eabba1c60380$export$b84fa077c8b05295","$bc03eabba1c60380$export$cb1538b07e6964ff","$bc03eabba1c60380$export$520c40045967cb15","area","$bc03eabba1c60380$export$dd1bc94b04021eeb","$bc03eabba1c60380$export$3c49c185de0c2bfc","$bc03eabba1c60380$export$c08559766941f856","$bc03eabba1c60380$export$c91255cadecfe081","$bc03eabba1c60380$export$a1cfd206661d0801","corner","$bc03eabba1c60380$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$bc03eabba1c60380$export$72209efa88586d42","intersection","$bc03eabba1c60380$export$7b0a31e10bbff018","$bc03eabba1c60380$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$bc03eabba1c60380$var$_boundingExtentXYs","$31055d1b9520a441$export$7d15b64cf5a3a4c4","$31055d1b9520a441$export$2e2fd1ad24e4d350","cosh","exp","$31055d1b9520a441$export$b9fae0bba9d9094d","log2","log","LOG2E","$31055d1b9520a441$export$251bb0a9cef172e6","t","$31055d1b9520a441$export$88e6ebb4fe54f538","$31055d1b9520a441$export$56cb859c01fa134d","angleInRadians","PI","$31055d1b9520a441$export$cba01ba138429a1d","angleInDegrees","$31055d1b9520a441$export$ba467bec01d66def","r","$31055d1b9520a441$export$3a89f8d6f6bf6c9f","$e7c422877b9f21be$var$HEX_COLOR_RE_","$e7c422877b9f21be$var$NAMED_COLOR_RE_","$e7c422877b9f21be$export$590567be997858b6","color","$e7c422877b9f21be$export$f84e8e69fd4488a5","$e7c422877b9f21be$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$e7c422877b9f21be$export$3004f64547af360e","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$e7c422877b9f21be$export$a3295358bff77e","map","Number","$e7c422877b9f21be$var$fromStringInternal_","$e7c422877b9f21be$export$75093a47a9fa838d","undefined","$40225034defd660b$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$40225034defd660b$var$getKey","set","setSize","maxCacheSize","$40225034defd660b$export$747ccdf771a87ab8","$994767e7dd1824f5$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$cb2fba060bde48c2$export$2e2bcd8739ae039","$9fd8a81dd2da270d$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$9fd8a81dd2da270d$export$42ffd38884aecdac","object","property","$9fd8a81dd2da270d$export$a5c4301012ad6f07","values","$9fd8a81dd2da270d$export$dd1bc94b04021eeb","$f914489141148667$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$f914489141148667$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$f914489141148667$export$2e2bcd8739ae039","$aa92024040bf1682$export$2e2bcd8739ae039","$f6633f08b7021828$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$f6633f08b7021828$export$8d2a95bc11b44725","$f6633f08b7021828$export$b0a21c8b3c1c921","$c0cbcbaec4336b5f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c0cbcbaec4336b5f$var$__extends","changed","getRevision","len","ol_key","$c0cbcbaec4336b5f$export$b7ef3f8527533384","$f914489141148667$exports","$c0cbcbaec4336b5f$export$2e2bcd8739ae039","$cf5fe22d2b1e10b8$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$cf5fe22d2b1e10b8$var$__extends","$cf5fe22d2b1e10b8$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c0cbcbaec4336b5f$exports","$922c5acba07bf4ea$export$2e2bcd8739ae039","$cbea3060042ea1ca$export$2e2bcd8739ae039","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$cbea3060042ea1ca$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$cf5fe22d2b1e10b8$exports","$631a3ac7a77bf46a$export$2e2bcd8739ae039","$edde43a4b47bfec8$export$2e2bcd8739ae039","$620da16844c9eb42$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$620da16844c9eb42$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$620da16844c9eb42$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$cbea3060042ea1ca$exports","$a58318b9dd2ea840$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$a58318b9dd2ea840$export$bb628a54ab399bc9","cosAngle","sinAngle","$a58318b9dd2ea840$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$a58318b9dd2ea840$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$92d7c844d4ccb637$var$MapRenderer","MapRenderer","map_","$92d7c844d4ccb637$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$620da16844c9eb42$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$92d7c844d4ccb637$var$expireIconCache","$92d7c844d4ccb637$export$2e2bcd8739ae039","$51ddd3f45b791663$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$51ddd3f45b791663$var$__extends","$efc90638b7bc7ea3$var$fontRegEx","RegExp","$efc90638b7bc7ea3$var$fontRegExMatchIndex","$efc90638b7bc7ea3$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$efc90638b7bc7ea3$export$52ec625a6a53b6a6","$2d7496fa9caabbf2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$2d7496fa9caabbf2$export$e823f88e4111159a","element","offsetWidth","marginLeft","marginRight","$2d7496fa9caabbf2$export$fc5b8aac72846d1e","offsetHeight","marginTop","marginBottom","$2d7496fa9caabbf2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$2d7496fa9caabbf2$export$1d0aa160432dfea5","$2d7496fa9caabbf2$export$1e1c9bf5a4ffe0d1","lastChild","$ead62238ca089b29$export$e21b4112fdc612fc","$ead62238ca089b29$export$40a9eeef55665a40","$ead62238ca089b29$export$1d36981fcadac93b","console","warn","$ead62238ca089b29$var$measureFont","measureElement","$ead62238ca089b29$var$measureContext","$ead62238ca089b29$export$7fdcec604f0b1fa7","$ead62238ca089b29$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$ead62238ca089b29$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$ead62238ca089b29$export$4feaf6852ff92513","metrics","$ead62238ca089b29$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$ead62238ca089b29$export$915c7ba51467308f","$ead62238ca089b29$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$ead62238ca089b29$var$executeLabelInstructions","drawImage","restore","$ac45132462ff44ba$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$efc90638b7bc7ea3$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$ac45132462ff44ba$var$__extends","event_1","$51ddd3f45b791663$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$2d7496fa9caabbf2$export$caeacfe04f52533a","getDataAtPixel","$92d7c844d4ccb637$exports","$ac45132462ff44ba$export$2e2bcd8739ae039","$02da029b861baf7c$export$2e2bcd8739ae039","$8e42b9310dbadf69$var$Property","$8e42b9310dbadf69$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$8e42b9310dbadf69$var$__extends","$8e42b9310dbadf69$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$8e42b9310dbadf69$export$2e2bcd8739ae039","$0553fe8bfd22a1bf$var$Property","$0553fe8bfd22a1bf$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$8e42b9310dbadf69$exports","setLayers","$0553fe8bfd22a1bf$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$0553fe8bfd22a1bf$export$2e2bcd8739ae039","$f46340e3e83bcbbe$export$2e2bcd8739ae039","MapEvent","$f46340e3e83bcbbe$var$__extends","$9cdecc6f07f1c82b$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$9cdecc6f07f1c82b$var$__extends","getEventPixel","getCoordinateFromPixel","$f46340e3e83bcbbe$exports","$25766752c5fc49ff$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$18642d54b8ad0e01$export$2e2bcd8739ae039","$a4b4e6bda130afb5$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$a4b4e6bda130afb5$var$__extends","emulateClick_","pointerEvent","newEvent1","$9cdecc6f07f1c82b$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$d7f9f88a35f0a4e0$export$2e2bcd8739ae039","$c0258c8795f5009d$export$2e2bcd8739ae039","$2bdee6f11781bfd4$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$2bdee6f11781bfd4$export$2e2bcd8739ae039","$c6465ad941e7edee$export$2e2bcd8739ae039","$0c18e92d41315937$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$0c18e92d41315937$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$0c18e92d41315937$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$aa88f2929ecad61f$export$2e2bcd8739ae039","$37c562c32cc4876e$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$37c562c32cc4876e$export$1482081eec883108","$37c562c32cc4876e$export$2e2bcd8739ae039","$f0b063a48e960f7d$export$2e2bcd8739ae039","$74ab221ad614a19c$export$2e2bcd8739ae039","$cde14d3e5b3eefa9$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$263d400682f1bb22$export$f3928063e5e96d35","$263d400682f1bb22$export$21e6da8a7375dfe8","$263d400682f1bb22$export$ae9d6ed80df710e5","$263d400682f1bb22$export$d26945d1ad52feeb","tan","$263d400682f1bb22$var$EPSG3857Projection","EPSG3857Projection","point","$263d400682f1bb22$var$__extends","$263d400682f1bb22$export$b508d7ad9a891c1b","$263d400682f1bb22$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$263d400682f1bb22$export$8c71322ec28ed6b4","atan","$aa07642712f5d00c$export$21e6da8a7375dfe8","$aa07642712f5d00c$export$1482081eec883108","$aa07642712f5d00c$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$aa07642712f5d00c$var$__extends","$aa07642712f5d00c$export$b508d7ad9a891c1b","$8e4049879c0292b6$var$cache","$45942085a30dd36c$var$transforms","$45942085a30dd36c$export$e16d8520af44a096","destination","sourceCode","destinationCode","$7f47b2b6734ca7c1$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$7f47b2b6734ca7c1$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$083b62b894f423ea$export$dd516654c5f598fb","$083b62b894f423ea$export$83e8ab53904f8022","$083b62b894f423ea$export$59ae956cd3e343f7","$8e4049879c0292b6$export$e16d8520af44a096","$083b62b894f423ea$export$3988ae62b71be9a3","projectionLike","replace","$083b62b894f423ea$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$083b62b894f423ea$export$e3c4995a701c26a3","vertices","$083b62b894f423ea$export$eeb8392580a05a37","projections","$083b62b894f423ea$export$638ad73f7aafb913","$083b62b894f423ea$export$549167224996a0fb","defaultCode","$083b62b894f423ea$export$b15d9668511529b9","opt_projection","$083b62b894f423ea$export$51186ad6e864892a","$083b62b894f423ea$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$45942085a30dd36c$export$3988ae62b71be9a3","$083b62b894f423ea$export$fce0c6cfca85ed96","$083b62b894f423ea$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$083b62b894f423ea$var$userProjection","$083b62b894f423ea$export$3973b77d5f6f2790","$083b62b894f423ea$export$698f563af1ba02a5","$083b62b894f423ea$export$d4b8ec0b96db1ee2","destProjection","$083b62b894f423ea$export$96bfd09e2cffb006","$083b62b894f423ea$export$494be3a3a25689ca","$083b62b894f423ea$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$26d26177e7fc8863$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$26d26177e7fc8863$export$f883a24d5edde77c","$27c0001cb9c6558e$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$27c0001cb9c6558e$var$getSmoothClampedResolution","$27c0001cb9c6558e$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d8071b70f3993eee$export$e20fbacbb41798b","$d8071b70f3993eee$export$f883a24d5edde77c","$2d31f16c1aeb09ad$export$929e5a82286172a6","pow","$2d31f16c1aeb09ad$export$57636bb43b1ccbb0","$2d31f16c1aeb09ad$export$9b47139b511b56e4","$2d31f16c1aeb09ad$export$45db2fc2f15997e7","$263d400682f1bb22$exports","PROJECTIONS","$aa07642712f5d00c$exports","fromEPSG4326","toEPSG4326","$1c7a2c5df90e8078$export$2e2bcd8739ae039","$3af4f838b6cb9dcb$export$b92b2dedcfff79de","opt_dest","dest","$3af4f838b6cb9dcb$export$bb628a54ab399bc9","anchor","anchorX","anchorY","k","$fc8db94e577427ae$var$tmpTransform","$fc8db94e577427ae$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$fc8db94e577427ae$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$bc03eabba1c60380$export$6a4fe494c558c238","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$1892b6578f95292f$var$SimpleGeometry","SimpleGeometry","layout","$1892b6578f95292f$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$1892b6578f95292f$export$6af0c1b4a8549a43","setCoordinates","opt_layout","setLayout","nesting","$1892b6578f95292f$var$getLayoutForStride","$3af4f838b6cb9dcb$export$dcdf75081b88279d","$3af4f838b6cb9dcb$export$d73ee8ef04f5226a","$fc8db94e577427ae$exports","$1892b6578f95292f$export$a3767472617c7861","simpleGeometry","$1892b6578f95292f$export$2e2bcd8739ae039","$093e47809870b18f$var$assignClosest","offset1","offset2","$093e47809870b18f$export$bc2eb611ddf80103","squaredDelta","$093e47809870b18f$export$fbf31c8f2668ed5a","ends","$093e47809870b18f$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$093e47809870b18f$export$5a48a0eefcf14992","$b298c1bf4f956d0d$export$5c4daf67e03c190f","$b298c1bf4f956d0d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$fc2ee5d30907f8e4$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$fc2ee5d30907f8e4$export$51a0620f7a28532b","$fc2ee5d30907f8e4$export$b84e8d2c4920a0c6","$fc2ee5d30907f8e4$export$60a9904b67f8d51b","simplifiedEnds","$e8ff47aa9d91b49d$export$9c0934e4e9c3f61e","opt_coordinates","$e8ff47aa9d91b49d$export$cbb9596fc0f40db2","opt_coordinatess","$e8ff47aa9d91b49d$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$7ef6d601a5e3636e$export$3c5e1905f889266e","twiceArea","$7ef6d601a5e3636e$export$7a8ee541dfdf2ed5","$d6d9c1fccdf63a8e$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d6d9c1fccdf63a8e$var$__extends","getArea","$1892b6578f95292f$exports","$e5227bc580dffd9f$var$Point","Point","$e5227bc580dffd9f$var$__extends","$b298c1bf4f956d0d$export$60815ead40ec79ab","$e5227bc580dffd9f$export$2e2bcd8739ae039","$156d3f481f27dbb0$export$cedabedc7ac0e138","$156d3f481f27dbb0$export$949a7a3a4b6f34fa","wn","$156d3f481f27dbb0$export$ae868c0f6acc3355","$0a2c1f639869d3f6$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$67ebe9c6397bae8c$export$4b80e395e36b5a56","ret","$2d1dfd0238384896$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$bc03eabba1c60380$export$a6a5a7a461419425","$2d1dfd0238384896$export$76dcd8f8f83b6ddb","$2d1dfd0238384896$export$830a0dafbb2ef1c5","$b9de3574b905e766$export$741858880c96b18c","$1100c5443dc4f0ca$export$318f2842ed17e094","edge","$1100c5443dc4f0ca$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$1100c5443dc4f0ca$export$b71b604ddfc778c7","$6a3c804b3b97d8e3$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$6a3c804b3b97d8e3$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e5227bc580dffd9f$exports","getLinearRingCount","getLinearRing","$d6d9c1fccdf63a8e$exports","getLinearRings","linearRings","$6a3c804b3b97d8e3$export$2e2bcd8739ae039","$6a3c804b3b97d8e3$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$6a3c804b3b97d8e3$export$c16b671815801c75","$6a3c804b3b97d8e3$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$6a3c804b3b97d8e3$export$87d6a1539a56e47f","getRadius","startAngle","$1d85829e4f162dd4$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$1d85829e4f162dd4$var$__extends","resolutionConstraintInfo","$1d85829e4f162dd4$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$1d85829e4f162dd4$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$1d85829e4f162dd4$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$1d85829e4f162dd4$export$ee75376562060184","setHint","updateAnimations_","$1d85829e4f162dd4$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$1d85829e4f162dd4$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$6a3c804b3b97d8e3$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$27c0001cb9c6558e$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$27c0001cb9c6558e$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$1d85829e4f162dd4$export$2e2bcd8739ae039","$d84e394f29cb16d9$export$622c471beb1693c7","$d84e394f29cb16d9$export$a71a825ff42fb8e1","$3c4fb7ee83979696$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$0553fe8bfd22a1bf$exports","view","$1d85829e4f162dd4$exports","$3c4fb7ee83979696$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$0c18e92d41315937$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$3c4fb7ee83979696$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$a4b4e6bda130afb5$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","parseFloat","getClientRects","$3c4fb7ee83979696$export$2e2bcd8739ae039","$3a4d01a1be326d12$var$Control","Control","target_","listenerKeys","$3a4d01a1be326d12$var$__extends","mapEvent","$3a4d01a1be326d12$export$2e2bcd8739ae039","$722ae5129753cc75$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$722ae5129753cc75$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$3a4d01a1be326d12$exports","$722ae5129753cc75$export$2e2bcd8739ae039","$ff05a73c45f7d002$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$ff05a73c45f7d002$var$__extends","resetNorth_","$e76ca1c65f4ba421$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$e76ca1c65f4ba421$var$__extends","zoomByDelta_","currentZoom","newZoom","$19499ac299c670e1$export$2e2bcd8739ae039","$b669ebacdd1aa246$export$4c486572e961a974","$b669ebacdd1aa246$export$ace321ff2a8016ef","$b669ebacdd1aa246$export$2e2bcd8739ae039","Interaction","setActive","$b669ebacdd1aa246$var$__extends","active","$d1275b80afe8d488$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$d1275b80afe8d488$var$__extends","stopEvent","shiftKey","$b669ebacdd1aa246$exports","zoomByDelta","$b542e4e2ba2e782c$export$e2a20c553f6c85ce","$b542e4e2ba2e782c$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$b542e4e2ba2e782c$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$b542e4e2ba2e782c$var$isPointerDraggingEvent","$3e5e17450c53a869$export$84bf76cd7afc7469","conditions","pass","$3e5e17450c53a869$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$3e5e17450c53a869$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$3e5e17450c53a869$export$d7ddd398f22d79ef","$3e5e17450c53a869$export$ba9e5d519bc326ca","$3e5e17450c53a869$export$1238ad6b5e7fff70","$3e5e17450c53a869$export$fdc892d0d8fe3bfb","$3e5e17450c53a869$export$5d31fe68a477cfbb","$3e5e17450c53a869$export$e5570ca80cd8fd54","tagName","$3e5e17450c53a869$export$abb7acbfa76bf3c4","pointerType","$3e5e17450c53a869$export$189f0d593022b199","isPrimary","$29127ef89ca20c43$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$29127ef89ca20c43$var$__extends","centroid","$b542e4e2ba2e782c$exports","update","getDistance","getAngle","centerpx","$b082c60249c1f369$export$2e2bcd8739ae039","DragRotate","lastAngle_","$b082c60249c1f369$var$__extends","$c9cf26dd6067738e$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c9cf26dd6067738e$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$194c5ef596c834b9$var$DragBoxEventType","$194c5ef596c834b9$export$7053c33c051365ea","DragBoxEvent","$194c5ef596c834b9$var$__extends","$194c5ef596c834b9$export$2e2bcd8739ae039","DragBox","box_","$c9cf26dd6067738e$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$17d0f21fd121646e$export$2e2bcd8739ae039","DragZoom","out_","out","$17d0f21fd121646e$var$__extends","factor","$194c5ef596c834b9$exports","$baf63000c12bbd52$export$2e2bcd8739ae039","$2cdf72f37b05b43e$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$2cdf72f37b05b43e$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$34145cca5f88ff12$export$2e2bcd8739ae039","KeyboardZoom","$34145cca5f88ff12$var$__extends","charCode","charCodeAt","$41d16319c8c1b0db$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$85630051eb686f9c$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$85630051eb686f9c$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$85630051eb686f9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$e2293bab940f846d$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$e2293bab940f846d$var$__extends","rotationDelta","touch0","touch1","$e117dba55daaf75d$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$e117dba55daaf75d$var$__extends","scaleDelta","$ed77609b86999db4$export$2e2bcd8739ae039","Map","$e76ca1c65f4ba421$exports","zoomOptions","$ff05a73c45f7d002$exports","rotateOptions","attribution","$722ae5129753cc75$exports","attributionOptions","$92710edab151fa92$export$ebe90cb607ad99e","altShiftDragRotate","$b082c60249c1f369$exports","doubleClickZoom","$d1275b80afe8d488$exports","zoomDelta","zoomDuration","dragPan","$29127ef89ca20c43$exports","pinchRotate","$e2293bab940f846d$exports","pinchZoom","$e117dba55daaf75d$exports","keyboard","$2cdf72f37b05b43e$exports","$34145cca5f88ff12$exports","mouseWheelZoom","$85630051eb686f9c$exports","shiftDragZoom","$17d0f21fd121646e$exports","$9c22ccf5df5bef28$export$ebe90cb607ad99e","$ed77609b86999db4$var$__extends","$ac45132462ff44ba$exports","$3c4fb7ee83979696$exports","$75fadae132434ff9$exports","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","u1","m1","d1","o","h2","u","p","t2","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","define","amd","RBush","$c2da7fea2c1ff81d$export$2e2bcd8739ae039","$8fda6b469298ad77$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$2f0bf5da26a07ef5$export$dc5b1400ac3a10a8","$38179f47cf211f8b$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$38179f47cf211f8b$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$38179f47cf211f8b$export$2e2bcd8739ae039","$afd1bb251be076c3$export$2e2bcd8739ae039","CircleStyle","$afd1bb251be076c3$var$__extends","setRadius","$38179f47cf211f8b$exports","$b405df08252d2c0e$export$2e2bcd8739ae039","Fill","color_","setColor","$65c07fba8c3910be$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$63a9295e5bb8671e$var$Style","Style","geometryFunction_","$63a9295e5bb8671e$var$defaultGeometryFunction","setGeometry","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$63a9295e5bb8671e$var$defaultStyles","$63a9295e5bb8671e$export$6865c5ac2f5ce8b6","$afd1bb251be076c3$exports","$63a9295e5bb8671e$export$2e2bcd8739ae039","$4f5ef8971fcfeff5$var$Property","$4f5ef8971fcfeff5$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$4f5ef8971fcfeff5$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$63a9295e5bb8671e$export$c314ea3f6b164147","$5c1c1d9875ca9b5a$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$5c1c1d9875ca9b5a$export$f21891651e408226","$5c1c1d9875ca9b5a$export$7a98aa5364d62ba8","$5c1c1d9875ca9b5a$export$9f746cc58a899a00","$5c1c1d9875ca9b5a$export$89b10f327e413e71","$5c1c1d9875ca9b5a$export$2e2bcd8739ae039","$0783f8f636a3deb8$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$aa7612cd1ed43762$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$aa7612cd1ed43762$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$aa7612cd1ed43762$export$2e2bcd8739ae039","$d3684a7b93a5c985$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$d3684a7b93a5c985$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$aa7612cd1ed43762$exports","$e66d8cb7f1df8ab2$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$e66d8cb7f1df8ab2$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$e66d8cb7f1df8ab2$export$2e2bcd8739ae039","$9b5be8443f500d91$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$9b5be8443f500d91$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$9b5be8443f500d91$export$2e2bcd8739ae039","$3f4fab155a01b845$export$2e2bcd8739ae039","$9db16417cc48bc63$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$89f33b58063ab076$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$89f33b58063ab076$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$89f33b58063ab076$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$89f33b58063ab076$export$2e2bcd8739ae039","$9f5babc1673bf9e3$var$BATCH_CONSTRUCTORS","Circle","$9b5be8443f500d91$exports","Default","$d3684a7b93a5c985$exports","LineString","$e66d8cb7f1df8ab2$exports","Text","$89f33b58063ab076$exports","$9f5babc1673bf9e3$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$28ced5248e78fb1a$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$28ced5248e78fb1a$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$448cff2e6bd50582$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$448cff2e6bd50582$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$28ced5248e78fb1a$exports","$ed616e4a616d3df2$export$2e2bcd8739ae039","$2570f6a85d4bc241$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$6e1933355c1bf787$export$153f8c6b4d8caebc","$e18bfe9210b6cd16$var$tmpExtent","$e18bfe9210b6cd16$var$p1","$e18bfe9210b6cd16$var$p2","$e18bfe9210b6cd16$var$p3","$e18bfe9210b6cd16$var$p4","$e18bfe9210b6cd16$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$e18bfe9210b6cd16$var$rtlRegEx","fromCharCode","$e18bfe9210b6cd16$var$horizontalTextAlign","align","test","TEXT_ALIGN","$e18bfe9210b6cd16$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$ead62238ca089b29$export$a539decdd6096c57","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$e18bfe9210b6cd16$export$2e2bcd8739ae039","$d84ee030d6472cc6$var$ORDER","$d84ee030d6472cc6$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$d84ee030d6472cc6$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$d84ee030d6472cc6$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$d84ee030d6472cc6$export$2e2bcd8739ae039","$7882a8fa1e0226c3$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7882a8fa1e0226c3$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$7882a8fa1e0226c3$export$2e2bcd8739ae039","$224c466b7a9de8b0$export$2e2bcd8739ae039","$efb8df0c4ddfb29d$export$2e2bcd8739ae039","$f6fdec036521119c$export$2e2bcd8739ae039","ImageBase","$f6fdec036521119c$var$__extends","$f114746f48c74bfb$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$f114746f48c74bfb$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$f6fdec036521119c$exports","$d9e9b5972efe3afd$var$taintedTestContext","$d9e9b5972efe3afd$var$IconImage","IconImage","imageState_","tainted_","$d9e9b5972efe3afd$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$f114746f48c74bfb$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$d9e9b5972efe3afd$export$3988ae62b71be9a3","$ce79861ca5e99e60$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$d9e9b5972efe3afd$exports","offset_","offsetOrigin_","offsetOrigin","$ce79861ca5e99e60$var$__extends","setAnchor","iconImageSize","$6aad53d184c4d8f6$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$6aad53d184c4d8f6$export$531ddd8416d52dfc","feature1","feature2","$6aad53d184c4d8f6$export$bdacc5b475012edb","$6aad53d184c4d8f6$export$36f470a33a42f413","$6aad53d184c4d8f6$var$renderGeometry","$6aad53d184c4d8f6$var$renderFeatureInternal","getGeometries","$de577edce248389a$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$de577edce248389a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$015b48627391618f$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$7882a8fa1e0226c3$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$ce79861ca5e99e60$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$6bbb0872d842d209$export$bd05e394339d469","resultFeatures","$6bbb0872d842d209$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$bc03eabba1c60380$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$6aad53d184c4d8f6$export$75084a70d324c1e6","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$448cff2e6bd50582$exports","$de577edce248389a$export$2e2bcd8739ae039","$9f8e286e234797b5$export$2e2bcd8739ae039","VectorLayer","$9f8e286e234797b5$var$__extends","$de577edce248389a$exports","$4f5ef8971fcfeff5$exports","$54c8b58106ff6025$var$RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$54c8b58106ff6025$export$2e2bcd8739ae039","$866685fb1d7542ba$var$adaptAttributions","attributionLike","$866685fb1d7542ba$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$866685fb1d7542ba$var$__extends","getContextOptions","refresh","setAttributions","setState","$026ef9306a53448b$export$2e2bcd8739ae039","$0c34192f34b7905c$export$84bf76cd7afc7469","$6b2c60f39430112a$export$2e2bcd8739ae039","$46f7a338feacf07e$var$withCredentials","$46f7a338feacf07e$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$46f7a338feacf07e$export$441d7b57adab24d0","dataProjection","addFeatures","$770df7aa96a59b92$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$770df7aa96a59b92$var$__extends","$770df7aa96a59b92$var$VectorSource","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$866685fb1d7542ba$exports","$770df7aa96a59b92$export$2e2bcd8739ae039","$b36f5815a624073b$export$2e2bcd8739ae039","$331f7c3db63eba4a$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$331f7c3db63eba4a$var$__extends","getPreload","getUseInterimTilesOnError","$429f879763f86b24$var$TileRange","TileRange","containsTileRange","getHeight","$429f879763f86b24$export$958e3e1a02eac4b6","$429f879763f86b24$export$2e2bcd8739ae039","$fc4508aaf02369b6$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$fc4508aaf02369b6$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","endTransition","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$fc4508aaf02369b6$export$2e2bcd8739ae039","$27512c06a847e2c7$export$2e2bcd8739ae039","TileLayer","$27512c06a847e2c7$var$__extends","$fc4508aaf02369b6$exports","$331f7c3db63eba4a$exports","$50e9f8fd6ffbdc36$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$50e9f8fd6ffbdc36$var$__extends","release","refreshInterimChain","getTileCoord","$3a11abda2dfcddda$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$3a11abda2dfcddda$var$__extends","naturalWidth","naturalHeight","$50e9f8fd6ffbdc36$exports","$821eed05733f4176$var$brokenDiagonalRendering_","$5e15b4e30b78af8f$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$166b363f3d713487$export$ab6c91696bd3263e","msImageSmoothingEnabled","$821eed05733f4176$var$drawTestTriangle","v1","u2","v2","$821eed05733f4176$var$verifyBrokenDiagonalRendering","$821eed05733f4176$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$821eed05733f4176$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$31055d1b9520a441$export$8240f01c446270e6","$821eed05733f4176$var$isBrokenDiagonalRendering","ud","vd","steps","$c51038d738c357d3$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$821eed05733f4176$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$c51038d738c357d3$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$6481cf675b9ee3e6$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$6481cf675b9ee3e6$export$2e2bcd8739ae039","$883b48f67f941a69$export$958e3e1a02eac4b6","opt_tileCoord","$883b48f67f941a69$export$92d0df0f1d25c63c","$883b48f67f941a69$export$a47fb462a08de82f","$b383aeae07df2cb9$export$2e2bcd8739ae039","TileCache","$b383aeae07df2cb9$var$__extends","pruneExceptNewestZ","$883b48f67f941a69$export$a807b7874eb66454","$bbf7f7732124b0b6$export$2e2bcd8739ae039","$3a2df936479a540c$var$tmpTileCoord","$3a2df936479a540c$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$3a2df936479a540c$export$2e2bcd8739ae039","$a8e4a39ef4fbbded$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$a8e4a39ef4fbbded$var$resolutionsFromExtent","$a8e4a39ef4fbbded$export$ce88871416242df8","$a8e4a39ef4fbbded$export$7b5b6ef8fd55fac4","$a8e4a39ef4fbbded$export$a251b12f5601c16f","opt_maxResolution","half","$795ef51aca35207a$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$b383aeae07df2cb9$exports","tmpSize","tileOptions","$795ef51aca35207a$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$a8e4a39ef4fbbded$export$39a9ce3624977b84","$883b48f67f941a69$export$60bedf8e3e3c3dbe","$795ef51aca35207a$export$c571855c51e6c4b6","TileSourceEvent","$795ef51aca35207a$export$2e2bcd8739ae039","$ad04c240cf3bec30$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$ad04c240cf3bec30$export$436f44dbcc31fea3","templates","tileUrlFunctions","$883b48f67f941a69$export$d6af199866bfb566","$ad04c240cf3bec30$export$4229b1d9af69b3be","$ab834229f220c892$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$ab834229f220c892$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$795ef51aca35207a$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$ad04c240cf3bec30$export$2a1fa079bfd73dde","$ab834229f220c892$export$2e2bcd8739ae039","$8dc3b22dccd9c900$var$TileImage","TileImage","$8dc3b22dccd9c900$var$defaultTileLoadFunction","tileClass","$3a11abda2dfcddda$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$8dc3b22dccd9c900$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$c51038d738c357d3$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ab834229f220c892$exports","imageTile","$8dc3b22dccd9c900$export$2e2bcd8739ae039","$79b213906de4bdc0$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$a8e4a39ef4fbbded$export$38500bbeccc864ff","$79b213906de4bdc0$var$__extends","$8dc3b22dccd9c900$exports","$aea6103379d651a4$export$4de8a5e77eb994ad","$aea6103379d651a4$export$2e2bcd8739ae039","OSM","$aea6103379d651a4$var$__extends","$79b213906de4bdc0$exports","$3bad8eea3a6b790b$export$bb06ddfd5d66e02e","$3bad8eea3a6b790b$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$3bad8eea3a6b790b$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$82e8f33390de051e$export$687ff82efd78795b","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$60dc12dce84fb4e2$export$2e0ae67339d5f1ac","$82e8f33390de051e$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$bdae8a65b7e45712$export$2e2bcd8739ae039","flatMidpoint_","flatMidpointRevision_","$bdae8a65b7e45712$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$7404dec6efd700e2$export$2e2bcd8739ae039","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$7404dec6efd700e2$export$7beeea566b560d4","write","transformed","decimals","power_1","$b5c2ecee83674f81$var$getText","$b5c2ecee83674f81$export$2e2bcd8739ae039","TextFeature","$b5c2ecee83674f81$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$a4672238537a0791$export$42498d737b05108d","opt_destOffset","destOffset","$67d64d5135a336eb$export$f7f7aa721fb1892a","numbers","opt_factor","lastNumbers","num","$67d64d5135a336eb$export$a184f75f22d08c53","$67d64d5135a336eb$export$6dd1849a130b98c5","encoded","$67d64d5135a336eb$export$699b9297c43854f5","$67d64d5135a336eb$export$3625268a2f372206","$67d64d5135a336eb$export$8f60e357408ce6f6","$67d64d5135a336eb$export$c4734ac5b9f48936","$67d64d5135a336eb$export$511e57c5f7e959a9","$67d64d5135a336eb$export$62547fcf9689f3ed","current","$67d64d5135a336eb$export$2e2bcd8739ae039","Polyline","factor_","geometryLayout_","geometryLayout","$67d64d5135a336eb$var$__extends","$3bad8eea3a6b790b$exports","getStrideForLayout","$bdae8a65b7e45712$exports","$b5c2ecee83674f81$exports","$8595c776cb99513f$export$2e2bcd8739ae039","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$6e245f9dda66e153$export$2e2bcd8739ae039","$e9db24851ac2c1e4$var$Property","$e9db24851ac2c1e4$export$2e2bcd8739ae039","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$e9db24851ac2c1e4$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$1624774c7dbece9a$var$coordinates","$1624774c7dbece9a$var$distances","$1624774c7dbece9a$exports","aid_stations","getLatLongFromDistance","$3242251a3f5203a1$var$vectorSource","$770df7aa96a59b92$exports","$3242251a3f5203a1$var$vectorLayer","$9f8e286e234797b5$exports","$3242251a3f5203a1$var$styles","route","rectangle","SQRT2","icon","icon2","$3242251a3f5203a1$var$map","$ed77609b86999db4$exports","$27512c06a847e2c7$exports","$aea6103379d651a4$exports","$3242251a3f5203a1$var$utils","fetch","$3242251a3f5203a1$var$element","$3242251a3f5203a1$var$popup","$e9db24851ac2c1e4$exports","$3242251a3f5203a1$var$lines","$3242251a3f5203a1$var$markerFeature","$3242251a3f5203a1$var$markerPrediction","splits","runner","$3242251a3f5203a1$var$runners","NAME","$","popover","MARK","TIME","sT","parse","eT","d_p","random","latlong","$3242251a3f5203a1$var$getPrediction","BIB","$3242251a3f5203a1$var$getHourAndMin","milli","mins","csv","headers","currentline","$3242251a3f5203a1$var$csvJSON","datalist","startsWith","exptime","km","cT","eta","toLocaleString","timing","$3242251a3f5203a1$var$getExpTime","msg","html","content"],"version":3,"file":"index.6a70b2b4.js.map"}